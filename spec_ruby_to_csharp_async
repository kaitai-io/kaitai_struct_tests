#!/usr/bin/env ruby

s = $stdin.read

raise "Unable to detect source name" unless s =~ /require ['"](.*?)['"]/
src_name = $1

raise "Unable to detect class name" unless s =~ /RSpec\.describe (.*?) do/
class_name = $1

s.gsub!(/^.*it .parses test properly. do\n/m, '')

src_file = '???'
s.gsub!(/^\s*r = (.*?)\.from_file\('src\/(.*?)'\)$/) {
  src_file = $2
  ''
}

s = s[2..-1] if s[0..1] == "\n\n"

# under_score_case => lowerCamelCase
s.gsub!(/\.([a-zA-Z0-9_]+)/) {
  arg = $1
  w = arg.split(/_/)
  w.map! { |x| x.capitalize }
  ".#{w.join}"
}

s.gsub!(/expect\((.*?)\)\.To eq\(? *(.*?)\)?$/, 'Assert.AreEqual(\1, \2);')
s.gsub!(/^( +)/) { $1 * 2 }
s.gsub!(/^/, '    ')
s.gsub!(/end$/, '}')

puts <<__EOF__
using NUnit.Framework;
using System.Threading.Tasks;

namespace Kaitai
{
    [TestFixture]
    public class Spec#{class_name} : CommonSpec
    {
        [Test]
        public async Task Test#{class_name}()
        {
            var r = #{class_name}.FromFile(SourceFile("#{src_file}"));
            await r.ReadAsync();
__EOF__

print s
puts "}"
