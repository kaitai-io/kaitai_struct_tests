const std = @import("std");

pub fn build(b: *std.Build) void {
    const target = b.standardTargetOptions(.{});
    const optimize = b.standardOptimizeOption(.{});
    const no_bin = b.option(bool, "no-bin", "skip emitting binary") orelse false;

    // Create a test executable.
    const tests_exe = b.addTest(.{
        .root_module = b.createModule(.{
            .root_source_file = b.path("tests.zig"),
            .target = target,
            .optimize = optimize,
        }),
    });

    // A run step that will run the test executable.
    const run_tests_exe = b.addRunArtifact(tests_exe);

    // A top level step for running all tests.
    const test_step = b.step("test", "Build and run tests");
    if (no_bin) {
        test_step.dependOn(&tests_exe.step);
    } else {
        test_step.dependOn(&run_tests_exe.step);
    }
}
