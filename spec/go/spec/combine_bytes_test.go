// Autogenerated from KST: please remove this line if doing any edits by hand!

package spec

import (
	"runtime/debug"
	"os"
	"testing"
	"github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"
	. "test_formats"
	"github.com/stretchr/testify/assert"
)

func TestCombineBytes(t *testing.T) {
	defer func() {
		if r := recover(); r != nil {
			debug.PrintStack()
			t.Fatal("unexpected panic:", r)
		}
	}()
	f, err := os.Open("../../src/term_strz.bin")
	if err != nil {
		t.Fatal(err)
	}
	s := kaitai.NewStream(f)
	var r CombineBytes
	err = r.Read(s, &r, &r)
	if err != nil {
		t.Fatal(err)
	}

	assert.EqualValues(t, []uint8{102, 111, 111}, r.BytesTerm)
	assert.EqualValues(t, []uint8{98, 97, 114, 124}, r.BytesLimit)
	assert.EqualValues(t, []uint8{98, 97, 122, 64}, r.BytesEos)
	tmp1, err := r.BytesCalc()
	if err != nil {
		t.Fatal(err)
	}
	assert.EqualValues(t, []uint8{82, 110, 68}, tmp1)
	tmp2, err := r.TermOrLimit()
	if err != nil {
		t.Fatal(err)
	}
	assert.EqualValues(t, []uint8{102, 111, 111}, tmp2)
	tmp3, err := r.TermOrEos()
	if err != nil {
		t.Fatal(err)
	}
	assert.EqualValues(t, []uint8{98, 97, 122, 64}, tmp3)
	tmp4, err := r.TermOrCalc()
	if err != nil {
		t.Fatal(err)
	}
	assert.EqualValues(t, []uint8{102, 111, 111}, tmp4)
	tmp5, err := r.LimitOrEos()
	if err != nil {
		t.Fatal(err)
	}
	assert.EqualValues(t, []uint8{98, 97, 114, 124}, tmp5)
	tmp6, err := r.LimitOrCalc()
	if err != nil {
		t.Fatal(err)
	}
	assert.EqualValues(t, []uint8{82, 110, 68}, tmp6)
	tmp7, err := r.EosOrCalc()
	if err != nil {
		t.Fatal(err)
	}
	assert.EqualValues(t, []uint8{98, 97, 122, 64}, tmp7)
}
