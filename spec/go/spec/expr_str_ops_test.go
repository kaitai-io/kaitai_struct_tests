// Autogenerated from KST: please remove this line if doing any edits by hand!

package spec

import (
	"runtime/debug"
	"os"
	"testing"
	"github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"
	. "test_formats"
	"github.com/stretchr/testify/assert"
)

func TestExprStrOps(t *testing.T) {
	defer func() {
		if r := recover(); r != nil {
			debug.PrintStack()
			t.Fatal("unexpected panic:", r)
		}
	}()
	f, err := os.Open("../../src/term_strz.bin")
	if err != nil {
		t.Fatal(err)
	}
	s := kaitai.NewStream(f)
	var r ExprStrOps
	err = r.Read(s, &r, &r)
	if err != nil {
		t.Fatal(err)
	}

	assert.EqualValues(t, "foo|b", r.One)
	tmp1, err := r.OneLen()
	if err != nil {
		t.Fatal(err)
	}
	assert.EqualValues(t, 5, tmp1)
	tmp2, err := r.OneRev()
	if err != nil {
		t.Fatal(err)
	}
	assert.EqualValues(t, "b|oof", tmp2)
	tmp3, err := r.OneSubstr0To3()
	if err != nil {
		t.Fatal(err)
	}
	assert.EqualValues(t, "foo", tmp3)
	tmp4, err := r.OneSubstr2To5()
	if err != nil {
		t.Fatal(err)
	}
	assert.EqualValues(t, "o|b", tmp4)
	tmp5, err := r.OneSubstr3To3()
	if err != nil {
		t.Fatal(err)
	}
	assert.EqualValues(t, "", tmp5)
	tmp6, err := r.Two()
	if err != nil {
		t.Fatal(err)
	}
	assert.EqualValues(t, "0123456789", tmp6)
	tmp7, err := r.TwoLen()
	if err != nil {
		t.Fatal(err)
	}
	assert.EqualValues(t, 10, tmp7)
	tmp8, err := r.TwoRev()
	if err != nil {
		t.Fatal(err)
	}
	assert.EqualValues(t, "9876543210", tmp8)
	tmp9, err := r.TwoSubstr0To7()
	if err != nil {
		t.Fatal(err)
	}
	assert.EqualValues(t, "0123456", tmp9)
	tmp10, err := r.TwoSubstr4To10()
	if err != nil {
		t.Fatal(err)
	}
	assert.EqualValues(t, "456789", tmp10)
	tmp11, err := r.TwoSubstr0To10()
	if err != nil {
		t.Fatal(err)
	}
	assert.EqualValues(t, "0123456789", tmp11)
	tmp12, err := r.ToIAttr()
	if err != nil {
		t.Fatal(err)
	}
	assert.EqualValues(t, 9173, tmp12)
	tmp13, err := r.ToIR10()
	if err != nil {
		t.Fatal(err)
	}
	assert.EqualValues(t, -72, tmp13)
	tmp14, err := r.ToIR2()
	if err != nil {
		t.Fatal(err)
	}
	assert.EqualValues(t, 86, tmp14)
	tmp15, err := r.ToIR8()
	if err != nil {
		t.Fatal(err)
	}
	assert.EqualValues(t, 465, tmp15)
	tmp16, err := r.ToIR16()
	if err != nil {
		t.Fatal(err)
	}
	assert.EqualValues(t, 18383, tmp16)
}
