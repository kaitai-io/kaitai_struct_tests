# Autogenerated from KST: please remove this line if doing any edits by hand!

package spec::perl::TestReservedPythonKeywords;

use strict;
use warnings;
use base qw(Test::Class);
use Test::More;
use ReservedPythonKeywords;

sub test_reserved_python_keywords: Test(45) {
    my $r = ReservedPythonKeywords->from_file('src/full256.bin');
    is($r->and(), 1, 'Equals');
    is($r->as(), 2, 'Equals');
    is($r->assert(), 3, 'Equals');
    is($r->async(), 4, 'Equals');
    is($r->await(), 5, 'Equals');
    is($r->break(), 6, 'Equals');
    is($r->class(), 7, 'Equals');
    is($r->continue(), 8, 'Equals');
    is($r->def(), 9, 'Equals');
    is($r->del(), 10, 'Equals');
    is($r->elif(), 11, 'Equals');
    is($r->else(), 12, 'Equals');
    is($r->except(), 13, 'Equals');
    is($r->false(), 14, 'Equals');
    is($r->finally(), 15, 'Equals');
    is($r->for(), 16, 'Equals');
    is($r->from(), 17, 'Equals');
    is($r->global(), 18, 'Equals');
    is($r->if(), 19, 'Equals');
    is($r->import(), 20, 'Equals');
    is($r->in(), 21, 'Equals');
    is($r->is(), 22, 'Equals');
    is($r->lambda(), 23, 'Equals');
    is($r->none(), 24, 'Equals');
    is($r->nonlocal(), 25, 'Equals');
    is($r->not(), 26, 'Equals');
    is($r->or(), 27, 'Equals');
    is($r->pass(), 28, 'Equals');
    is($r->raise(), 29, 'Equals');
    is($r->return(), 30, 'Equals');
    is($r->true(), 31, 'Equals');
    is($r->try(), 32, 'Equals');
    is($r->while(), 33, 'Equals');
    is($r->with(), 34, 'Equals');
    is($r->yield(), 35, 'Equals');
    is($r->keyword_struct_def()->while(), 36, 'Equals');
    is($r->keyword_struct_def()->for(), 37, 'Equals');
    is($r->keyword_struct_def()->with(), 38, 'Equals');
    is($r->keyword_struct_false()->pass(), 39, 'Equals');
    is($r->keyword_enum(), $ReservedPythonKeywords::TRUE_AND, 'Equals');
    is($r->keyword_nested_enum(), $ReservedPythonKeywords::Def::TRY_EXCEPT, 'Equals');
    is($r->inst_keyword_seq(), 3, 'Equals');
    is($r->inst_keyword_enum(), $ReservedPythonKeywords::TRUE_IF, 'Equals');
    is($r->inst_keyword_enum_to_i(), 6, 'Equals');
    is($r->keyword_struct_def()->return(), 73, 'Equals');
}

Test::Class->runtests;
