// Autogenerated from KST: please remove this line if doing any edits by hand!

package io.kaitai.struct.spec;

import io.kaitai.struct.testformats.SwitchManualEnumInvalidElse;
import org.testng.annotations.Test;
import static org.testng.Assert.*;
public class TestSwitchManualEnumInvalidElse extends CommonSpec {

    @Test
    public void testSwitchManualEnumInvalidElse() throws Exception {
        SwitchManualEnumInvalidElse r = SwitchManualEnumInvalidElse.fromFile(SRC_DIR + "enum_negative.bin");

        assertIntEquals(r.opcodes().size(), 2);
        assertEquals(r.opcodes().get((int) 0).code(), SwitchManualEnumInvalidElse.Opcode.CodeEnum.byId(255));
        assertTrue(SwitchManualEnumInvalidElse.Opcode.CodeEnum.byId(255) instanceof SwitchManualEnumInvalidElse.Opcode.CodeEnum.Unknown);
        assertIntEquals(((SwitchManualEnumInvalidElse.Opcode.Defval) (r.opcodes().get((int) 0).body())).value(), 123);
        assertEquals(r.opcodes().get((int) 1).code(), SwitchManualEnumInvalidElse.Opcode.CodeEnum.byId(1));
        assertTrue(SwitchManualEnumInvalidElse.Opcode.CodeEnum.byId(1) instanceof SwitchManualEnumInvalidElse.Opcode.CodeEnum.Unknown);
        assertIntEquals(((SwitchManualEnumInvalidElse.Opcode.Defval) (r.opcodes().get((int) 1).body())).value(), 123);
    }
}
