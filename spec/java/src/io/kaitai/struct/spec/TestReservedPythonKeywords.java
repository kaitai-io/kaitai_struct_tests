// Autogenerated from KST: please remove this line if doing any edits by hand!

package io.kaitai.struct.spec;

import io.kaitai.struct.testformats.ReservedPythonKeywords;
import org.testng.annotations.Test;
import static org.testng.Assert.*;
public class TestReservedPythonKeywords extends CommonSpec {

    @Test
    public void testReservedPythonKeywords() throws Exception {
        ReservedPythonKeywords r = ReservedPythonKeywords.fromFile(SRC_DIR + "full256.bin");
        assertIntEquals(r.and(), 0);
        assertIntEquals(r.as(), 1);
        assertIntEquals(r.assert(), 2);
        assertIntEquals(r.async(), 3);
        assertIntEquals(r.await(), 4);
        assertIntEquals(r.break(), 5);
        assertIntEquals(r.class(), 6);
        assertIntEquals(r.continue(), 7);
        assertIntEquals(r.def(), 8);
        assertIntEquals(r.del(), 9);
        assertIntEquals(r.elif(), 10);
        assertIntEquals(r.else(), 11);
        assertIntEquals(r.except(), 12);
        assertIntEquals(r.false(), 13);
        assertIntEquals(r.finally(), 14);
        assertIntEquals(r.for(), 15);
        assertIntEquals(r.from(), 16);
        assertIntEquals(r.global(), 17);
        assertIntEquals(r.if(), 18);
        assertIntEquals(r.import(), 19);
        assertIntEquals(r.in(), 20);
        assertIntEquals(r.is(), 21);
        assertIntEquals(r.lambda(), 22);
        assertIntEquals(r.none(), 23);
        assertIntEquals(r.nonlocal(), 24);
        assertIntEquals(r.not(), 25);
        assertIntEquals(r.or(), 26);
        assertIntEquals(r.pass(), 27);
        assertIntEquals(r.raise(), 28);
        assertIntEquals(r.return(), 29);
        assertIntEquals(r.true(), 30);
        assertIntEquals(r.try(), 31);
        assertIntEquals(r.while(), 32);
        assertIntEquals(r.with(), 33);
        assertIntEquals(r.yield(), 34);
        assertIntEquals(r.keywordStructDef().while(), 35);
        assertIntEquals(r.keywordStructDef().for(), 36);
        assertIntEquals(r.keywordStructDef().with(), 37);
        assertIntEquals(r.keywordStructFalse().pass(), 38);
        assertEquals(r.keywordEnum(), ReservedPythonKeywords.True.AND);
        assertEquals(r.keywordNestedEnum(), ReservedPythonKeywords.Def.Try.EXCEPT);
        assertIntEquals(r.instKeywordSeq(), 1);
        assertEquals(r.instKeywordEnum(), ReservedPythonKeywords.True.IF);
        assertIntEquals(r.instKeywordEnumToI(), 6);
        assertIntEquals(r.keywordStructDef().return(), 71);
    }
}
