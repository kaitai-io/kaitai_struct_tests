// Autogenerated from KST: please remove this line if doing any edits by hand!

const std = @import("std");
const kaitai_struct = @import("kaitai_struct");
const repeat_eos_bytes_pad_term = @import("../formats/repeat_eos_bytes_pad_term.zig");

test "RepeatEosBytesPadTerm" {
    const file = try std.fs.cwd().openFile("../../src/repeat_until_process.bin", .{});
    defer file.close();
    var buffer: [8]u8 = undefined;
    var reader = file.reader(&buffer);
    const allocator = std.testing.allocator;
    var arena = std.heap.ArenaAllocator.init(allocator);
    defer arena.deinit();
    var _io = kaitai_struct.KaitaiStream.fromFileReader(&reader);
    const r = try repeat_eos_bytes_pad_term.RepeatEosBytesPadTerm.create(&arena, &_io, null, null);
    try std.testing.expectEqual(3, r.records.items.len);
    try std.testing.expectEqualSlices(u8, &[_]u8{ 232, 186 }, r.records.items[0]);
    try std.testing.expectEqualSlices(u8, &[_]u8{ 250, 158, 184 }, r.records.items[1]);
    try std.testing.expectEqualSlices(u8, &[_]u8{ 170, 85 }, r.records.items[2]);
}
