// Autogenerated from KST: please remove this line if doing any edits by hand!

const std = @import("std");
const kaitai_struct = @import("kaitai_struct");
const default_endian_expr_inherited = @import("../formats/default_endian_expr_inherited.zig");

test "DefaultEndianExprInherited" {
    const file = try std.fs.cwd().openFile("../../src/endian_expr.bin", .{});
    defer file.close();
    var buffer: [8]u8 = undefined;
    var reader = file.reader(&buffer);
    const allocator = std.testing.allocator;
    var arena = std.heap.ArenaAllocator.init(allocator);
    defer arena.deinit();
    var _io = kaitai_struct.KaitaiStream.fromFileReader(&reader);
    const r = try default_endian_expr_inherited.DefaultEndianExprInherited.create(&arena, &_io, null, null);
    try std.testing.expectEqualSlices(u8, &[_]u8{ 73, 73 }, r.docs.items[0].indicator);
    try std.testing.expectEqual(66, r.docs.items[0].main.insides.some_int);
    try std.testing.expectEqual(16896, r.docs.items[0].main.insides.more.some_int1);
    try std.testing.expectEqual(66, r.docs.items[0].main.insides.more.some_int2);
    try std.testing.expectEqual(66, (try r.docs.items[0].main.insides.more.someInst()));
    try std.testing.expectEqualSlices(u8, &[_]u8{ 77, 77 }, r.docs.items[1].indicator);
    try std.testing.expectEqual(66, r.docs.items[1].main.insides.some_int);
    try std.testing.expectEqual(66, r.docs.items[1].main.insides.more.some_int1);
    try std.testing.expectEqual(16896, r.docs.items[1].main.insides.more.some_int2);
    try std.testing.expectEqual(1107296256, (try r.docs.items[1].main.insides.more.someInst()));
    try std.testing.expectEqualSlices(u8, &[_]u8{ 88, 88 }, r.docs.items[2].indicator);
    try std.testing.expectEqual(66, r.docs.items[2].main.insides.some_int);
    try std.testing.expectEqual(66, r.docs.items[2].main.insides.more.some_int1);
    try std.testing.expectEqual(16896, r.docs.items[2].main.insides.more.some_int2);
    try std.testing.expectEqual(1107296256, (try r.docs.items[2].main.insides.more.someInst()));
}
