// Autogenerated from KST: please remove this line if doing any edits by hand!

const std = @import("std");
const kaitai_struct = @import("kaitai_struct");
const struct_pad_term_equal = @import("../formats/struct_pad_term_equal.zig");

test "StructPadTermEqual" {
    const file = try std.fs.cwd().openFile("../../src/str_pad_term.bin", .{});
    defer file.close();
    var buffer: [8]u8 = undefined;
    var reader = file.reader(&buffer);
    const allocator = std.testing.allocator;
    var arena = std.heap.ArenaAllocator.init(allocator);
    defer arena.deinit();
    var _io = kaitai_struct.KaitaiStream.fromFileReader(&reader);
    const r = try struct_pad_term_equal.StructPadTermEqual.create(&arena, &_io, null, null);
    try std.testing.expectEqualSlices(u8, &[_]u8{ 115, 116, 114, 49 }, r.s1.value);
    try std.testing.expectEqualSlices(u8, &[_]u8{ 115, 116, 114, 50, 102, 111, 111, 64 }, r.s2.value);
    try std.testing.expectEqualSlices(u8, &[_]u8{ 115, 116, 114 }, r.s3.value);
    try std.testing.expectEqualSlices(u8, &[_]u8{ 115, 116, 114, 52, 98, 97, 122, 64, 46 }, r.s4.value);
}
