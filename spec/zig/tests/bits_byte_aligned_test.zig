// Autogenerated from KST: please remove this line if doing any edits by hand!

const std = @import("std");
const kaitai_struct = @import("kaitai_struct");
const bits_byte_aligned = @import("../formats/bits_byte_aligned.zig");

test "BitsByteAligned" {
    const file = try std.fs.cwd().openFile("../../src/fixed_struct.bin", .{});
    defer file.close();
    var buffer: [8]u8 = undefined;
    var reader = file.reader(&buffer);
    const allocator = std.testing.allocator;
    var arena = std.heap.ArenaAllocator.init(allocator);
    defer arena.deinit();
    var _io = kaitai_struct.KaitaiStream.fromFileReader(&reader);
    const r = try bits_byte_aligned.BitsByteAligned.create(&arena, &_io, null, null);
    try std.testing.expectEqual(20, r.one);
    try std.testing.expectEqual(65, r.byte_1);
    try std.testing.expectEqual(2, r.two);
    try std.testing.expectEqual(false, r.three);
    try std.testing.expectEqual(75, r.byte_2);
    try std.testing.expectEqual(2892, r.four);
    try std.testing.expectEqualSlices(u8, &[_]u8{ 255 }, r.byte_3);
    try std.testing.expectEqual(255, r.full_byte);
    try std.testing.expectEqual(80, r.byte_4);
}
