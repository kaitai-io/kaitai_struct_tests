// Autogenerated from KST: please remove this line if doing any edits by hand!

const std = @import("std");
const kaitai_struct = @import("kaitai_struct");
const expr_bytes_ops = @import("../formats/expr_bytes_ops.zig");

test "ExprBytesOps" {
    const file = try std.fs.cwd().openFile("../../src/nav_parent_switch.bin", .{});
    defer file.close();
    var buffer: [8]u8 = undefined;
    var reader = file.reader(&buffer);
    const allocator = std.testing.allocator;
    var arena = std.heap.ArenaAllocator.init(allocator);
    defer arena.deinit();
    var _io = kaitai_struct.KaitaiStream.fromFileReader(&reader);
    const r = try expr_bytes_ops.ExprBytesOps.create(&arena, &_io, null, null);
    try std.testing.expectEqual(3, (try r.oneSize()));
    try std.testing.expectEqual(1, (try r.oneFirst()));
    try std.testing.expectEqual(66, (try r.oneMid()));
    try std.testing.expectEqual(255, (try r.oneLast()));
    try std.testing.expectEqualStrings("255", (try std.fmt.allocPrint(allocator, "{d}", .{ (try r.oneLast()) })));
    try std.testing.expectEqual(1, (try r.oneMin()));
    try std.testing.expectEqual(255, (try r.oneMax()));
    try std.testing.expectEqualStrings("255", (try std.fmt.allocPrint(allocator, "{d}", .{ (try r.oneMax()) })));
    try std.testing.expectEqual(3, (try r.twoSize()));
    try std.testing.expectEqual(65, (try r.twoFirst()));
    try std.testing.expectEqual(255, (try r.twoMid()));
    try std.testing.expectEqualStrings("255", (try std.fmt.allocPrint(allocator, "{d}", .{ (try r.twoMid()) })));
    try std.testing.expectEqual(75, (try r.twoLast()));
    try std.testing.expectEqual(65, (try r.twoMin()));
    try std.testing.expectEqual(255, (try r.twoMax()));
    try std.testing.expectEqualStrings("255", (try std.fmt.allocPrint(allocator, "{d}", .{ (try r.twoMax()) })));
}
