// Autogenerated from KST: please remove this line if doing any edits by hand!

const std = @import("std");
const kaitai_struct = @import("kaitai_struct");
const debug_enum_name = @import("../formats/debug_enum_name.zig");

test "DebugEnumName" {
    const file = try std.fs.cwd().openFile("../../src/fixed_struct.bin", .{});
    defer file.close();
    var buffer: [8]u8 = undefined;
    var reader = file.reader(&buffer);
    const allocator = std.testing.allocator;
    var arena = std.heap.ArenaAllocator.init(allocator);
    defer arena.deinit();
    var _io = kaitai_struct.KaitaiStream.fromFileReader(&reader);
    const r = try debug_enum_name.DebugEnumName.create(&arena, &_io, null, null);
    try std.testing.expectEqual(debug_enum_name.DebugEnumName.TestEnum1.enum_value_80, r.one);
    try std.testing.expectEqual(debug_enum_name.DebugEnumName.TestEnum2.enum_value_65, r.array_of_ints.items[0]);
    try std.testing.expectEqual(debug_enum_name.DebugEnumName.TestSubtype.InnerEnum1.enum_value_67, r.test_type.field1);
    try std.testing.expectEqual(debug_enum_name.DebugEnumName.TestSubtype.InnerEnum2.enum_value_11, (try r.test_type.instanceField()));
}
