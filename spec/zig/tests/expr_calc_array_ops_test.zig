// Autogenerated from KST: please remove this line if doing any edits by hand!

const std = @import("std");
const kaitai_struct = @import("kaitai_struct");
const expr_calc_array_ops = @import("../formats/expr_calc_array_ops.zig");

test "ExprCalcArrayOps" {
    const file = try std.fs.cwd().openFile("../../src/fixed_struct.bin", .{});
    defer file.close();
    var buffer: [8]u8 = undefined;
    var reader = file.reader(&buffer);
    const allocator = std.testing.allocator;
    var arena = std.heap.ArenaAllocator.init(allocator);
    defer arena.deinit();
    var _io = kaitai_struct.KaitaiStream.fromFileReader(&reader);
    const r = try expr_calc_array_ops.ExprCalcArrayOps.create(&arena, &_io, null, null);
    try std.testing.expectEqual(7, (try r.intArraySize()));
    try std.testing.expectEqual(10, (try r.intArrayFirst()));
    try std.testing.expectEqual(25, (try r.intArrayMid()));
    try std.testing.expectEqual(1000, (try r.intArrayLast()));
    try std.testing.expectEqual(10, (try r.intArrayMin()));
    try std.testing.expectEqual(1000, (try r.intArrayMax()));
    try std.testing.expectEqual(5, (try r.doubleArraySize()));
    try std.testing.expectEqual(10.0, (try r.doubleArrayFirst()));
    try std.testing.expectEqual(25.0, (try r.doubleArrayMid()));
    try std.testing.expectEqual(3.14159, (try r.doubleArrayLast()));
    try std.testing.expectEqual(3.14159, (try r.doubleArrayMin()));
    try std.testing.expectEqual(100.0, (try r.doubleArrayMax()));
    try std.testing.expectEqual(4, (try r.strArraySize()));
    try std.testing.expectEqualStrings("un", (try r.strArrayFirst()));
    try std.testing.expectEqualStrings("deux", (try r.strArrayMid()));
    try std.testing.expectEqualStrings("quatre", (try r.strArrayLast()));
    try std.testing.expectEqualStrings("deux", (try r.strArrayMin()));
    try std.testing.expectEqualStrings("un", (try r.strArrayMax()));
}
