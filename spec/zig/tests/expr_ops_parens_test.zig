// Autogenerated from KST: please remove this line if doing any edits by hand!

const std = @import("std");
const kaitai_struct = @import("kaitai_struct");
const expr_ops_parens = @import("../formats/expr_ops_parens.zig");

test "ExprOpsParens" {
    const file = try std.fs.cwd().openFile("../../src/enum_negative.bin", .{});
    defer file.close();
    var buffer: [8]u8 = undefined;
    var reader = file.reader(&buffer);
    const allocator = std.testing.allocator;
    var arena = std.heap.ArenaAllocator.init(allocator);
    defer arena.deinit();
    var _io = kaitai_struct.KaitaiStream.fromFileReader(&reader);
    const r = try expr_ops_parens.ExprOpsParens.create(&arena, &_io, null, null);
    try std.testing.expectEqualStrings("29", (try r.iSumToStr()));
    try std.testing.expectEqual(9, (try r.fSumToInt()));
    try std.testing.expectEqual(10, (try r.strConcatLen()));
    try std.testing.expectEqualStrings("9876543210", (try r.strConcatRev()));
    try std.testing.expectEqualStrings("23456", (try r.strConcatSubstr2To7()));
    try std.testing.expectEqual(123456789, (try r.strConcatToI()));
    try std.testing.expectEqual(0, (try r.boolEq()));
    try std.testing.expectEqual(0, (try r.boolAnd()));
    try std.testing.expectEqual(1, (try r.boolOr()));
}
