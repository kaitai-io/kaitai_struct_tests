// Autogenerated from KST: please remove this line if doing any edits by hand!

const std = @import("std");
const kaitai_struct = @import("kaitai_struct");
const switch_multi_bool_ops = @import("../formats/switch_multi_bool_ops.zig");

test "SwitchMultiBoolOps" {
    const file = try std.fs.cwd().openFile("../../src/switch_integers.bin", .{});
    defer file.close();
    var buffer: [8]u8 = undefined;
    var reader = file.reader(&buffer);
    const allocator = std.testing.allocator;
    var arena = std.heap.ArenaAllocator.init(allocator);
    defer arena.deinit();
    var _io = kaitai_struct.KaitaiStream.fromFileReader(&reader);
    const r = try switch_multi_bool_ops.SwitchMultiBoolOps.create(&arena, &_io, null, null);
    try std.testing.expectEqual(4, r.opcodes.items.len);
    try std.testing.expectEqual(1, r.opcodes.items[0].code);
    try std.testing.expectEqual(7, r.opcodes.items[0].body);
    try std.testing.expectEqual(2, r.opcodes.items[1].code);
    try std.testing.expectEqual(16448, r.opcodes.items[1].body);
    try std.testing.expectEqual(4, r.opcodes.items[2].code);
    try std.testing.expectEqual(4919, r.opcodes.items[2].body);
    try std.testing.expectEqual(8, r.opcodes.items[3].code);
    try std.testing.expectEqual(4919, r.opcodes.items[3].body);
}
