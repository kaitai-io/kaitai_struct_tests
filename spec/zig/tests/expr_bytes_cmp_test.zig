// Autogenerated from KST: please remove this line if doing any edits by hand!

const std = @import("std");
const kaitai_struct = @import("kaitai_struct");
const expr_bytes_cmp = @import("../formats/expr_bytes_cmp.zig");

test "ExprBytesCmp" {
    const file = try std.fs.cwd().openFile("../../src/fixed_struct.bin", .{});
    defer file.close();
    var buffer: [8]u8 = undefined;
    var reader = file.reader(&buffer);
    const allocator = std.testing.allocator;
    var arena = std.heap.ArenaAllocator.init(allocator);
    defer arena.deinit();
    var _io = kaitai_struct.KaitaiStream.fromFileReader(&reader);
    const r = try expr_bytes_cmp.ExprBytesCmp.create(&arena, &_io, null, null);
    try std.testing.expectEqualSlices(u8, &[_]u8{ 80 }, r.one);
    try std.testing.expectEqualSlices(u8, &[_]u8{ 65, 67, 75 }, r.two);
    try std.testing.expectEqual(true, (try r.isEq()));
    try std.testing.expectEqual(false, (try r.isNe()));
    try std.testing.expectEqual(true, (try r.isLt()));
    try std.testing.expectEqual(false, (try r.isGt()));
    try std.testing.expectEqual(true, (try r.isLe()));
    try std.testing.expectEqual(false, (try r.isGe()));
    try std.testing.expectEqual(false, (try r.isLt2()));
    try std.testing.expectEqual(true, (try r.isGt2()));
}
