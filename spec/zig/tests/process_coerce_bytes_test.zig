// Autogenerated from KST: please remove this line if doing any edits by hand!

const std = @import("std");
const kaitai_struct = @import("kaitai_struct");
const process_coerce_bytes = @import("../formats/process_coerce_bytes.zig");

test "ProcessCoerceBytes" {
    const file = try std.fs.cwd().openFile("../../src/process_coerce_bytes.bin", .{});
    defer file.close();
    var buffer: [8]u8 = undefined;
    var reader = file.reader(&buffer);
    const allocator = std.testing.allocator;
    var arena = std.heap.ArenaAllocator.init(allocator);
    defer arena.deinit();
    var _io = kaitai_struct.KaitaiStream.fromFileReader(&reader);
    const r = try process_coerce_bytes.ProcessCoerceBytes.create(&arena, &_io, null, null);
    try std.testing.expectEqual(0, r.records.items[0].flag);
    try std.testing.expectEqualSlices(u8, &[_]u8{ 65, 65, 65, 65 }, (try r.records.items[0].buf()));
    try std.testing.expectEqual(1, r.records.items[1].flag);
    try std.testing.expectEqualSlices(u8, &[_]u8{ 66, 66, 66, 66 }, (try r.records.items[1].buf()));
}
