// Autogenerated from KST: please remove this line if doing any edits by hand!

const std = @import("std");
const kaitai_struct = @import("kaitai_struct");
const params_pass_array_str = @import("../formats/params_pass_array_str.zig");

test "ParamsPassArrayStr" {
    const file = try std.fs.cwd().openFile("../../src/term_strz.bin", .{});
    defer file.close();
    var buffer: [8]u8 = undefined;
    var reader = file.reader(&buffer);
    const allocator = std.testing.allocator;
    var arena = std.heap.ArenaAllocator.init(allocator);
    defer arena.deinit();
    var _io = kaitai_struct.KaitaiStream.fromFileReader(&reader);
    const r = try params_pass_array_str.ParamsPassArrayStr.create(&arena, &_io, null, null);
    try std.testing.expectEqual(3, r.pass_str_array.strs.items.len);
    try std.testing.expectEqualStrings("fo", r.pass_str_array.strs.items[0]);
    try std.testing.expectEqualStrings("o|", r.pass_str_array.strs.items[1]);
    try std.testing.expectEqualStrings("ba", r.pass_str_array.strs.items[2]);
    try std.testing.expectEqual(2, r.pass_str_array_calc.strs.items.len);
    try std.testing.expectEqualStrings("aB", r.pass_str_array_calc.strs.items[0]);
    try std.testing.expectEqualStrings("Cd", r.pass_str_array_calc.strs.items[1]);
}
