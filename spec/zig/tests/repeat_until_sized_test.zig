// Autogenerated from KST: please remove this line if doing any edits by hand!

const std = @import("std");
const kaitai_struct = @import("kaitai_struct");
const repeat_until_sized = @import("../formats/repeat_until_sized.zig");

test "RepeatUntilSized" {
    const file = try std.fs.cwd().openFile("../../src/repeat_until_process.bin", .{});
    defer file.close();
    var buffer: [8]u8 = undefined;
    var reader = file.reader(&buffer);
    const allocator = std.testing.allocator;
    var arena = std.heap.ArenaAllocator.init(allocator);
    defer arena.deinit();
    var _io = kaitai_struct.KaitaiStream.fromFileReader(&reader);
    const r = try repeat_until_sized.RepeatUntilSized.create(&arena, &_io, null, null);
    try std.testing.expectEqual(3, r.records.items.len);
    try std.testing.expectEqual(232, r.records.items[0].marker);
    try std.testing.expectEqual(2863311546, r.records.items[0].body);
    try std.testing.expectEqual(250, r.records.items[1].marker);
    try std.testing.expectEqual(2863315102, r.records.items[1].body);
    try std.testing.expectEqual(170, r.records.items[2].marker);
    try std.testing.expectEqual(1431655765, r.records.items[2].body);
}
