// Autogenerated from KST: please remove this line if doing any edits by hand!

const std = @import("std");
const kaitai_struct = @import("kaitai_struct");
const imports_params_def_enum_imported = @import("../formats/imports_params_def_enum_imported.zig");
const enum_0 = @import("../formats/enum_0.zig");
const enum_deep = @import("../formats/enum_deep.zig");

test "ImportsParamsDefEnumImported" {
    const file = try std.fs.cwd().openFile("../../src/enum_0.bin", .{});
    defer file.close();
    var buffer: [8]u8 = undefined;
    var reader = file.reader(&buffer);
    const allocator = std.testing.allocator;
    var arena = std.heap.ArenaAllocator.init(allocator);
    defer arena.deinit();
    var _io = kaitai_struct.KaitaiStream.fromFileReader(&reader);
    const r = try imports_params_def_enum_imported.ImportsParamsDefEnumImported.create(&arena, &_io, null, null);
    try std.testing.expectEqual(enum_0.Enum0.Animal.cat, r.one.pet_1);
    try std.testing.expectEqual(enum_deep.EnumDeep.Container1.Container2.Animal.hare, r.one.pet_2);
    try std.testing.expectEqual(enum_0.Enum0.Animal.cat, r.two.pet_1_param);
    try std.testing.expectEqual(enum_deep.EnumDeep.Container1.Container2.Animal.hare, r.two.pet_2_param);
}
