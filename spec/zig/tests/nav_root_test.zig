// Autogenerated from KST: please remove this line if doing any edits by hand!

const std = @import("std");
const kaitai_struct = @import("kaitai_struct");
const nav_root = @import("../formats/nav_root.zig");

test "NavRoot" {
    const file = try std.fs.cwd().openFile("../../src/nav.bin", .{});
    defer file.close();
    var buffer: [8]u8 = undefined;
    var reader = file.reader(&buffer);
    const allocator = std.testing.allocator;
    var arena = std.heap.ArenaAllocator.init(allocator);
    defer arena.deinit();
    var _io = kaitai_struct.KaitaiStream.fromFileReader(&reader);
    const r = try nav_root.NavRoot.create(&arena, &_io, null, null);
    try std.testing.expectEqual(2, r.header.qty_entries);
    try std.testing.expectEqual(8, r.header.filename_len);
    try std.testing.expectEqual(2, r.index.entries.items.len);
    try std.testing.expectEqualStrings("FIRST___", r.index.entries.items[0].filename);
    try std.testing.expectEqualStrings("SECOND__", r.index.entries.items[1].filename);
}
