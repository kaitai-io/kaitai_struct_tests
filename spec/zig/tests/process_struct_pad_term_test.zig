// Autogenerated from KST: please remove this line if doing any edits by hand!

const std = @import("std");
const kaitai_struct = @import("kaitai_struct");
const process_struct_pad_term = @import("../formats/process_struct_pad_term.zig");

test "ProcessStructPadTerm" {
    const file = try std.fs.cwd().openFile("../../src/str_pad_term.bin", .{});
    defer file.close();
    var buffer: [8]u8 = undefined;
    var reader = file.reader(&buffer);
    const allocator = std.testing.allocator;
    var arena = std.heap.ArenaAllocator.init(allocator);
    defer arena.deinit();
    var _io = kaitai_struct.KaitaiStream.fromFileReader(&reader);
    const r = try process_struct_pad_term.ProcessStructPadTerm.create(&arena, &_io, null, null);
    try std.testing.expectEqualSlices(u8, &[_]u8{ 102, 97, 103, 36 }, r.str_pad.value);
    try std.testing.expectEqualSlices(u8, &[_]u8{ 102, 97, 103, 39, 115, 122, 122 }, r.str_term.value);
    try std.testing.expectEqualSlices(u8, &[_]u8{ 102, 97, 103, 62, 62, 62, 38, 119, 116, 103, 62, 62, 62 }, r.str_term_and_pad.value);
    try std.testing.expectEqualSlices(u8, &[_]u8{ 102, 97, 103, 33, 119, 116, 111, 85 }, r.str_term_include.value);
}
