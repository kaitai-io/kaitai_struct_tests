// Autogenerated from KST: please remove this line if doing any edits by hand!

const std = @import("std");
const kaitai_struct = @import("kaitai_struct");
const instance_io_user_earlier = @import("../formats/instance_io_user_earlier.zig");

test "InstanceIoUserEarlier" {
    const file = try std.fs.cwd().openFile("../../src/switch_opcodes2.bin", .{});
    defer file.close();
    var buffer: [8]u8 = undefined;
    var reader = file.reader(&buffer);
    const allocator = std.testing.allocator;
    var arena = std.heap.ArenaAllocator.init(allocator);
    defer arena.deinit();
    var _io = kaitai_struct.KaitaiStream.fromFileReader(&reader);
    const r = try instance_io_user_earlier.InstanceIoUserEarlier.create(&arena, &_io, null, null);
    try std.testing.expectEqual(83, r.sized_a.content);
    try std.testing.expectEqual(102, (try r.into_a.inst()).content);
    try std.testing.expectEqual(28527, (try r.aMid()));
    try std.testing.expectEqual(0, (try (try r.into_a.inst()).last()));
    try std.testing.expectEqual(88, (try r.sized_a.last()));
    try std.testing.expectEqual(66, r.sized_b.content);
    try std.testing.expectEqual(0, (try r.into_b.inst()).content);
    try std.testing.expectEqual(0, (try r.bMid()));
    try std.testing.expectEqual(89, (try (try r.into_b.inst()).last()));
    try std.testing.expectEqual(254, (try r.sized_b.last()));
    try std.testing.expectEqual(202, r.into_b.indicator);
    try std.testing.expectEqual(0, r.into_a_skipped.indicator);
    try std.testing.expectEqual(0, (try (try r.into_a_skipped.inst())._io.size()));
    try std.testing.expectEqual(0, r.into_a.indicator);
    try std.testing.expectEqual(73, r.into_a.bar);
    try std.testing.expectEqual(7, r.last_accessor.v);
}
