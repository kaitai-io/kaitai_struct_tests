// Autogenerated from KST: please remove this line if doing any edits by hand!

const std = @import("std");
const kaitai_struct = @import("kaitai_struct");
const process_repeat_usertype_dynarg_rotate = @import("../formats/process_repeat_usertype_dynarg_rotate.zig");

test "ProcessRepeatUsertypeDynargRotate" {
    const file = try std.fs.cwd().openFile("../../src/process_rotate.bin", .{});
    defer file.close();
    var buffer: [8]u8 = undefined;
    var reader = file.reader(&buffer);
    const allocator = std.testing.allocator;
    var arena = std.heap.ArenaAllocator.init(allocator);
    defer arena.deinit();
    var _io = kaitai_struct.KaitaiStream.fromFileReader(&reader);
    const r = try process_repeat_usertype_dynarg_rotate.ProcessRepeatUsertypeDynargRotate.create(&arena, &_io, null, null);
    try std.testing.expectEqual(25928, r.blocks_rol.items[0].a);
    try std.testing.expectEqual(46902, r.blocks_rol.items[1].a);
    try std.testing.expectEqual(29295, r.blocks_ror.items[0].a);
    try std.testing.expectEqual(16584, r.blocks_ror.items[1].a);
    try std.testing.expectEqual(22810, r.blocks_ror.items[2].a);
    try std.testing.expectEqual(178, r.blocks_b.dummy);
    try std.testing.expectEqual(108, (try r.blocks_b.blocksRol0B()));
    try std.testing.expectEqual(234, (try r.blocks_b.blocksRol1B()));
    try std.testing.expectEqual(108, (try r.blocks_b.blocksRor0B()));
    try std.testing.expectEqual(138, (try r.blocks_b.blocksRor1B()));
    try std.testing.expectEqual(156, (try r.blocks_b.blocksRor2B()));
}
