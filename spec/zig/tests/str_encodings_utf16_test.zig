// Autogenerated from KST: please remove this line if doing any edits by hand!

const std = @import("std");
const kaitai_struct = @import("kaitai_struct");
const str_encodings_utf16 = @import("../formats/str_encodings_utf16.zig");

test "StrEncodingsUtf16" {
    const file = try std.fs.cwd().openFile("../../src/str_encodings_utf16.bin", .{});
    defer file.close();
    var buffer: [8]u8 = undefined;
    var reader = file.reader(&buffer);
    const allocator = std.testing.allocator;
    var arena = std.heap.ArenaAllocator.init(allocator);
    defer arena.deinit();
    var _io = kaitai_struct.KaitaiStream.fromFileReader(&reader);
    const r = try str_encodings_utf16.StrEncodingsUtf16.create(&arena, &_io, null, null);
    try std.testing.expectEqual(12, r.len_be);
    try std.testing.expectEqual(65279, r.be_bom_removed.bom);
    try std.testing.expectEqualStrings("\u{3053}\u{3093}\u{306b}\u{3061}\u{306f}", r.be_bom_removed.str);
    try std.testing.expectEqual(12, r.len_le);
    try std.testing.expectEqual(65279, r.le_bom_removed.bom);
    try std.testing.expectEqualStrings("\u{3053}\u{3093}\u{306b}\u{3061}\u{306f}", r.le_bom_removed.str);
}
