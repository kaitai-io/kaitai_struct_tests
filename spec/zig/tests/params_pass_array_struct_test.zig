// Autogenerated from KST: please remove this line if doing any edits by hand!

const std = @import("std");
const kaitai_struct = @import("kaitai_struct");
const params_pass_array_struct = @import("../formats/params_pass_array_struct.zig");

test "ParamsPassArrayStruct" {
    const file = try std.fs.cwd().openFile("../../src/position_to_end.bin", .{});
    defer file.close();
    var buffer: [8]u8 = undefined;
    var reader = file.reader(&buffer);
    const allocator = std.testing.allocator;
    var arena = std.heap.ArenaAllocator.init(allocator);
    defer arena.deinit();
    var _io = kaitai_struct.KaitaiStream.fromFileReader(&reader);
    const r = try params_pass_array_struct.ParamsPassArrayStruct.create(&arena, &_io, null, null);
    try std.testing.expectEqual(2, r.pass_structs.structs.items.len);
    try std.testing.expectEqual(1, @as(*params_pass_array_struct.ParamsPassArrayStruct.Foo, r.pass_structs.structs.items[0]).f);
    try std.testing.expectEqual(2, @as(*params_pass_array_struct.ParamsPassArrayStruct.Bar, r.pass_structs.structs.items[1]).b);
}
