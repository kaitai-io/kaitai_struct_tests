// Autogenerated from KST: please remove this line if doing any edits by hand!

const std = @import("std");
const kaitai_struct = @import("kaitai_struct");
const bytes_pad_term_roundtrip = @import("../formats/bytes_pad_term_roundtrip.zig");

test "BytesPadTermRoundtrip" {
    const file = try std.fs.cwd().openFile("../../src/str_pad_term.bin", .{});
    defer file.close();
    var buffer: [8]u8 = undefined;
    var reader = file.reader(&buffer);
    const allocator = std.testing.allocator;
    var arena = std.heap.ArenaAllocator.init(allocator);
    defer arena.deinit();
    var _io = kaitai_struct.KaitaiStream.fromFileReader(&reader);
    const r = try bytes_pad_term_roundtrip.BytesPadTermRoundtrip.create(&arena, &_io, null, null);
    try std.testing.expectEqualSlices(u8, &[_]u8{ 115, 116, 114, 49 }, r.str_pad);
    try std.testing.expectEqualSlices(u8, &[_]u8{ 115, 116, 114, 50, 102, 111, 111 }, r.str_term);
    try std.testing.expectEqualSlices(u8, &[_]u8{ 115, 116, 114, 43, 43, 43, 51, 98, 97, 114, 43, 43, 43 }, r.str_term_and_pad);
    try std.testing.expectEqualSlices(u8, &[_]u8{ 115, 116, 114, 52, 98, 97, 122, 64 }, r.str_term_include);
}
