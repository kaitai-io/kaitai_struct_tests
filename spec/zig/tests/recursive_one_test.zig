// Autogenerated from KST: please remove this line if doing any edits by hand!

const std = @import("std");
const kaitai_struct = @import("kaitai_struct");
const recursive_one = @import("../formats/recursive_one.zig");

test "RecursiveOne" {
    const file = try std.fs.cwd().openFile("../../src/fixed_struct.bin", .{});
    defer file.close();
    var buffer: [8]u8 = undefined;
    var reader = file.reader(&buffer);
    const allocator = std.testing.allocator;
    var arena = std.heap.ArenaAllocator.init(allocator);
    defer arena.deinit();
    var _io = kaitai_struct.KaitaiStream.fromFileReader(&reader);
    const r = try recursive_one.RecursiveOne.create(&arena, &_io, null, null);
    try std.testing.expectEqual(80, r.one);
    try std.testing.expectEqual(65, @as(*recursive_one.RecursiveOne, r.next).one);
    try std.testing.expectEqual(67, @as(*recursive_one.RecursiveOne, @as(*recursive_one.RecursiveOne, r.next).next).one);
    try std.testing.expectEqual(11595, @as(*recursive_one.RecursiveOne.Fini, @as(*recursive_one.RecursiveOne, @as(*recursive_one.RecursiveOne, r.next).next).next).finisher);
}
