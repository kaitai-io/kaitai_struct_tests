// Autogenerated from KST: please remove this line if doing any edits by hand!

const std = @import("std");
const kaitai_struct = @import("kaitai_struct");
const type_ternary_2nd_falsy = @import("../formats/type_ternary_2nd_falsy.zig");

test "TypeTernary2ndFalsy" {
    const file = try std.fs.cwd().openFile("../../src/switch_integers.bin", .{});
    defer file.close();
    var buffer: [8]u8 = undefined;
    var reader = file.reader(&buffer);
    const allocator = std.testing.allocator;
    var arena = std.heap.ArenaAllocator.init(allocator);
    defer arena.deinit();
    var _io = kaitai_struct.KaitaiStream.fromFileReader(&reader);
    const r = try type_ternary_2nd_falsy.TypeTernary2ndFalsy.create(&arena, &_io, null, null);
    try std.testing.expectEqual(false, (try r.vFalse()));
    try std.testing.expectEqual(0, (try r.vIntZero()));
    try std.testing.expectEqual(0, (try r.vIntNegZero()));
    try std.testing.expectEqual(0.0, (try r.vFloatZero()));
    try std.testing.expectEqual(-0.0, (try r.vFloatNegZero()));
    try std.testing.expectEqualStrings("0", (try r.vStrWZero()));
    try std.testing.expectEqual(1, (try r.vStrWZero()).len);
    try std.testing.expectEqual(7, r.ut.m);
    try std.testing.expectEqual(null, (try r.vNullUt()));
    try std.testing.expectEqualStrings("", (try r.vStrEmpty()));
    try std.testing.expectEqual(0, (try r.vStrEmpty()).len);
    try std.testing.expectEqual(2, r.int_array.items.len);
    try std.testing.expectEqual(0, (try r.vIntArrayEmpty()).items.len);
}
