// Autogenerated from KST: please remove this line if doing any edits by hand!

const std = @import("std");
const kaitai_struct = @import("kaitai_struct");
const debug_array_user_eof_exception = @import("../formats/debug_array_user_eof_exception.zig");

test "DebugArrayUserEofException" {
    const file = try std.fs.cwd().openFile("../../src/nav_parent_codes.bin", .{});
    defer file.close();
    var buffer: [8]u8 = undefined;
    var reader = file.reader(&buffer);
    const allocator = std.testing.allocator;
    var arena = std.heap.ArenaAllocator.init(allocator);
    defer arena.deinit();
    var _io = kaitai_struct.KaitaiStream.fromFileReader(&reader);
    const r = try debug_array_user_eof_exception.DebugArrayUserEofException.create(&arena, &_io, null, null);
    try std.testing.expectEqual(3, r.one_cat.meow);
    try std.testing.expectEqual(73, r.one_cat.chirp);
    try std.testing.expectEqual(3, r.array_of_cats.items.len);
    try std.testing.expectEqual(49, r.array_of_cats.items[0].meow);
    try std.testing.expectEqual(50, r.array_of_cats.items[0].chirp);
    try std.testing.expectEqual(51, r.array_of_cats.items[1].meow);
    try std.testing.expectEqual(66, r.array_of_cats.items[1].chirp);
    try std.testing.expectEqual(98, r.array_of_cats.items[2].meow);
}
