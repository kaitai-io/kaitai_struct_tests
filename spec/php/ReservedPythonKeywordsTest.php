<?php
// Autogenerated from KST: please remove this line if doing any edits by hand!

namespace Kaitai\Struct\Tests;

class ReservedPythonKeywordsTest extends TestCase {
    public function testReservedPythonKeywords() {
        $r = ReservedPythonKeywords::fromFile(self::SRC_DIR_PATH . '/full256.bin');
        $this->assertSame(0, $r->and());
        $this->assertSame(1, $r->as());
        $this->assertSame(2, $r->assert());
        $this->assertSame(3, $r->async());
        $this->assertSame(4, $r->await());
        $this->assertSame(5, $r->break());
        $this->assertSame(6, $r->class());
        $this->assertSame(7, $r->continue());
        $this->assertSame(8, $r->def());
        $this->assertSame(9, $r->del());
        $this->assertSame(10, $r->elif());
        $this->assertSame(11, $r->else());
        $this->assertSame(12, $r->except());
        $this->assertSame(13, $r->false());
        $this->assertSame(14, $r->finally());
        $this->assertSame(15, $r->for());
        $this->assertSame(16, $r->from());
        $this->assertSame(17, $r->global());
        $this->assertSame(18, $r->if());
        $this->assertSame(19, $r->import());
        $this->assertSame(20, $r->in());
        $this->assertSame(21, $r->is());
        $this->assertSame(22, $r->lambda());
        $this->assertSame(23, $r->none());
        $this->assertSame(24, $r->nonlocal());
        $this->assertSame(25, $r->not());
        $this->assertSame(26, $r->or());
        $this->assertSame(27, $r->pass());
        $this->assertSame(28, $r->raise());
        $this->assertSame(29, $r->return());
        $this->assertSame(30, $r->true());
        $this->assertSame(31, $r->try());
        $this->assertSame(32, $r->while());
        $this->assertSame(33, $r->with());
        $this->assertSame(34, $r->yield());
        $this->assertSame(35, $r->keywordStructDef()->while());
        $this->assertSame(36, $r->keywordStructDef()->for());
        $this->assertSame(37, $r->keywordStructDef()->with());
        $this->assertSame(38, $r->keywordStructFalse()->pass());
        $this->assertSame(\Kaitai\Struct\Tests\ReservedPythonKeywords\True::AND, $r->keywordEnum());
        $this->assertSame(\Kaitai\Struct\Tests\ReservedPythonKeywords\Def\Try::EXCEPT, $r->keywordNestedEnum());
        $this->assertSame(1, $r->instKeywordSeq());
        $this->assertSame(\Kaitai\Struct\Tests\ReservedPythonKeywords\True::IF, $r->instKeywordEnum());
        $this->assertSame(6, $r->instKeywordEnumToI());
        $this->assertSame(71, $r->keywordStructDef()->return());
    }
}
