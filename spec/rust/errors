   Compiling rust v0.1.0 (file:///home/venos/Projects/kaitai-rust/kaitai_struct_tests/spec/rust)
error[E0432]: unresolved import `my_custom_fx`
  --> src/process_custom.rs:10:5
   |
10 | use my_custom_fx::MyCustomFx;
   |     ^^^^^^^^^^^^ Maybe a missing `extern crate my_custom_fx;`?

error[E0433]: failed to resolve. Maybe a missing `extern crate nested;`?
  --> src/process_custom.rs:11:5
   |
11 | use nested::deeply::CustomFx;
   |     ^^^^^^ Maybe a missing `extern crate nested;`?

error[E0432]: unresolved import `my_custom_fx`
  --> src/process_custom.rs:10:5
   |
10 | use my_custom_fx::MyCustomFx;
   |     ^^^^^^^^^^^^ Maybe a missing `extern crate my_custom_fx;`?

error[E0433]: failed to resolve. Maybe a missing `extern crate nested;`?
  --> src/process_custom.rs:11:5
   |
11 | use nested::deeply::CustomFx;
   |     ^^^^^^ Maybe a missing `extern crate nested;`?

error[E0433]: failed to resolve. Use of undeclared type or module `nested`
  --> src/process_custom.rs:49:24
   |
49 |         let _process = nested::deeply::CustomFx::new(7);
   |                        ^^^^^^ Use of undeclared type or module `nested`

error[E0425]: cannot find value `_root` in this scope
  --> src/cast_to_top.rs:51:66
   |
51 |         self.header = Box::new(CastToTop::new(self.stream, self, _root)?);
   |                                                                  ^^^^^ not found in this scope

error[E0425]: cannot find value `_root` in this scope
   --> src/default_endian_expr_is_be.rs:135:105
    |
135 |         self.instSub = Box::new(DefaultEndianExprIsBe__Doc__MainObj__SubMainObj::new(self.stream, self, _root)?);
    |                                                                                                         ^^^^^ not found in this scope

error[E0425]: cannot find value `_root` in this scope
   --> src/expr_2.rs:176:69
    |
176 |         self.tuple5 = Box::new(Expr2__Tuple::new(self.stream, self, _root)?);
    |                                                                     ^^^^^ not found in this scope

error[E0425]: cannot find value `_root` in this scope
  --> src/fixed_struct.rs:48:73
   |
48 |         self.hdr = Box::new(FixedStruct__Header::new(self.stream, self, _root)?);
   |                                                                         ^^^^^ not found in this scope

error[E0425]: cannot find value `_root` in this scope
  --> src/instance_user_array.rs:62:97
   |
62 |                 self.userEntries.push(Box::new(InstanceUserArray__Entry::new(self.stream, self, _root)?));
   |                                                                                                 ^^^^^ not found in this scope

error[E0425]: cannot find value `_root` in this scope
   --> src/multiple_use.rs:146:78
    |
146 |         self.secondUse = Box::new(MultipleUse__Multi::new(self.stream, self, _root)?);
    |                                                                              ^^^^^ not found in this scope

error[E0433]: failed to resolve. Use of undeclared type or module `nested`
  --> src/process_custom.rs:49:24
   |
49 |         let _process = nested::deeply::CustomFx::new(7);
   |                        ^^^^^^ Use of undeclared type or module `nested`

error[E0425]: cannot find value `_root` in this scope
  --> src/nav_parent2.rs:97:93
   |
97 |                 self.tagContent = Box::new(NavParent2__Tag__TagChar::new(self.stream, self, _root)?);
   |                                                                                             ^^^^^ not found in this scope

error[E0425]: cannot find value `_root` in this scope
  --> src/nav_parent3.rs:55:77
   |
55 |             self.tags.push(Box::new(NavParent3__Tag::new(self.stream, self, _root)?));
   |                                                                             ^^^^^ not found in this scope

error[E0425]: cannot find value `_root` in this scope
   --> src/nav_parent3.rs:107:93
    |
107 |                 self.tagContent = Box::new(NavParent3__Tag__TagChar::new(self.stream, self, _root)?);
    |                                                                                             ^^^^^ not found in this scope

error[E0425]: cannot find value `_root` in this scope
  --> src/position_abs.rs:50:77
   |
50 |         self.index = Box::new(PositionAbs__IndexObj::new(self.stream, self, _root)?);
   |                                                                             ^^^^^ not found in this scope

error[E0425]: cannot find value `_root` in this scope
  --> src/position_in_seq.rs:54:81
   |
54 |         self.header = Box::new(PositionInSeq__HeaderObj::new(self.stream, self, _root)?);
   |                                                                                 ^^^^^ not found in this scope

error[E0425]: cannot find value `_root` in this scope
  --> src/position_to_end.rs:48:79
   |
48 |         self.index = Box::new(PositionToEnd__IndexObj::new(self.stream, self, _root)?);
   |                                                                               ^^^^^ not found in this scope

error[E0425]: cannot find value `_root` in this scope
  --> src/cast_to_top.rs:51:66
   |
51 |         self.header = Box::new(CastToTop::new(self.stream, self, _root)?);
   |                                                                  ^^^^^ not found in this scope

error[E0425]: cannot find value `_root` in this scope
   --> src/default_endian_expr_is_be.rs:135:105
    |
135 |         self.instSub = Box::new(DefaultEndianExprIsBe__Doc__MainObj__SubMainObj::new(self.stream, self, _root)?);
    |                                                                                                         ^^^^^ not found in this scope

error[E0425]: cannot find value `_root` in this scope
   --> src/expr_2.rs:176:69
    |
176 |         self.tuple5 = Box::new(Expr2__Tuple::new(self.stream, self, _root)?);
    |                                                                     ^^^^^ not found in this scope

error[E0425]: cannot find value `_root` in this scope
  --> src/fixed_struct.rs:48:73
   |
48 |         self.hdr = Box::new(FixedStruct__Header::new(self.stream, self, _root)?);
   |                                                                         ^^^^^ not found in this scope

error[E0425]: cannot find value `_root` in this scope
  --> src/instance_user_array.rs:62:97
   |
62 |                 self.userEntries.push(Box::new(InstanceUserArray__Entry::new(self.stream, self, _root)?));
   |                                                                                                 ^^^^^ not found in this scope

error[E0425]: cannot find value `_root` in this scope
   --> src/multiple_use.rs:146:78
    |
146 |         self.secondUse = Box::new(MultipleUse__Multi::new(self.stream, self, _root)?);
    |                                                                              ^^^^^ not found in this scope

error[E0425]: cannot find value `_root` in this scope
  --> src/nav_parent2.rs:97:93
   |
97 |                 self.tagContent = Box::new(NavParent2__Tag__TagChar::new(self.stream, self, _root)?);
   |                                                                                             ^^^^^ not found in this scope

error[E0425]: cannot find value `_root` in this scope
  --> src/nav_parent3.rs:55:77
   |
55 |             self.tags.push(Box::new(NavParent3__Tag::new(self.stream, self, _root)?));
   |                                                                             ^^^^^ not found in this scope

error[E0425]: cannot find value `_root` in this scope
   --> src/nav_parent3.rs:107:93
    |
107 |                 self.tagContent = Box::new(NavParent3__Tag__TagChar::new(self.stream, self, _root)?);
    |                                                                                             ^^^^^ not found in this scope

error[E0425]: cannot find value `_root` in this scope
  --> src/position_abs.rs:50:77
   |
50 |         self.index = Box::new(PositionAbs__IndexObj::new(self.stream, self, _root)?);
   |                                                                             ^^^^^ not found in this scope

error[E0425]: cannot find value `_root` in this scope
  --> src/position_in_seq.rs:54:81
   |
54 |         self.header = Box::new(PositionInSeq__HeaderObj::new(self.stream, self, _root)?);
   |                                                                                 ^^^^^ not found in this scope

error[E0425]: cannot find value `_root` in this scope
  --> src/position_to_end.rs:48:79
   |
48 |         self.index = Box::new(PositionToEnd__IndexObj::new(self.stream, self, _root)?);
   |                                                                               ^^^^^ not found in this scope

warning: unused import: `nested::deeply::CustomFx`
  --> src/process_custom.rs:11:5
   |
11 | use nested::deeply::CustomFx;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: #[warn(unused_imports)] on by default

warning: unused import: `nested::deeply::CustomFx`
  --> src/process_custom.rs:11:5
   |
11 | use nested::deeply::CustomFx;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: #[warn(unused_imports)] on by default

error[E0609]: no field `stream` on type `bcd_user_type_be::BcdUserTypeBe`
  --> src/bcd_user_type_be.rs:30:11
   |
30 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `ltr`, `rtl`, `leadingZeroLtr`, `_raw_ltr`, `_raw_rtl`, `_raw_leadingZeroLtr`

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe`
  --> src/bcd_user_type_be.rs:43:30
   |
43 |         self._raw_ltr = self.stream.read_bytes(4)?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe`
  --> src/bcd_user_type_be.rs:45:61
   |
45 |         self.ltr = Box::new(BcdUserTypeBe__LtrObj::new(self.stream, self, _root)?);
   |                                                             ^^^^^^

error[E0609]: no field `stream` on type `bcd_user_type_be::BcdUserTypeBe`
  --> src/bcd_user_type_be.rs:30:11
   |
30 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `ltr`, `rtl`, `leadingZeroLtr`, `_raw_ltr`, `_raw_rtl`, `_raw_leadingZeroLtr`

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe`
  --> src/bcd_user_type_be.rs:43:30
   |
43 |         self._raw_ltr = self.stream.read_bytes(4)?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe`
  --> src/bcd_user_type_be.rs:45:61
   |
45 |         self.ltr = Box::new(BcdUserTypeBe__LtrObj::new(self.stream, self, _root)?);
   |                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/bcd_user_type_be.rs:45:69
   |
45 |         self.ltr = Box::new(BcdUserTypeBe__LtrObj::new(self.stream, self, _root)?);
   |                                                                     ^^^^ expected enum `std::option::Option`, found struct `bcd_user_type_be::BcdUserTypeBe`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut bcd_user_type_be::BcdUserTypeBe`

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe`
  --> src/bcd_user_type_be.rs:46:30
   |
46 |         self._raw_rtl = self.stream.read_bytes(4)?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe`
  --> src/bcd_user_type_be.rs:48:61
   |
48 |         self.rtl = Box::new(BcdUserTypeBe__RtlObj::new(self.stream, self, _root)?);
   |                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/bcd_user_type_be.rs:45:69
   |
45 |         self.ltr = Box::new(BcdUserTypeBe__LtrObj::new(self.stream, self, _root)?);
   |                                                                     ^^^^ expected enum `std::option::Option`, found struct `bcd_user_type_be::BcdUserTypeBe`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut bcd_user_type_be::BcdUserTypeBe`

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe`
  --> src/bcd_user_type_be.rs:46:30
   |
46 |         self._raw_rtl = self.stream.read_bytes(4)?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe`
  --> src/bcd_user_type_be.rs:48:61
   |
48 |         self.rtl = Box::new(BcdUserTypeBe__RtlObj::new(self.stream, self, _root)?);
   |                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/bcd_user_type_be.rs:48:69
   |
48 |         self.rtl = Box::new(BcdUserTypeBe__RtlObj::new(self.stream, self, _root)?);
   |                                                                     ^^^^ expected enum `std::option::Option`, found struct `bcd_user_type_be::BcdUserTypeBe`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut bcd_user_type_be::BcdUserTypeBe`

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe`
  --> src/bcd_user_type_be.rs:49:41
   |
49 |         self._raw_leadingZeroLtr = self.stream.read_bytes(4)?;
   |                                         ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe`
  --> src/bcd_user_type_be.rs:51:83
   |
51 |         self.leadingZeroLtr = Box::new(BcdUserTypeBe__LeadingZeroLtrObj::new(self.stream, self, _root)?);
   |                                                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/bcd_user_type_be.rs:48:69
   |
48 |         self.rtl = Box::new(BcdUserTypeBe__RtlObj::new(self.stream, self, _root)?);
   |                                                                     ^^^^ expected enum `std::option::Option`, found struct `bcd_user_type_be::BcdUserTypeBe`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut bcd_user_type_be::BcdUserTypeBe`

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe`
  --> src/bcd_user_type_be.rs:49:41
   |
49 |         self._raw_leadingZeroLtr = self.stream.read_bytes(4)?;
   |                                         ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe`
  --> src/bcd_user_type_be.rs:51:83
   |
51 |         self.leadingZeroLtr = Box::new(BcdUserTypeBe__LeadingZeroLtrObj::new(self.stream, self, _root)?);
   |                                                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/bcd_user_type_be.rs:51:91
   |
51 |         self.leadingZeroLtr = Box::new(BcdUserTypeBe__LeadingZeroLtrObj::new(self.stream, self, _root)?);
   |                                                                                           ^^^^ expected enum `std::option::Option`, found struct `bcd_user_type_be::BcdUserTypeBe`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut bcd_user_type_be::BcdUserTypeBe`

error[E0308]: mismatched types
  --> src/bcd_user_type_be.rs:42:27
   |
42 |           where Self: Sized {
   |  ___________________________^
43 | |         self._raw_ltr = self.stream.read_bytes(4)?;
44 | |         let mut io = Cursor::new(self._raw_ltr);
45 | |         self.ltr = Box::new(BcdUserTypeBe__LtrObj::new(self.stream, self, _root)?);
...  |
51 | |         self.leadingZeroLtr = Box::new(BcdUserTypeBe__LeadingZeroLtrObj::new(self.stream, self, _root)?);
52 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `bcd_user_type_be::BcdUserTypeBe__LtrObj`
  --> src/bcd_user_type_be.rs:83:11
   |
83 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `b1`, `b2`, `b3`, `b4`, `asInt` ... and 9 others

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe__LtrObj`
  --> src/bcd_user_type_be.rs:96:24
   |
96 |         self.b1 = self.stream.read_u1()?;
   |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe__LtrObj`
  --> src/bcd_user_type_be.rs:97:24
   |
97 |         self.b2 = self.stream.read_u1()?;
   |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe__LtrObj`
  --> src/bcd_user_type_be.rs:98:24
   |
98 |         self.b3 = self.stream.read_u1()?;
   |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe__LtrObj`
  --> src/bcd_user_type_be.rs:99:24
   |
99 |         self.b4 = self.stream.read_u1()?;
   |                        ^^^^^^

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:95:27
    |
95  |           where Self: Sized {
    |  ___________________________^
96  | |         self.b1 = self.stream.read_u1()?;
97  | |         self.b2 = self.stream.read_u1()?;
98  | |         self.b3 = self.stream.read_u1()?;
99  | |         self.b4 = self.stream.read_u1()?;
100 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:109:29
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                             ^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:109:49
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                 ^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:109:71
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:109:94
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                              ^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:109:118
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:109:143
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:109:169
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:109:196
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:110:16
    |
110 |         return self.asInt;
    |                ^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
  --> src/bcd_user_type_be.rs:51:91
   |
51 |         self.leadingZeroLtr = Box::new(BcdUserTypeBe__LeadingZeroLtrObj::new(self.stream, self, _root)?);
   |                                                                                           ^^^^ expected enum `std::option::Option`, found struct `bcd_user_type_be::BcdUserTypeBe`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut bcd_user_type_be::BcdUserTypeBe`

error[E0308]: mismatched types
  --> src/bcd_user_type_be.rs:42:27
   |
42 |           where Self: Sized {
   |  ___________________________^
43 | |         self._raw_ltr = self.stream.read_bytes(4)?;
44 | |         let mut io = Cursor::new(self._raw_ltr);
45 | |         self.ltr = Box::new(BcdUserTypeBe__LtrObj::new(self.stream, self, _root)?);
...  |
51 | |         self.leadingZeroLtr = Box::new(BcdUserTypeBe__LeadingZeroLtrObj::new(self.stream, self, _root)?);
52 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `bcd_user_type_be::BcdUserTypeBe__LtrObj`
  --> src/bcd_user_type_be.rs:83:11
   |
83 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `b1`, `b2`, `b3`, `b4`, `asInt` ... and 9 others

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe__LtrObj`
  --> src/bcd_user_type_be.rs:96:24
   |
96 |         self.b1 = self.stream.read_u1()?;
   |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe__LtrObj`
  --> src/bcd_user_type_be.rs:97:24
   |
97 |         self.b2 = self.stream.read_u1()?;
   |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe__LtrObj`
  --> src/bcd_user_type_be.rs:98:24
   |
98 |         self.b3 = self.stream.read_u1()?;
   |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe__LtrObj`
  --> src/bcd_user_type_be.rs:99:24
   |
99 |         self.b4 = self.stream.read_u1()?;
   |                        ^^^^^^

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:95:27
    |
95  |           where Self: Sized {
    |  ___________________________^
96  | |         self.b1 = self.stream.read_u1()?;
97  | |         self.b2 = self.stream.read_u1()?;
98  | |         self.b3 = self.stream.read_u1()?;
99  | |         self.b4 = self.stream.read_u1()?;
100 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:109:29
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                             ^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:109:49
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                 ^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:109:71
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:109:94
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                              ^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:109:118
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:109:143
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:109:169
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:109:196
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:110:16
    |
110 |         return self.asInt;
    |                ^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:117:23
    |
117 |         self.digit2 = (self.b1 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:118:16
    |
118 |         return self.digit2;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:117:23
    |
117 |         self.digit2 = (self.b1 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:118:16
    |
118 |         return self.digit2;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:125:23
    |
125 |         self.digit4 = (self.b2 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:126:16
    |
126 |         return self.digit4;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:125:23
    |
125 |         self.digit4 = (self.b2 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:126:16
    |
126 |         return self.digit4;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:133:23
    |
133 |         self.digit3 = ((self.b2 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:134:16
    |
134 |         return self.digit3;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:133:23
    |
133 |         self.digit3 = ((self.b2 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:134:16
    |
134 |         return self.digit3;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:141:23
    |
141 |         self.digit5 = ((self.b3 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:142:16
    |
142 |         return self.digit5;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:141:23
    |
141 |         self.digit5 = ((self.b3 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:142:16
    |
142 |         return self.digit5;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:149:23
    |
149 |         self.digit8 = (self.b4 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:150:16
    |
150 |         return self.digit8;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:149:23
    |
149 |         self.digit8 = (self.b4 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:150:16
    |
150 |         return self.digit8;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:157:23
    |
157 |         self.digit6 = (self.b3 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:158:16
    |
158 |         return self.digit6;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:157:23
    |
157 |         self.digit6 = (self.b3 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:158:16
    |
158 |         return self.digit6;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:165:146
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                  ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:165:171
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                           ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:165:197
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                     ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:165:223
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                               ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:165:146
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                  ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:165:171
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                           ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:165:249
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                         ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:165:275
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                                                   ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:165:197
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                     ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:165:301
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                                                                             ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:165:223
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                               ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:165:327
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                                                                                                       ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:165:249
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                         ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:165:275
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                                                   ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:165:301
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                                                                             ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:165:327
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                                                                                                       ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:165:22
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::string::String`
    |
    = note: expected type `std::option::Option<std::string::String>`
               found type `std::string::String`
    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)
help: try using a variant of the expected type
    |
2   | Some(::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["", ""],
3   |                                                    &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
4   |                                                                                                                  ""],
5   |                                                                                                                &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
6   |                                                                                                                                                                              ""],
7   |                                                                                                                                                                            &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
  ...

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:166:16
    |
166 |         return self.asStr;
    |                ^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
    |
    = note: expected type `std::string::String`
               found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:165:22
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::string::String`
    |
    = note: expected type `std::option::Option<std::string::String>`
               found type `std::string::String`
    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)
help: try using a variant of the expected type
    |
2   | Some(::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["", ""],
3   |                                                    &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
4   |                                                                                                                  ""],
5   |                                                                                                                &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
6   |                                                                                                                                                                              ""],
7   |                                                                                                                                                                            &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
  ...

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:166:16
    |
166 |         return self.asStr;
    |                ^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
    |
    = note: expected type `std::string::String`
               found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:173:23
    |
173 |         self.digit1 = ((self.b1 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:174:16
    |
174 |         return self.digit1;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:173:23
    |
173 |         self.digit1 = ((self.b1 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:174:16
    |
174 |         return self.digit1;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:181:23
    |
181 |         self.digit7 = ((self.b4 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:182:16
    |
182 |         return self.digit7;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `bcd_user_type_be::BcdUserTypeBe__RtlObj`
   --> src/bcd_user_type_be.rs:211:11
    |
211 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `b1`, `b2`, `b3`, `b4`, `asInt` ... and 9 others

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe__RtlObj`
   --> src/bcd_user_type_be.rs:224:24
    |
224 |         self.b1 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe__RtlObj`
   --> src/bcd_user_type_be.rs:225:24
    |
225 |         self.b2 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe__RtlObj`
   --> src/bcd_user_type_be.rs:226:24
    |
226 |         self.b3 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe__RtlObj`
   --> src/bcd_user_type_be.rs:227:24
    |
227 |         self.b4 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:223:27
    |
223 |           where Self: Sized {
    |  ___________________________^
224 | |         self.b1 = self.stream.read_u1()?;
225 | |         self.b2 = self.stream.read_u1()?;
226 | |         self.b3 = self.stream.read_u1()?;
227 | |         self.b4 = self.stream.read_u1()?;
228 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:237:29
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                             ^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:237:49
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                 ^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:237:71
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:237:94
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                                                              ^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:237:118
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:237:143
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:237:169
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:237:196
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:238:16
    |
238 |         return self.asInt;
    |                ^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:181:23
    |
181 |         self.digit7 = ((self.b4 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:182:16
    |
182 |         return self.digit7;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `bcd_user_type_be::BcdUserTypeBe__RtlObj`
   --> src/bcd_user_type_be.rs:211:11
    |
211 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `b1`, `b2`, `b3`, `b4`, `asInt` ... and 9 others

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe__RtlObj`
   --> src/bcd_user_type_be.rs:224:24
    |
224 |         self.b1 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe__RtlObj`
   --> src/bcd_user_type_be.rs:225:24
    |
225 |         self.b2 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe__RtlObj`
   --> src/bcd_user_type_be.rs:226:24
    |
226 |         self.b3 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe__RtlObj`
   --> src/bcd_user_type_be.rs:227:24
    |
227 |         self.b4 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:223:27
    |
223 |           where Self: Sized {
    |  ___________________________^
224 | |         self.b1 = self.stream.read_u1()?;
225 | |         self.b2 = self.stream.read_u1()?;
226 | |         self.b3 = self.stream.read_u1()?;
227 | |         self.b4 = self.stream.read_u1()?;
228 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:237:29
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                             ^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:237:49
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                 ^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:237:71
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:237:94
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                                                              ^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:237:118
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:237:143
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:237:169
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:237:196
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:238:16
    |
238 |         return self.asInt;
    |                ^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:245:23
    |
245 |         self.digit2 = (self.b1 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:246:16
    |
246 |         return self.digit2;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:245:23
    |
245 |         self.digit2 = (self.b1 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:246:16
    |
246 |         return self.digit2;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:253:23
    |
253 |         self.digit4 = (self.b2 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:254:16
    |
254 |         return self.digit4;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:253:23
    |
253 |         self.digit4 = (self.b2 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:254:16
    |
254 |         return self.digit4;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:261:23
    |
261 |         self.digit3 = ((self.b2 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:262:16
    |
262 |         return self.digit3;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:261:23
    |
261 |         self.digit3 = ((self.b2 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:262:16
    |
262 |         return self.digit3;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:269:23
    |
269 |         self.digit5 = ((self.b3 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:270:16
    |
270 |         return self.digit5;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:269:23
    |
269 |         self.digit5 = ((self.b3 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:270:16
    |
270 |         return self.digit5;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:277:23
    |
277 |         self.digit8 = (self.b4 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:278:16
    |
278 |         return self.digit8;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:277:23
    |
277 |         self.digit8 = (self.b4 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:278:16
    |
278 |         return self.digit8;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:285:23
    |
285 |         self.digit6 = (self.b3 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:286:16
    |
286 |         return self.digit6;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:293:146
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                  ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:293:171
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                           ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:293:197
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                                                     ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:293:223
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                                                                               ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:293:249
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                                                                                                         ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:293:275
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                                                                                                                                   ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:293:301
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                                                                                                                                                             ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:293:327
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                                                                                                                                                                                       ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:285:23
    |
285 |         self.digit6 = (self.b3 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:286:16
    |
286 |         return self.digit6;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:293:146
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                  ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:293:171
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                           ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:293:197
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                                                     ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:293:223
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                                                                               ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:293:249
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                                                                                                         ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:293:275
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                                                                                                                                   ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:293:301
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                                                                                                                                                             ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:293:327
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                                                                                                                                                                                       ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:293:22
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::string::String`
    |
    = note: expected type `std::option::Option<std::string::String>`
               found type `std::string::String`
    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)
help: try using a variant of the expected type
    |
2   | Some(::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["", ""],
3   |                                                    &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
4   |                                                                                                                  ""],
5   |                                                                                                                &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
6   |                                                                                                                                                                              ""],
7   |                                                                                                                                                                            &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
  ...

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:294:16
    |
294 |         return self.asStr;
    |                ^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
    |
    = note: expected type `std::string::String`
               found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:293:22
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::string::String`
    |
    = note: expected type `std::option::Option<std::string::String>`
               found type `std::string::String`
    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)
help: try using a variant of the expected type
    |
2   | Some(::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["", ""],
3   |                                                    &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
4   |                                                                                                                  ""],
5   |                                                                                                                &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
6   |                                                                                                                                                                              ""],
7   |                                                                                                                                                                            &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
  ...

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:294:16
    |
294 |         return self.asStr;
    |                ^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
    |
    = note: expected type `std::string::String`
               found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:301:23
    |
301 |         self.digit1 = ((self.b1 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:302:16
    |
302 |         return self.digit1;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:301:23
    |
301 |         self.digit1 = ((self.b1 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:302:16
    |
302 |         return self.digit1;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:309:23
    |
309 |         self.digit7 = ((self.b4 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:310:16
    |
310 |         return self.digit7;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `bcd_user_type_be::BcdUserTypeBe__LeadingZeroLtrObj`
   --> src/bcd_user_type_be.rs:339:11
    |
339 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `b1`, `b2`, `b3`, `b4`, `asInt` ... and 9 others

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe__LeadingZeroLtrObj`
   --> src/bcd_user_type_be.rs:352:24
    |
352 |         self.b1 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe__LeadingZeroLtrObj`
   --> src/bcd_user_type_be.rs:353:24
    |
353 |         self.b2 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe__LeadingZeroLtrObj`
   --> src/bcd_user_type_be.rs:354:24
    |
354 |         self.b3 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe__LeadingZeroLtrObj`
   --> src/bcd_user_type_be.rs:355:24
    |
355 |         self.b4 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:351:27
    |
351 |           where Self: Sized {
    |  ___________________________^
352 | |         self.b1 = self.stream.read_u1()?;
353 | |         self.b2 = self.stream.read_u1()?;
354 | |         self.b3 = self.stream.read_u1()?;
355 | |         self.b4 = self.stream.read_u1()?;
356 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:365:29
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                             ^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:365:49
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                 ^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:365:71
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:365:94
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                              ^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:365:118
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:365:143
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:365:169
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:365:196
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:366:16
    |
366 |         return self.asInt;
    |                ^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:309:23
    |
309 |         self.digit7 = ((self.b4 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:310:16
    |
310 |         return self.digit7;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `bcd_user_type_be::BcdUserTypeBe__LeadingZeroLtrObj`
   --> src/bcd_user_type_be.rs:339:11
    |
339 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `b1`, `b2`, `b3`, `b4`, `asInt` ... and 9 others

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe__LeadingZeroLtrObj`
   --> src/bcd_user_type_be.rs:352:24
    |
352 |         self.b1 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe__LeadingZeroLtrObj`
   --> src/bcd_user_type_be.rs:353:24
    |
353 |         self.b2 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe__LeadingZeroLtrObj`
   --> src/bcd_user_type_be.rs:354:24
    |
354 |         self.b3 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_be::BcdUserTypeBe__LeadingZeroLtrObj`
   --> src/bcd_user_type_be.rs:355:24
    |
355 |         self.b4 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:351:27
    |
351 |           where Self: Sized {
    |  ___________________________^
352 | |         self.b1 = self.stream.read_u1()?;
353 | |         self.b2 = self.stream.read_u1()?;
354 | |         self.b3 = self.stream.read_u1()?;
355 | |         self.b4 = self.stream.read_u1()?;
356 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:365:29
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                             ^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:365:49
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                 ^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:365:71
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:365:94
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                              ^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:365:118
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:365:143
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:365:169
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_be.rs:365:196
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:366:16
    |
366 |         return self.asInt;
    |                ^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:373:23
    |
373 |         self.digit2 = (self.b1 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:374:16
    |
374 |         return self.digit2;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:373:23
    |
373 |         self.digit2 = (self.b1 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:374:16
    |
374 |         return self.digit2;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:381:23
    |
381 |         self.digit4 = (self.b2 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:382:16
    |
382 |         return self.digit4;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:381:23
    |
381 |         self.digit4 = (self.b2 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:389:23
    |
389 |         self.digit3 = ((self.b2 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:382:16
    |
382 |         return self.digit4;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:390:16
    |
390 |         return self.digit3;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:397:23
    |
397 |         self.digit5 = ((self.b3 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:398:16
    |
398 |         return self.digit5;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:389:23
    |
389 |         self.digit3 = ((self.b2 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:390:16
    |
390 |         return self.digit3;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:405:23
    |
405 |         self.digit8 = (self.b4 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:406:16
    |
406 |         return self.digit8;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:397:23
    |
397 |         self.digit5 = ((self.b3 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:398:16
    |
398 |         return self.digit5;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:413:23
    |
413 |         self.digit6 = (self.b3 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:414:16
    |
414 |         return self.digit6;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:421:146
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                  ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:421:171
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                           ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:421:197
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                     ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:421:223
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                               ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:421:249
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                         ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:421:275
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                                                   ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:405:23
    |
405 |         self.digit8 = (self.b4 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:406:16
    |
406 |         return self.digit8;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:421:301
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                                                                             ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:421:327
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                                                                                                       ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:413:23
    |
413 |         self.digit6 = (self.b3 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:414:16
    |
414 |         return self.digit6;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:421:146
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                  ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:421:171
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                           ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:421:197
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                     ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:421:223
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                               ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:421:249
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                         ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:421:275
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                                                   ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:421:301
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                                                                             ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_be.rs:421:327
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                                                                                                       ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:421:22
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::string::String`
    |
    = note: expected type `std::option::Option<std::string::String>`
               found type `std::string::String`
    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)
help: try using a variant of the expected type
    |
2   | Some(::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["", ""],
3   |                                                    &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
4   |                                                                                                                  ""],
5   |                                                                                                                &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
6   |                                                                                                                                                                              ""],
7   |                                                                                                                                                                            &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
  ...

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:422:16
    |
422 |         return self.asStr;
    |                ^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
    |
    = note: expected type `std::string::String`
               found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:429:23
    |
429 |         self.digit1 = ((self.b1 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:430:16
    |
430 |         return self.digit1;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:421:22
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::string::String`
    |
    = note: expected type `std::option::Option<std::string::String>`
               found type `std::string::String`
    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)
help: try using a variant of the expected type
    |
2   | Some(::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["", ""],
3   |                                                    &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
4   |                                                                                                                  ""],
5   |                                                                                                                &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
6   |                                                                                                                                                                              ""],
7   |                                                                                                                                                                            &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
  ...

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:422:16
    |
422 |         return self.asStr;
    |                ^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
    |
    = note: expected type `std::string::String`
               found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:437:23
    |
437 |         self.digit7 = ((self.b4 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:438:16
    |
438 |         return self.digit7;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `bcd_user_type_le::BcdUserTypeLe`
  --> src/bcd_user_type_le.rs:30:11
   |
30 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `ltr`, `rtl`, `leadingZeroLtr`, `_raw_ltr`, `_raw_rtl`, `_raw_leadingZeroLtr`

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe`
  --> src/bcd_user_type_le.rs:43:30
   |
43 |         self._raw_ltr = self.stream.read_bytes(4)?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe`
  --> src/bcd_user_type_le.rs:45:61
   |
45 |         self.ltr = Box::new(BcdUserTypeLe__LtrObj::new(self.stream, self, _root)?);
   |                                                             ^^^^^^

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:429:23
    |
429 |         self.digit1 = ((self.b1 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:430:16
    |
430 |         return self.digit1;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
  --> src/bcd_user_type_le.rs:45:69
   |
45 |         self.ltr = Box::new(BcdUserTypeLe__LtrObj::new(self.stream, self, _root)?);
   |                                                                     ^^^^ expected enum `std::option::Option`, found struct `bcd_user_type_le::BcdUserTypeLe`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut bcd_user_type_le::BcdUserTypeLe`

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe`
  --> src/bcd_user_type_le.rs:46:30
   |
46 |         self._raw_rtl = self.stream.read_bytes(4)?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe`
  --> src/bcd_user_type_le.rs:48:61
   |
48 |         self.rtl = Box::new(BcdUserTypeLe__RtlObj::new(self.stream, self, _root)?);
   |                                                             ^^^^^^

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:437:23
    |
437 |         self.digit7 = ((self.b4 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_be.rs:438:16
    |
438 |         return self.digit7;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `bcd_user_type_le::BcdUserTypeLe`
  --> src/bcd_user_type_le.rs:30:11
   |
30 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `ltr`, `rtl`, `leadingZeroLtr`, `_raw_ltr`, `_raw_rtl`, `_raw_leadingZeroLtr`

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe`
  --> src/bcd_user_type_le.rs:43:30
   |
43 |         self._raw_ltr = self.stream.read_bytes(4)?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe`
  --> src/bcd_user_type_le.rs:45:61
   |
45 |         self.ltr = Box::new(BcdUserTypeLe__LtrObj::new(self.stream, self, _root)?);
   |                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/bcd_user_type_le.rs:48:69
   |
48 |         self.rtl = Box::new(BcdUserTypeLe__RtlObj::new(self.stream, self, _root)?);
   |                                                                     ^^^^ expected enum `std::option::Option`, found struct `bcd_user_type_le::BcdUserTypeLe`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut bcd_user_type_le::BcdUserTypeLe`

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe`
  --> src/bcd_user_type_le.rs:49:41
   |
49 |         self._raw_leadingZeroLtr = self.stream.read_bytes(4)?;
   |                                         ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe`
  --> src/bcd_user_type_le.rs:51:83
   |
51 |         self.leadingZeroLtr = Box::new(BcdUserTypeLe__LeadingZeroLtrObj::new(self.stream, self, _root)?);
   |                                                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/bcd_user_type_le.rs:45:69
   |
45 |         self.ltr = Box::new(BcdUserTypeLe__LtrObj::new(self.stream, self, _root)?);
   |                                                                     ^^^^ expected enum `std::option::Option`, found struct `bcd_user_type_le::BcdUserTypeLe`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut bcd_user_type_le::BcdUserTypeLe`

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe`
  --> src/bcd_user_type_le.rs:46:30
   |
46 |         self._raw_rtl = self.stream.read_bytes(4)?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe`
  --> src/bcd_user_type_le.rs:48:61
   |
48 |         self.rtl = Box::new(BcdUserTypeLe__RtlObj::new(self.stream, self, _root)?);
   |                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/bcd_user_type_le.rs:51:91
   |
51 |         self.leadingZeroLtr = Box::new(BcdUserTypeLe__LeadingZeroLtrObj::new(self.stream, self, _root)?);
   |                                                                                           ^^^^ expected enum `std::option::Option`, found struct `bcd_user_type_le::BcdUserTypeLe`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut bcd_user_type_le::BcdUserTypeLe`

error[E0308]: mismatched types
  --> src/bcd_user_type_le.rs:42:27
   |
42 |           where Self: Sized {
   |  ___________________________^
43 | |         self._raw_ltr = self.stream.read_bytes(4)?;
44 | |         let mut io = Cursor::new(self._raw_ltr);
45 | |         self.ltr = Box::new(BcdUserTypeLe__LtrObj::new(self.stream, self, _root)?);
...  |
51 | |         self.leadingZeroLtr = Box::new(BcdUserTypeLe__LeadingZeroLtrObj::new(self.stream, self, _root)?);
52 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `bcd_user_type_le::BcdUserTypeLe__LtrObj`
  --> src/bcd_user_type_le.rs:83:11
   |
83 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `b1`, `b2`, `b3`, `b4`, `asInt` ... and 9 others

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe__LtrObj`
  --> src/bcd_user_type_le.rs:96:24
   |
96 |         self.b1 = self.stream.read_u1()?;
   |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe__LtrObj`
  --> src/bcd_user_type_le.rs:97:24
   |
97 |         self.b2 = self.stream.read_u1()?;
   |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe__LtrObj`
  --> src/bcd_user_type_le.rs:98:24
   |
98 |         self.b3 = self.stream.read_u1()?;
   |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe__LtrObj`
  --> src/bcd_user_type_le.rs:99:24
   |
99 |         self.b4 = self.stream.read_u1()?;
   |                        ^^^^^^

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:95:27
    |
95  |           where Self: Sized {
    |  ___________________________^
96  | |         self.b1 = self.stream.read_u1()?;
97  | |         self.b2 = self.stream.read_u1()?;
98  | |         self.b3 = self.stream.read_u1()?;
99  | |         self.b4 = self.stream.read_u1()?;
100 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:109:29
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                             ^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:109:49
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                 ^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:109:71
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:109:94
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                              ^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:109:118
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:109:143
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:109:169
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:109:196
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:110:16
    |
110 |         return self.asInt;
    |                ^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
  --> src/bcd_user_type_le.rs:48:69
   |
48 |         self.rtl = Box::new(BcdUserTypeLe__RtlObj::new(self.stream, self, _root)?);
   |                                                                     ^^^^ expected enum `std::option::Option`, found struct `bcd_user_type_le::BcdUserTypeLe`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut bcd_user_type_le::BcdUserTypeLe`

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe`
  --> src/bcd_user_type_le.rs:49:41
   |
49 |         self._raw_leadingZeroLtr = self.stream.read_bytes(4)?;
   |                                         ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe`
  --> src/bcd_user_type_le.rs:51:83
   |
51 |         self.leadingZeroLtr = Box::new(BcdUserTypeLe__LeadingZeroLtrObj::new(self.stream, self, _root)?);
   |                                                                                   ^^^^^^

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:117:23
    |
117 |         self.digit2 = (self.b4 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:118:16
    |
118 |         return self.digit2;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
  --> src/bcd_user_type_le.rs:51:91
   |
51 |         self.leadingZeroLtr = Box::new(BcdUserTypeLe__LeadingZeroLtrObj::new(self.stream, self, _root)?);
   |                                                                                           ^^^^ expected enum `std::option::Option`, found struct `bcd_user_type_le::BcdUserTypeLe`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut bcd_user_type_le::BcdUserTypeLe`

error[E0308]: mismatched types
  --> src/bcd_user_type_le.rs:42:27
   |
42 |           where Self: Sized {
   |  ___________________________^
43 | |         self._raw_ltr = self.stream.read_bytes(4)?;
44 | |         let mut io = Cursor::new(self._raw_ltr);
45 | |         self.ltr = Box::new(BcdUserTypeLe__LtrObj::new(self.stream, self, _root)?);
...  |
51 | |         self.leadingZeroLtr = Box::new(BcdUserTypeLe__LeadingZeroLtrObj::new(self.stream, self, _root)?);
52 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `bcd_user_type_le::BcdUserTypeLe__LtrObj`
  --> src/bcd_user_type_le.rs:83:11
   |
83 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `b1`, `b2`, `b3`, `b4`, `asInt` ... and 9 others

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe__LtrObj`
  --> src/bcd_user_type_le.rs:96:24
   |
96 |         self.b1 = self.stream.read_u1()?;
   |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe__LtrObj`
  --> src/bcd_user_type_le.rs:97:24
   |
97 |         self.b2 = self.stream.read_u1()?;
   |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe__LtrObj`
  --> src/bcd_user_type_le.rs:98:24
   |
98 |         self.b3 = self.stream.read_u1()?;
   |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe__LtrObj`
  --> src/bcd_user_type_le.rs:99:24
   |
99 |         self.b4 = self.stream.read_u1()?;
   |                        ^^^^^^

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:95:27
    |
95  |           where Self: Sized {
    |  ___________________________^
96  | |         self.b1 = self.stream.read_u1()?;
97  | |         self.b2 = self.stream.read_u1()?;
98  | |         self.b3 = self.stream.read_u1()?;
99  | |         self.b4 = self.stream.read_u1()?;
100 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:109:29
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                             ^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:109:49
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                 ^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:109:71
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:109:94
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                              ^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:109:118
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:109:143
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:109:169
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:109:196
    |
109 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:110:16
    |
110 |         return self.asInt;
    |                ^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:125:23
    |
125 |         self.digit4 = (self.b3 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:126:16
    |
126 |         return self.digit4;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:117:23
    |
117 |         self.digit2 = (self.b4 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:118:16
    |
118 |         return self.digit2;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:133:23
    |
133 |         self.digit3 = ((self.b3 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:134:16
    |
134 |         return self.digit3;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:125:23
    |
125 |         self.digit4 = (self.b3 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:126:16
    |
126 |         return self.digit4;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:141:23
    |
141 |         self.digit5 = ((self.b2 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:142:16
    |
142 |         return self.digit5;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:133:23
    |
133 |         self.digit3 = ((self.b3 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:134:16
    |
134 |         return self.digit3;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:149:23
    |
149 |         self.digit8 = (self.b1 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:150:16
    |
150 |         return self.digit8;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:141:23
    |
141 |         self.digit5 = ((self.b2 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:142:16
    |
142 |         return self.digit5;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:157:23
    |
157 |         self.digit6 = (self.b2 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:158:16
    |
158 |         return self.digit6;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:165:146
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                  ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:165:171
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                           ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:165:197
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                     ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:165:223
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                               ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:165:249
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                         ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:165:275
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                                                   ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:165:301
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                                                                             ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:165:327
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                                                                                                       ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:149:23
    |
149 |         self.digit8 = (self.b1 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:150:16
    |
150 |         return self.digit8;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:165:22
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::string::String`
    |
    = note: expected type `std::option::Option<std::string::String>`
               found type `std::string::String`
    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)
help: try using a variant of the expected type
    |
2   | Some(::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["", ""],
3   |                                                    &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
4   |                                                                                                                  ""],
5   |                                                                                                                &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
6   |                                                                                                                                                                              ""],
7   |                                                                                                                                                                            &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
  ...

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:166:16
    |
166 |         return self.asStr;
    |                ^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
    |
    = note: expected type `std::string::String`
               found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:157:23
    |
157 |         self.digit6 = (self.b2 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:158:16
    |
158 |         return self.digit6;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:165:146
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                  ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:165:171
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                           ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:165:197
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                     ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:165:223
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                               ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:165:249
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                         ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:165:275
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                                                   ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:165:301
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                                                                             ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:165:327
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                                                                                                       ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:173:23
    |
173 |         self.digit1 = ((self.b4 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:174:16
    |
174 |         return self.digit1;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:181:23
    |
181 |         self.digit7 = ((self.b1 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:182:16
    |
182 |         return self.digit7;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `bcd_user_type_le::BcdUserTypeLe__RtlObj`
   --> src/bcd_user_type_le.rs:211:11
    |
211 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `b1`, `b2`, `b3`, `b4`, `asInt` ... and 9 others

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:165:22
    |
165 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::string::String`
    |
    = note: expected type `std::option::Option<std::string::String>`
               found type `std::string::String`
    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)
help: try using a variant of the expected type
    |
2   | Some(::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["", ""],
3   |                                                    &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
4   |                                                                                                                  ""],
5   |                                                                                                                &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
6   |                                                                                                                                                                              ""],
7   |                                                                                                                                                                            &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
  ...

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:166:16
    |
166 |         return self.asStr;
    |                ^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
    |
    = note: expected type `std::string::String`
               found type `std::option::Option<std::string::String>`

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe__RtlObj`
   --> src/bcd_user_type_le.rs:224:24
    |
224 |         self.b1 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe__RtlObj`
   --> src/bcd_user_type_le.rs:225:24
    |
225 |         self.b2 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe__RtlObj`
   --> src/bcd_user_type_le.rs:226:24
    |
226 |         self.b3 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe__RtlObj`
   --> src/bcd_user_type_le.rs:227:24
    |
227 |         self.b4 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:223:27
    |
223 |           where Self: Sized {
    |  ___________________________^
224 | |         self.b1 = self.stream.read_u1()?;
225 | |         self.b2 = self.stream.read_u1()?;
226 | |         self.b3 = self.stream.read_u1()?;
227 | |         self.b4 = self.stream.read_u1()?;
228 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:237:29
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                             ^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:237:49
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                 ^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:237:71
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:237:94
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                                                              ^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:237:118
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:237:143
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:237:169
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:237:196
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:238:16
    |
238 |         return self.asInt;
    |                ^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:173:23
    |
173 |         self.digit1 = ((self.b4 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:174:16
    |
174 |         return self.digit1;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:245:23
    |
245 |         self.digit2 = (self.b4 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:246:16
    |
246 |         return self.digit2;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:181:23
    |
181 |         self.digit7 = ((self.b1 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:182:16
    |
182 |         return self.digit7;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:253:23
    |
253 |         self.digit4 = (self.b3 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:254:16
    |
254 |         return self.digit4;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `bcd_user_type_le::BcdUserTypeLe__RtlObj`
   --> src/bcd_user_type_le.rs:211:11
    |
211 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `b1`, `b2`, `b3`, `b4`, `asInt` ... and 9 others

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe__RtlObj`
   --> src/bcd_user_type_le.rs:224:24
    |
224 |         self.b1 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe__RtlObj`
   --> src/bcd_user_type_le.rs:225:24
    |
225 |         self.b2 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe__RtlObj`
   --> src/bcd_user_type_le.rs:226:24
    |
226 |         self.b3 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe__RtlObj`
   --> src/bcd_user_type_le.rs:227:24
    |
227 |         self.b4 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:223:27
    |
223 |           where Self: Sized {
    |  ___________________________^
224 | |         self.b1 = self.stream.read_u1()?;
225 | |         self.b2 = self.stream.read_u1()?;
226 | |         self.b3 = self.stream.read_u1()?;
227 | |         self.b4 = self.stream.read_u1()?;
228 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:237:29
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                             ^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:237:49
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                 ^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:237:71
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:237:94
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                                                              ^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:237:118
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:237:143
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:237:169
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:237:196
    |
237 |         self.asInt = ((((((((self.digit1 * 1) + (self.digit2 * 10)) + (self.digit3 * 100)) + (self.digit4 * 1000)) + (self.digit5 * 10000)) + (self.digit6 * 100000)) + (self.digit7 * 1000000)) + (self.digit8 * 10000000));
    |                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:238:16
    |
238 |         return self.asInt;
    |                ^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:261:23
    |
261 |         self.digit3 = ((self.b3 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:262:16
    |
262 |         return self.digit3;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:245:23
    |
245 |         self.digit2 = (self.b4 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:246:16
    |
246 |         return self.digit2;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:269:23
    |
269 |         self.digit5 = ((self.b2 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:270:16
    |
270 |         return self.digit5;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:253:23
    |
253 |         self.digit4 = (self.b3 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:254:16
    |
254 |         return self.digit4;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:277:23
    |
277 |         self.digit8 = (self.b1 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:278:16
    |
278 |         return self.digit8;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:261:23
    |
261 |         self.digit3 = ((self.b3 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:262:16
    |
262 |         return self.digit3;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:285:23
    |
285 |         self.digit6 = (self.b2 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:286:16
    |
286 |         return self.digit6;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:293:146
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                  ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:293:171
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                           ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:293:197
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                                                     ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:293:223
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                                                                               ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:293:249
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                                                                                                         ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:293:275
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                                                                                                                                   ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:293:301
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                                                                                                                                                             ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:293:327
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                                                                                                                                                                                       ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:269:23
    |
269 |         self.digit5 = ((self.b2 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:270:16
    |
270 |         return self.digit5;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:293:22
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::string::String`
    |
    = note: expected type `std::option::Option<std::string::String>`
               found type `std::string::String`
    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)
help: try using a variant of the expected type
    |
2   | Some(::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["", ""],
3   |                                                    &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
4   |                                                                                                                  ""],
5   |                                                                                                                &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
6   |                                                                                                                                                                              ""],
7   |                                                                                                                                                                            &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
  ...

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:294:16
    |
294 |         return self.asStr;
    |                ^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
    |
    = note: expected type `std::string::String`
               found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:277:23
    |
277 |         self.digit8 = (self.b1 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:278:16
    |
278 |         return self.digit8;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:301:23
    |
301 |         self.digit1 = ((self.b4 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:302:16
    |
302 |         return self.digit1;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:285:23
    |
285 |         self.digit6 = (self.b2 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:286:16
    |
286 |         return self.digit6;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:293:146
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                  ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:293:171
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                           ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:293:197
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                                                     ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:293:223
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                                                                               ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:293:249
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                                                                                                         ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:293:275
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                                                                                                                                   ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:293:301
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                                                                                                                                                             ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:293:327
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                                                                                                                                                                                                                                                                                                                                       ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:309:23
    |
309 |         self.digit7 = ((self.b1 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:310:16
    |
310 |         return self.digit7;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `bcd_user_type_le::BcdUserTypeLe__LeadingZeroLtrObj`
   --> src/bcd_user_type_le.rs:339:11
    |
339 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `b1`, `b2`, `b3`, `b4`, `asInt` ... and 9 others

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe__LeadingZeroLtrObj`
   --> src/bcd_user_type_le.rs:352:24
    |
352 |         self.b1 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe__LeadingZeroLtrObj`
   --> src/bcd_user_type_le.rs:353:24
    |
353 |         self.b2 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe__LeadingZeroLtrObj`
   --> src/bcd_user_type_le.rs:354:24
    |
354 |         self.b3 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe__LeadingZeroLtrObj`
   --> src/bcd_user_type_le.rs:355:24
    |
355 |         self.b4 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:351:27
    |
351 |           where Self: Sized {
    |  ___________________________^
352 | |         self.b1 = self.stream.read_u1()?;
353 | |         self.b2 = self.stream.read_u1()?;
354 | |         self.b3 = self.stream.read_u1()?;
355 | |         self.b4 = self.stream.read_u1()?;
356 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:365:29
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                             ^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:365:49
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                 ^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:365:71
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:365:94
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                              ^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:365:118
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:365:143
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:365:169
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:365:196
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:366:16
    |
366 |         return self.asInt;
    |                ^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:293:22
    |
293 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit8.to_string(), self.digit7.to_string()), self.digit6.to_string()), self.digit5.to_string()), self.digit4.to_string()), self.digit3.to_string()), self.digit2.to_string()), self.digit1.to_string());
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::string::String`
    |
    = note: expected type `std::option::Option<std::string::String>`
               found type `std::string::String`
    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)
help: try using a variant of the expected type
    |
2   | Some(::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["", ""],
3   |                                                    &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
4   |                                                                                                                  ""],
5   |                                                                                                                &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
6   |                                                                                                                                                                              ""],
7   |                                                                                                                                                                            &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
  ...

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:294:16
    |
294 |         return self.asStr;
    |                ^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
    |
    = note: expected type `std::string::String`
               found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:373:23
    |
373 |         self.digit2 = (self.b4 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:374:16
    |
374 |         return self.digit2;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:301:23
    |
301 |         self.digit1 = ((self.b4 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:302:16
    |
302 |         return self.digit1;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:381:23
    |
381 |         self.digit4 = (self.b3 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:382:16
    |
382 |         return self.digit4;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:309:23
    |
309 |         self.digit7 = ((self.b1 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:310:16
    |
310 |         return self.digit7;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `bcd_user_type_le::BcdUserTypeLe__LeadingZeroLtrObj`
   --> src/bcd_user_type_le.rs:339:11
    |
339 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `b1`, `b2`, `b3`, `b4`, `asInt` ... and 9 others

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:389:23
    |
389 |         self.digit3 = ((self.b3 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:390:16
    |
390 |         return self.digit3;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe__LeadingZeroLtrObj`
   --> src/bcd_user_type_le.rs:352:24
    |
352 |         self.b1 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe__LeadingZeroLtrObj`
   --> src/bcd_user_type_le.rs:353:24
    |
353 |         self.b2 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe__LeadingZeroLtrObj`
   --> src/bcd_user_type_le.rs:354:24
    |
354 |         self.b3 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut bcd_user_type_le::BcdUserTypeLe__LeadingZeroLtrObj`
   --> src/bcd_user_type_le.rs:355:24
    |
355 |         self.b4 = self.stream.read_u1()?;
    |                        ^^^^^^

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:351:27
    |
351 |           where Self: Sized {
    |  ___________________________^
352 | |         self.b1 = self.stream.read_u1()?;
353 | |         self.b2 = self.stream.read_u1()?;
354 | |         self.b3 = self.stream.read_u1()?;
355 | |         self.b4 = self.stream.read_u1()?;
356 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:365:29
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                             ^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:365:49
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                 ^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:365:71
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:365:94
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                              ^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:365:118
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:365:143
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:365:169
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0369]: binary operation `*` cannot be applied to type `std::option::Option<i32>`
   --> src/bcd_user_type_le.rs:365:196
    |
365 |         self.asInt = ((((((((self.digit8 * 1) + (self.digit7 * 10)) + (self.digit6 * 100)) + (self.digit5 * 1000)) + (self.digit4 * 10000)) + (self.digit3 * 100000)) + (self.digit2 * 1000000)) + (self.digit1 * 10000000));
    |                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: an implementation of `std::ops::Mul` might be missing for `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:366:16
    |
366 |         return self.asInt;
    |                ^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:397:23
    |
397 |         self.digit5 = ((self.b2 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:398:16
    |
398 |         return self.digit5;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:373:23
    |
373 |         self.digit2 = (self.b4 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:374:16
    |
374 |         return self.digit2;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:405:23
    |
405 |         self.digit8 = (self.b1 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:406:16
    |
406 |         return self.digit8;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:381:23
    |
381 |         self.digit4 = (self.b3 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:382:16
    |
382 |         return self.digit4;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:413:23
    |
413 |         self.digit6 = (self.b2 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:414:16
    |
414 |         return self.digit6;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:421:146
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                  ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:421:171
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                           ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:421:197
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                     ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:421:223
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                               ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:421:249
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                         ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:421:275
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                                                   ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:421:301
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                                                                             ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:389:23
    |
389 |         self.digit3 = ((self.b3 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:390:16
    |
390 |         return self.digit3;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:421:327
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                                                                                                       ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:397:23
    |
397 |         self.digit5 = ((self.b2 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:398:16
    |
398 |         return self.digit5;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:421:22
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::string::String`
    |
    = note: expected type `std::option::Option<std::string::String>`
               found type `std::string::String`
    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)
help: try using a variant of the expected type
    |
2   | Some(::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["", ""],
3   |                                                    &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
4   |                                                                                                                  ""],
5   |                                                                                                                &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
6   |                                                                                                                                                                              ""],
7   |                                                                                                                                                                            &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
  ...

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:422:16
    |
422 |         return self.asStr;
    |                ^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
    |
    = note: expected type `std::string::String`
               found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:405:23
    |
405 |         self.digit8 = (self.b1 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:406:16
    |
406 |         return self.digit8;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:429:23
    |
429 |         self.digit1 = ((self.b4 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:430:16
    |
430 |         return self.digit1;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:413:23
    |
413 |         self.digit6 = (self.b2 & 15);
    |                       ^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:414:16
    |
414 |         return self.digit6;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:421:146
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                  ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:421:171
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                           ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:421:197
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                     ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:421:223
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                               ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:421:249
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                         ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:421:275
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                                                   ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:437:23
    |
437 |         self.digit7 = ((self.b1 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:438:16
    |
438 |         return self.digit7;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:421:301
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                                                                             ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0609]: no field `stream` on type `bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:32:11
   |
32 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `byte1`, `two`, `three`, `byte2` ... and 4 others

error[E0599]: no method named `to_string` found for type `std::option::Option<i32>` in the current scope
   --> src/bcd_user_type_le.rs:421:327
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                                                                                                                                                                                                                                                                                                                                       ^^^^^^^^^
    |
    = note: the method `to_string` exists but the following trait bounds were not satisfied:
            `std::option::Option<i32> : std::string::ToString`

error[E0609]: no field `stream` on type `&mut bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:45:25
   |
45 |         self.one = self.stream.read_bits_int(6)?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:46:14
   |
46 |         self.stream.alignToByte();
   |              ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:47:27
   |
47 |         self.byte1 = self.stream.read_u1()?;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:48:25
   |
48 |         self.two = self.stream.read_bits_int(3)?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:49:27
   |
49 |         self.three = self.stream.read_bits_int(1)? != 0;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:50:14
   |
50 |         self.stream.alignToByte();
   |              ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:51:27
   |
51 |         self.byte2 = self.stream.read_u1()?;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:52:26
   |
52 |         self.four = self.stream.read_bits_int(14)?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:53:14
   |
53 |         self.stream.alignToByte();
   |              ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:54:27
   |
54 |         self.byte3 = self.stream.read_bytes(1)?;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:55:30
   |
55 |         self.fullByte = self.stream.read_bits_int(8)?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:56:14
   |
56 |         self.stream.alignToByte();
   |              ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:57:27
   |
57 |         self.byte4 = self.stream.read_u1()?;
   |                           ^^^^^^

error[E0308]: mismatched types
  --> src/bits_byte_aligned.rs:44:27
   |
44 |           where Self: Sized {
   |  ___________________________^
45 | |         self.one = self.stream.read_bits_int(6)?;
46 | |         self.stream.alignToByte();
47 | |         self.byte1 = self.stream.read_u1()?;
...  |
57 | |         self.byte4 = self.stream.read_u1()?;
58 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0277]: the trait bound `bits_enum::BitsEnum__Animal: std::default::Default` is not satisfied
  --> src/bits_enum.rs:13:5
   |
13 |     pub one: Box<BitsEnum__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `bits_enum::BitsEnum__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<bits_enum::BitsEnum__Animal>`
   = note: required by `std::default::Default::default`

error[E0277]: the trait bound `bits_enum::BitsEnum__Animal: std::default::Default` is not satisfied
  --> src/bits_enum.rs:14:5
   |
14 |     pub two: Box<BitsEnum__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `bits_enum::BitsEnum__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<bits_enum::BitsEnum__Animal>`
   = note: required by `std::default::Default::default`

error[E0277]: the trait bound `bits_enum::BitsEnum__Animal: std::default::Default` is not satisfied
  --> src/bits_enum.rs:15:5
   |
15 |     pub three: Box<BitsEnum__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `bits_enum::BitsEnum__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<bits_enum::BitsEnum__Animal>`
   = note: required by `std::default::Default::default`

error[E0609]: no field `stream` on type `bits_enum::BitsEnum`
  --> src/bits_enum.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`, `three`

error[E0609]: no field `stream` on type `&mut bits_enum::BitsEnum`
  --> src/bits_enum.rs:39:25
   |
39 |         self.one = self.stream.read_bits_int(4)?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_enum::BitsEnum`
  --> src/bits_enum.rs:40:25
   |
40 |         self.two = self.stream.read_bits_int(8)?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_enum::BitsEnum`
  --> src/bits_enum.rs:41:27
   |
41 |         self.three = self.stream.read_bits_int(1)?;
   |                           ^^^^^^

error[E0308]: mismatched types
  --> src/bits_enum.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.one = self.stream.read_bits_int(4)?;
40 | |         self.two = self.stream.read_bits_int(8)?;
41 | |         self.three = self.stream.read_bits_int(1)?;
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `bits_simple::BitsSimple`
  --> src/bits_simple.rs:37:11
   |
37 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `byte1`, `byte2`, `bitsA`, `bitsB`, `bitsC` ... and 9 others

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:50:27
   |
50 |         self.byte1 = self.stream.read_bits_int(8)?;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:51:27
   |
51 |         self.byte2 = self.stream.read_bits_int(8)?;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:52:27
   |
52 |         self.bitsA = self.stream.read_bits_int(1)? != 0;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:53:27
   |
53 |         self.bitsB = self.stream.read_bits_int(3)?;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:54:27
   |
54 |         self.bitsC = self.stream.read_bits_int(4)?;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:55:32
   |
55 |         self.largeBits1 = self.stream.read_bits_int(10)?;
   |                                ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:56:28
   |
56 |         self.spacer = self.stream.read_bits_int(3)?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:57:32
   |
57 |         self.largeBits2 = self.stream.read_bits_int(11)?;
   |                                ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:58:14
   |
58 |         self.stream.alignToByte();
   |              ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:59:30
   |
59 |         self.normalS2 = self.stream.read_s2be()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:60:30
   |
60 |         self.byte8910 = self.stream.read_bits_int(24)?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:61:32
   |
61 |         self.byte11To14 = self.stream.read_bits_int(32)?;
   |                                ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:62:32
   |
62 |         self.byte15To19 = self.stream.read_bits_int(40)?;
   |                                ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:63:32
   |
63 |         self.byte20To27 = self.stream.read_bits_int(64)?;
   |                                ^^^^^^

error[E0308]: mismatched types
  --> src/bits_simple.rs:49:27
   |
49 |           where Self: Sized {
   |  ___________________________^
50 | |         self.byte1 = self.stream.read_bits_int(8)?;
51 | |         self.byte2 = self.stream.read_bits_int(8)?;
52 | |         self.bitsA = self.stream.read_bits_int(1)? != 0;
...  |
63 | |         self.byte20To27 = self.stream.read_bits_int(64)?;
64 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `bits_a` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:73:17
   |
73 |         if self.bits_a == false {
   |                 ^^^^^^

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:421:22
    |
421 |         self.asStr = format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", format!("{}{}", self.digit1.to_string(), self.digit2.to_string()), self.digit3.to_string()), self.digit4.to_string()), self.digit5.to_string()), self.digit6.to_string()), self.digit7.to_string()), self.digit8.to_string());
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::string::String`
    |
    = note: expected type `std::option::Option<std::string::String>`
               found type `std::string::String`
    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)
help: try using a variant of the expected type
    |
2   | Some(::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["", ""],
3   |                                                    &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
4   |                                                                                                                  ""],
5   |                                                                                                                &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
6   |                                                                                                                                                                              ""],
7   |                                                                                                                                                                            &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
  ...

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:422:16
    |
422 |         return self.asStr;
    |                ^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
    |
    = note: expected type `std::string::String`
               found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:429:23
    |
429 |         self.digit1 = ((self.b4 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:430:16
    |
430 |         return self.digit1;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
  --> src/bits_simple.rs:74:29
   |
74 |             self.testIfB1 = 123;
   |                             ^^^
   |                             |
   |                             expected enum `std::option::Option`, found integral variable
   |                             help: try using a variant of the expected type: `Some(123)`
   |
   = note: expected type `std::option::Option<i8>`
              found type `{integer}`

error[E0308]: mismatched types
  --> src/bits_simple.rs:76:16
   |
76 |         return self.testIfB1;
   |                ^^^^^^^^^^^^^ expected i8, found enum `std::option::Option`
   |
   = note: expected type `i8`
              found type `std::option::Option<i8>`

error[E0609]: no field `stream` on type `buffered_struct::BufferedStruct`
  --> src/buffered_struct.rs:31:11
   |
31 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `len1`, `block1`, `len2`, `block2`, `finisher` ... and 2 others

error[E0609]: no field `stream` on type `&mut buffered_struct::BufferedStruct`
  --> src/buffered_struct.rs:44:26
   |
44 |         self.len1 = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut buffered_struct::BufferedStruct`
  --> src/buffered_struct.rs:45:33
   |
45 |         self._raw_block1 = self.stream.read_bytes(self.len1)?;
   |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut buffered_struct::BufferedStruct`
  --> src/buffered_struct.rs:47:64
   |
47 |         self.block1 = Box::new(BufferedStruct__Block::new(self.stream, self, _root)?);
   |                                                                ^^^^^^

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:437:23
    |
437 |         self.digit7 = ((self.b1 & 240) >> 4);
    |                       ^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/bcd_user_type_le.rs:438:16
    |
438 |         return self.digit7;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:32:11
   |
32 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `byte1`, `two`, `three`, `byte2` ... and 4 others

error[E0609]: no field `stream` on type `&mut bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:45:25
   |
45 |         self.one = self.stream.read_bits_int(6)?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:46:14
   |
46 |         self.stream.alignToByte();
   |              ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:47:27
   |
47 |         self.byte1 = self.stream.read_u1()?;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:48:25
   |
48 |         self.two = self.stream.read_bits_int(3)?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:49:27
   |
49 |         self.three = self.stream.read_bits_int(1)? != 0;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:50:14
   |
50 |         self.stream.alignToByte();
   |              ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:51:27
   |
51 |         self.byte2 = self.stream.read_u1()?;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:52:26
   |
52 |         self.four = self.stream.read_bits_int(14)?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:53:14
   |
53 |         self.stream.alignToByte();
   |              ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:54:27
   |
54 |         self.byte3 = self.stream.read_bytes(1)?;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:55:30
   |
55 |         self.fullByte = self.stream.read_bits_int(8)?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:56:14
   |
56 |         self.stream.alignToByte();
   |              ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_byte_aligned::BitsByteAligned`
  --> src/bits_byte_aligned.rs:57:27
   |
57 |         self.byte4 = self.stream.read_u1()?;
   |                           ^^^^^^

error[E0308]: mismatched types
  --> src/bits_byte_aligned.rs:44:27
   |
44 |           where Self: Sized {
   |  ___________________________^
45 | |         self.one = self.stream.read_bits_int(6)?;
46 | |         self.stream.alignToByte();
47 | |         self.byte1 = self.stream.read_u1()?;
...  |
57 | |         self.byte4 = self.stream.read_u1()?;
58 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0277]: the trait bound `bits_enum::BitsEnum__Animal: std::default::Default` is not satisfied
  --> src/bits_enum.rs:13:5
   |
13 |     pub one: Box<BitsEnum__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `bits_enum::BitsEnum__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<bits_enum::BitsEnum__Animal>`
   = note: required by `std::default::Default::default`

error[E0277]: the trait bound `bits_enum::BitsEnum__Animal: std::default::Default` is not satisfied
  --> src/bits_enum.rs:14:5
   |
14 |     pub two: Box<BitsEnum__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `bits_enum::BitsEnum__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<bits_enum::BitsEnum__Animal>`
   = note: required by `std::default::Default::default`

error[E0277]: the trait bound `bits_enum::BitsEnum__Animal: std::default::Default` is not satisfied
  --> src/bits_enum.rs:15:5
   |
15 |     pub three: Box<BitsEnum__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `bits_enum::BitsEnum__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<bits_enum::BitsEnum__Animal>`
   = note: required by `std::default::Default::default`

error[E0609]: no field `stream` on type `bits_enum::BitsEnum`
  --> src/bits_enum.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`, `three`

error[E0609]: no field `stream` on type `&mut bits_enum::BitsEnum`
  --> src/bits_enum.rs:39:25
   |
39 |         self.one = self.stream.read_bits_int(4)?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_enum::BitsEnum`
  --> src/bits_enum.rs:40:25
   |
40 |         self.two = self.stream.read_bits_int(8)?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_enum::BitsEnum`
  --> src/bits_enum.rs:41:27
   |
41 |         self.three = self.stream.read_bits_int(1)?;
   |                           ^^^^^^

error[E0308]: mismatched types
  --> src/bits_enum.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.one = self.stream.read_bits_int(4)?;
40 | |         self.two = self.stream.read_bits_int(8)?;
41 | |         self.three = self.stream.read_bits_int(1)?;
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `bits_simple::BitsSimple`
  --> src/bits_simple.rs:37:11
   |
37 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `byte1`, `byte2`, `bitsA`, `bitsB`, `bitsC` ... and 9 others

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:50:27
   |
50 |         self.byte1 = self.stream.read_bits_int(8)?;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:51:27
   |
51 |         self.byte2 = self.stream.read_bits_int(8)?;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:52:27
   |
52 |         self.bitsA = self.stream.read_bits_int(1)? != 0;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:53:27
   |
53 |         self.bitsB = self.stream.read_bits_int(3)?;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:54:27
   |
54 |         self.bitsC = self.stream.read_bits_int(4)?;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:55:32
   |
55 |         self.largeBits1 = self.stream.read_bits_int(10)?;
   |                                ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:56:28
   |
56 |         self.spacer = self.stream.read_bits_int(3)?;
   |                            ^^^^^^

error[E0308]: mismatched types
  --> src/buffered_struct.rs:47:72
   |
47 |         self.block1 = Box::new(BufferedStruct__Block::new(self.stream, self, _root)?);
   |                                                                        ^^^^ expected enum `std::option::Option`, found struct `buffered_struct::BufferedStruct`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut buffered_struct::BufferedStruct`

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:57:32
   |
57 |         self.largeBits2 = self.stream.read_bits_int(11)?;
   |                                ^^^^^^

error[E0609]: no field `stream` on type `&mut buffered_struct::BufferedStruct`
  --> src/buffered_struct.rs:48:26
   |
48 |         self.len2 = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:58:14
   |
58 |         self.stream.alignToByte();
   |              ^^^^^^

error[E0609]: no field `stream` on type `&mut buffered_struct::BufferedStruct`
  --> src/buffered_struct.rs:49:33
   |
49 |         self._raw_block2 = self.stream.read_bytes(self.len2)?;
   |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:59:30
   |
59 |         self.normalS2 = self.stream.read_s2be()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut buffered_struct::BufferedStruct`
  --> src/buffered_struct.rs:51:64
   |
51 |         self.block2 = Box::new(BufferedStruct__Block::new(self.stream, self, _root)?);
   |                                                                ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:60:30
   |
60 |         self.byte8910 = self.stream.read_bits_int(24)?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:61:32
   |
61 |         self.byte11To14 = self.stream.read_bits_int(32)?;
   |                                ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:62:32
   |
62 |         self.byte15To19 = self.stream.read_bits_int(40)?;
   |                                ^^^^^^

error[E0609]: no field `stream` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:63:32
   |
63 |         self.byte20To27 = self.stream.read_bits_int(64)?;
   |                                ^^^^^^

error[E0308]: mismatched types
  --> src/bits_simple.rs:49:27
   |
49 |           where Self: Sized {
   |  ___________________________^
50 | |         self.byte1 = self.stream.read_bits_int(8)?;
51 | |         self.byte2 = self.stream.read_bits_int(8)?;
52 | |         self.bitsA = self.stream.read_bits_int(1)? != 0;
...  |
63 | |         self.byte20To27 = self.stream.read_bits_int(64)?;
64 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `bits_a` on type `&mut bits_simple::BitsSimple`
  --> src/bits_simple.rs:73:17
   |
73 |         if self.bits_a == false {
   |                 ^^^^^^

error[E0308]: mismatched types
  --> src/buffered_struct.rs:51:72
   |
51 |         self.block2 = Box::new(BufferedStruct__Block::new(self.stream, self, _root)?);
   |                                                                        ^^^^ expected enum `std::option::Option`, found struct `buffered_struct::BufferedStruct`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut buffered_struct::BufferedStruct`

error[E0609]: no field `stream` on type `&mut buffered_struct::BufferedStruct`
  --> src/buffered_struct.rs:52:30
   |
52 |         self.finisher = self.stream.read_u4le()?;
   |                              ^^^^^^

error[E0308]: mismatched types
  --> src/buffered_struct.rs:43:27
   |
43 |           where Self: Sized {
   |  ___________________________^
44 | |         self.len1 = self.stream.read_u4le()?;
45 | |         self._raw_block1 = self.stream.read_bytes(self.len1)?;
46 | |         let mut io = Cursor::new(self._raw_block1);
...  |
52 | |         self.finisher = self.stream.read_u4le()?;
53 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `buffered_struct::BufferedStruct__Block`
  --> src/buffered_struct.rs:72:11
   |
72 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `number1`, `number2`

error[E0609]: no field `stream` on type `&mut buffered_struct::BufferedStruct__Block`
  --> src/buffered_struct.rs:85:29
   |
85 |         self.number1 = self.stream.read_u4le()?;
   |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut buffered_struct::BufferedStruct__Block`
  --> src/buffered_struct.rs:86:29
   |
86 |         self.number2 = self.stream.read_u4le()?;
   |                             ^^^^^^

error[E0308]: mismatched types
  --> src/buffered_struct.rs:84:27
   |
84 |           where Self: Sized {
   |  ___________________________^
85 | |         self.number1 = self.stream.read_u4le()?;
86 | |         self.number2 = self.stream.read_u4le()?;
87 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `bytes_pad_term::BytesPadTerm`
  --> src/bytes_pad_term.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ did you mean `strPad`?

error[E0599]: no function or associated item named `bytesStripRight` found for type `S` in the current scope
  --> src/bytes_pad_term.rs:40:28
   |
40 |         self.strPad = &mut S::bytesStripRight(self.stream.read_bytes(20)?, 64);
   |                            ^^^^^^^^^^^^^^^^^^ function or associated item not found in `S`

error[E0609]: no field `stream` on type `&mut bytes_pad_term::BytesPadTerm`
  --> src/bytes_pad_term.rs:40:52
   |
40 |         self.strPad = &mut S::bytesStripRight(self.stream.read_bytes(20)?, 64);
   |                                                    ^^^^^^

error[E0599]: no function or associated item named `bytesTerminate` found for type `S` in the current scope
  --> src/bytes_pad_term.rs:41:29
   |
41 |         self.strTerm = &mut S::bytesTerminate(self.stream.read_bytes(20)?, 64, false);
   |                             ^^^^^^^^^^^^^^^^^ function or associated item not found in `S`

error[E0609]: no field `stream` on type `&mut bytes_pad_term::BytesPadTerm`
  --> src/bytes_pad_term.rs:41:52
   |
41 |         self.strTerm = &mut S::bytesTerminate(self.stream.read_bytes(20)?, 64, false);
   |                                                    ^^^^^^

error[E0599]: no function or associated item named `bytesTerminate` found for type `S` in the current scope
  --> src/bytes_pad_term.rs:42:35
   |
42 |         self.strTermAndPad = &mut S::bytesTerminate(&mut S::bytesStripRight(self.stream.read_bytes(20)?, 43), 64, false);
   |                                   ^^^^^^^^^^^^^^^^^ function or associated item not found in `S`

error[E0599]: no function or associated item named `bytesStripRight` found for type `S` in the current scope
  --> src/bytes_pad_term.rs:42:58
   |
42 |         self.strTermAndPad = &mut S::bytesTerminate(&mut S::bytesStripRight(self.stream.read_bytes(20)?, 43), 64, false);
   |                                                          ^^^^^^^^^^^^^^^^^^ function or associated item not found in `S`

error[E0609]: no field `stream` on type `&mut bytes_pad_term::BytesPadTerm`
  --> src/bytes_pad_term.rs:42:82
   |
42 |         self.strTermAndPad = &mut S::bytesTerminate(&mut S::bytesStripRight(self.stream.read_bytes(20)?, 43), 64, false);
   |                                                                                  ^^^^^^

error[E0599]: no function or associated item named `bytesTerminate` found for type `S` in the current scope
  --> src/bytes_pad_term.rs:43:36
   |
43 |         self.strTermInclude = &mut S::bytesTerminate(self.stream.read_bytes(20)?, 64, true);
   |                                    ^^^^^^^^^^^^^^^^^ function or associated item not found in `S`

error[E0609]: no field `stream` on type `&mut bytes_pad_term::BytesPadTerm`
  --> src/bytes_pad_term.rs:43:59
   |
43 |         self.strTermInclude = &mut S::bytesTerminate(self.stream.read_bytes(20)?, 64, true);
   |                                                           ^^^^^^

error[E0308]: mismatched types
  --> src/bytes_pad_term.rs:39:27
   |
39 |           where Self: Sized {
   |  ___________________________^
40 | |         self.strPad = &mut S::bytesStripRight(self.stream.read_bytes(20)?, 64);
41 | |         self.strTerm = &mut S::bytesTerminate(self.stream.read_bytes(20)?, 64, false);
42 | |         self.strTermAndPad = &mut S::bytesTerminate(&mut S::bytesStripRight(self.stream.read_bytes(20)?, 43), 64, false);
43 | |         self.strTermInclude = &mut S::bytesTerminate(self.stream.read_bytes(20)?, 64, true);
44 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `cast_nested::CastNested`
  --> src/cast_nested.rs:28:11
   |
28 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `opcodes`, `opcodes0Str`, `opcodes0StrValue`, `opcodes1Int`, `opcodes1IntValue`

error[E0308]: mismatched types
  --> src/bits_simple.rs:74:29
   |
74 |             self.testIfB1 = 123;
   |                             ^^^
   |                             |
   |                             expected enum `std::option::Option`, found integral variable
   |                             help: try using a variant of the expected type: `Some(123)`
   |
   = note: expected type `std::option::Option<i8>`
              found type `{integer}`

error[E0308]: mismatched types
  --> src/bits_simple.rs:76:16
   |
76 |         return self.testIfB1;
   |                ^^^^^^^^^^^^^ expected i8, found enum `std::option::Option`
   |
   = note: expected type `i8`
              found type `std::option::Option<i8>`

error[E0609]: no field `stream` on type `buffered_struct::BufferedStruct`
  --> src/buffered_struct.rs:31:11
   |
31 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `len1`, `block1`, `len2`, `block2`, `finisher` ... and 2 others

error[E0609]: no field `stream` on type `&mut buffered_struct::BufferedStruct`
  --> src/buffered_struct.rs:44:26
   |
44 |         self.len1 = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut buffered_struct::BufferedStruct`
  --> src/buffered_struct.rs:45:33
   |
45 |         self._raw_block1 = self.stream.read_bytes(self.len1)?;
   |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut buffered_struct::BufferedStruct`
  --> src/buffered_struct.rs:47:64
   |
47 |         self.block1 = Box::new(BufferedStruct__Block::new(self.stream, self, _root)?);
   |                                                                ^^^^^^

error[E0308]: mismatched types
  --> src/cast_nested.rs:41:24
   |
41 |         self.opcodes = [];
   |                        ^^
   |                        |
   |                        expected struct `std::vec::Vec`, found array of 0 elements
   |                        help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<cast_nested::CastNested__Opcode>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut cast_nested::CastNested`
  --> src/cast_nested.rs:42:21
   |
42 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut cast_nested::CastNested`
  --> src/cast_nested.rs:43:69
   |
43 |             self.opcodes.push(Box::new(CastNested__Opcode::new(self.stream, self, _root)?));
   |                                                                     ^^^^^^

error[E0308]: mismatched types
  --> src/buffered_struct.rs:47:72
   |
47 |         self.block1 = Box::new(BufferedStruct__Block::new(self.stream, self, _root)?);
   |                                                                        ^^^^ expected enum `std::option::Option`, found struct `buffered_struct::BufferedStruct`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut buffered_struct::BufferedStruct`

error[E0609]: no field `stream` on type `&mut buffered_struct::BufferedStruct`
  --> src/buffered_struct.rs:48:26
   |
48 |         self.len2 = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut buffered_struct::BufferedStruct`
  --> src/buffered_struct.rs:49:33
   |
49 |         self._raw_block2 = self.stream.read_bytes(self.len2)?;
   |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut buffered_struct::BufferedStruct`
  --> src/buffered_struct.rs:51:64
   |
51 |         self.block2 = Box::new(BufferedStruct__Block::new(self.stream, self, _root)?);
   |                                                                ^^^^^^

error[E0308]: mismatched types
  --> src/cast_nested.rs:43:77
   |
43 |             self.opcodes.push(Box::new(CastNested__Opcode::new(self.stream, self, _root)?));
   |                                                                             ^^^^ expected enum `std::option::Option`, found struct `cast_nested::CastNested`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut cast_nested::CastNested`

error[E0308]: mismatched types
  --> src/cast_nested.rs:42:9
   |
39 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
42 | /         while !self.stream.isEof() {
43 | |             self.opcodes.push(Box::new(CastNested__Opcode::new(self.stream, self, _root)?));
44 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/buffered_struct.rs:51:72
   |
51 |         self.block2 = Box::new(BufferedStruct__Block::new(self.stream, self, _root)?);
   |                                                                        ^^^^ expected enum `std::option::Option`, found struct `buffered_struct::BufferedStruct`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut buffered_struct::BufferedStruct`

error[E0609]: no field `stream` on type `&mut buffered_struct::BufferedStruct`
  --> src/buffered_struct.rs:52:30
   |
52 |         self.finisher = self.stream.read_u4le()?;
   |                              ^^^^^^

error[E0308]: mismatched types
  --> src/buffered_struct.rs:43:27
   |
43 |           where Self: Sized {
   |  ___________________________^
44 | |         self.len1 = self.stream.read_u4le()?;
45 | |         self._raw_block1 = self.stream.read_bytes(self.len1)?;
46 | |         let mut io = Cursor::new(self._raw_block1);
...  |
52 | |         self.finisher = self.stream.read_u4le()?;
53 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `buffered_struct::BufferedStruct__Block`
  --> src/buffered_struct.rs:72:11
   |
72 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `number1`, `number2`

error[E0609]: no field `stream` on type `&mut buffered_struct::BufferedStruct__Block`
  --> src/buffered_struct.rs:85:29
   |
85 |         self.number1 = self.stream.read_u4le()?;
   |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut buffered_struct::BufferedStruct__Block`
  --> src/buffered_struct.rs:86:29
   |
86 |         self.number2 = self.stream.read_u4le()?;
   |                             ^^^^^^

error[E0308]: mismatched types
  --> src/buffered_struct.rs:84:27
   |
84 |           where Self: Sized {
   |  ___________________________^
85 | |         self.number1 = self.stream.read_u4le()?;
86 | |         self.number2 = self.stream.read_u4le()?;
87 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `bytes_pad_term::BytesPadTerm`
  --> src/bytes_pad_term.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ did you mean `strPad`?

error[E0599]: no function or associated item named `bytesStripRight` found for type `S` in the current scope
  --> src/bytes_pad_term.rs:40:28
   |
40 |         self.strPad = &mut S::bytesStripRight(self.stream.read_bytes(20)?, 64);
   |                            ^^^^^^^^^^^^^^^^^^ function or associated item not found in `S`

error[E0609]: no field `stream` on type `&mut bytes_pad_term::BytesPadTerm`
  --> src/bytes_pad_term.rs:40:52
   |
40 |         self.strPad = &mut S::bytesStripRight(self.stream.read_bytes(20)?, 64);
   |                                                    ^^^^^^

error[E0599]: no function or associated item named `bytesTerminate` found for type `S` in the current scope
  --> src/bytes_pad_term.rs:41:29
   |
41 |         self.strTerm = &mut S::bytesTerminate(self.stream.read_bytes(20)?, 64, false);
   |                             ^^^^^^^^^^^^^^^^^ function or associated item not found in `S`

error[E0609]: no field `stream` on type `&mut bytes_pad_term::BytesPadTerm`
  --> src/bytes_pad_term.rs:41:52
   |
41 |         self.strTerm = &mut S::bytesTerminate(self.stream.read_bytes(20)?, 64, false);
   |                                                    ^^^^^^

error[E0599]: no function or associated item named `bytesTerminate` found for type `S` in the current scope
  --> src/bytes_pad_term.rs:42:35
   |
42 |         self.strTermAndPad = &mut S::bytesTerminate(&mut S::bytesStripRight(self.stream.read_bytes(20)?, 43), 64, false);
   |                                   ^^^^^^^^^^^^^^^^^ function or associated item not found in `S`

error[E0599]: no function or associated item named `bytesStripRight` found for type `S` in the current scope
  --> src/bytes_pad_term.rs:42:58
   |
42 |         self.strTermAndPad = &mut S::bytesTerminate(&mut S::bytesStripRight(self.stream.read_bytes(20)?, 43), 64, false);
   |                                                          ^^^^^^^^^^^^^^^^^^ function or associated item not found in `S`

error[E0609]: no field `stream` on type `&mut bytes_pad_term::BytesPadTerm`
  --> src/bytes_pad_term.rs:42:82
   |
42 |         self.strTermAndPad = &mut S::bytesTerminate(&mut S::bytesStripRight(self.stream.read_bytes(20)?, 43), 64, false);
   |                                                                                  ^^^^^^

error[E0599]: no function or associated item named `bytesTerminate` found for type `S` in the current scope
  --> src/bytes_pad_term.rs:43:36
   |
43 |         self.strTermInclude = &mut S::bytesTerminate(self.stream.read_bytes(20)?, 64, true);
   |                                    ^^^^^^^^^^^^^^^^^ function or associated item not found in `S`

error[E0609]: no field `stream` on type `&mut bytes_pad_term::BytesPadTerm`
  --> src/bytes_pad_term.rs:43:59
   |
43 |         self.strTermInclude = &mut S::bytesTerminate(self.stream.read_bytes(20)?, 64, true);
   |                                                           ^^^^^^

error[E0308]: mismatched types
  --> src/bytes_pad_term.rs:39:27
   |
39 |           where Self: Sized {
   |  ___________________________^
40 | |         self.strPad = &mut S::bytesStripRight(self.stream.read_bytes(20)?, 64);
41 | |         self.strTerm = &mut S::bytesTerminate(self.stream.read_bytes(20)?, 64, false);
42 | |         self.strTermAndPad = &mut S::bytesTerminate(&mut S::bytesStripRight(self.stream.read_bytes(20)?, 43), 64, false);
43 | |         self.strTermInclude = &mut S::bytesTerminate(self.stream.read_bytes(20)?, 64, true);
44 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `cast_nested::CastNested`
  --> src/cast_nested.rs:28:11
   |
28 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `opcodes`, `opcodes0Str`, `opcodes0StrValue`, `opcodes1Int`, `opcodes1IntValue`

error[E0308]: mismatched types
  --> src/cast_nested.rs:54:28
   |
54 |         self.opcodes0Str = self.opcodes[0].body;
   |                            ^^^^^^^^^^^^^^^^^^^^ expected struct `cast_nested::CastNested__Opcode__Strval`, found trait kaitai_struct::KaitaiStruct
   |
   = note: expected type `std::option::Option<std::boxed::Box<cast_nested::CastNested__Opcode__Strval>>`
              found type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`

error[E0308]: mismatched types
  --> src/cast_nested.rs:55:16
   |
55 |         return self.opcodes0Str;
   |                ^^^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `value` on type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
  --> src/cast_nested.rs:62:54
   |
62 |         self.opcodes0StrValue = self.opcodes[0].body.value;
   |                                                      ^^^^^

error[E0308]: mismatched types
  --> src/cast_nested.rs:63:16
   |
63 |         return self.opcodes0StrValue;
   |                ^^^^^^^^^^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
  --> src/cast_nested.rs:41:24
   |
41 |         self.opcodes = [];
   |                        ^^
   |                        |
   |                        expected struct `std::vec::Vec`, found array of 0 elements
   |                        help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<cast_nested::CastNested__Opcode>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut cast_nested::CastNested`
  --> src/cast_nested.rs:42:21
   |
42 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut cast_nested::CastNested`
  --> src/cast_nested.rs:43:69
   |
43 |             self.opcodes.push(Box::new(CastNested__Opcode::new(self.stream, self, _root)?));
   |                                                                     ^^^^^^

error[E0308]: mismatched types
  --> src/cast_nested.rs:70:28
   |
70 |         self.opcodes1Int = self.opcodes[1].body;
   |                            ^^^^^^^^^^^^^^^^^^^^ expected struct `cast_nested::CastNested__Opcode__Intval`, found trait kaitai_struct::KaitaiStruct
   |
   = note: expected type `std::option::Option<std::boxed::Box<cast_nested::CastNested__Opcode__Intval>>`
              found type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`

error[E0308]: mismatched types
  --> src/cast_nested.rs:71:16
   |
71 |         return self.opcodes1Int;
   |                ^^^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `value` on type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
  --> src/cast_nested.rs:78:54
   |
78 |         self.opcodes1IntValue = self.opcodes[1].body.value;
   |                                                      ^^^^^

error[E0308]: mismatched types
  --> src/cast_nested.rs:79:16
   |
79 |         return self.opcodes1IntValue;
   |                ^^^^^^^^^^^^^^^^^^^^^ expected u8, found enum `std::option::Option`
   |
   = note: expected type `u8`
              found type `std::option::Option<u8>`

error[E0609]: no field `stream` on type `cast_nested::CastNested__Opcode`
  --> src/cast_nested.rs:96:11
   |
96 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `code`, `body`

error[E0609]: no field `stream` on type `&mut cast_nested::CastNested__Opcode`
   --> src/cast_nested.rs:109:26
    |
109 |         self.code = self.stream.read_u1()?;
    |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut cast_nested::CastNested__Opcode`
   --> src/cast_nested.rs:112:75
    |
112 |                 self.body = Box::new(CastNested__Opcode__Intval::new(self.stream, self, _root)?);
    |                                                                           ^^^^^^

error[E0308]: mismatched types
  --> src/cast_nested.rs:43:77
   |
43 |             self.opcodes.push(Box::new(CastNested__Opcode::new(self.stream, self, _root)?));
   |                                                                             ^^^^ expected enum `std::option::Option`, found struct `cast_nested::CastNested`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut cast_nested::CastNested`

error[E0308]: mismatched types
  --> src/cast_nested.rs:42:9
   |
39 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
42 | /         while !self.stream.isEof() {
43 | |             self.opcodes.push(Box::new(CastNested__Opcode::new(self.stream, self, _root)?));
44 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
   --> src/cast_nested.rs:112:83
    |
112 |                 self.body = Box::new(CastNested__Opcode__Intval::new(self.stream, self, _root)?);
    |                                                                                   ^^^^ expected enum `std::option::Option`, found struct `cast_nested::CastNested__Opcode`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut cast_nested::CastNested__Opcode`

error[E0308]: mismatched types
  --> src/cast_nested.rs:54:28
   |
54 |         self.opcodes0Str = self.opcodes[0].body;
   |                            ^^^^^^^^^^^^^^^^^^^^ expected struct `cast_nested::CastNested__Opcode__Strval`, found trait kaitai_struct::KaitaiStruct
   |
   = note: expected type `std::option::Option<std::boxed::Box<cast_nested::CastNested__Opcode__Strval>>`
              found type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`

error[E0308]: mismatched types
  --> src/cast_nested.rs:55:16
   |
55 |         return self.opcodes0Str;
   |                ^^^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `value` on type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
  --> src/cast_nested.rs:62:54
   |
62 |         self.opcodes0StrValue = self.opcodes[0].body.value;
   |                                                      ^^^^^

error[E0308]: mismatched types
  --> src/cast_nested.rs:63:16
   |
63 |         return self.opcodes0StrValue;
   |                ^^^^^^^^^^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
   --> src/cast_nested.rs:112:29
    |
112 |                 self.body = Box::new(CastNested__Opcode__Intval::new(self.stream, self, _root)?);
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
    |
    = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `std::boxed::Box<cast_nested::CastNested__Opcode__Intval>`
help: try using a variant of the expected type
    |
112 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<CastNested__Opcode__Intval>::new(self.stream,
113 |                                                                                 self,
114 |                                                                                 _root))
115 |                {
116 |                ::std::result::Result::Err(err) =>
117 |                    #[allow(unreachable_code)]
  ...

error[E0308]: mismatched types
   --> src/cast_nested.rs:111:19
    |
111 |               73 => {
    |  ___________________^
112 | |                 self.body = Box::new(CastNested__Opcode__Intval::new(self.stream, self, _root)?);
113 | |             },
    | |_____________^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `&mut cast_nested::CastNested__Opcode`
   --> src/cast_nested.rs:115:75
    |
115 |                 self.body = Box::new(CastNested__Opcode__Strval::new(self.stream, self, _root)?);
    |                                                                           ^^^^^^

error[E0308]: mismatched types
   --> src/cast_nested.rs:115:83
    |
115 |                 self.body = Box::new(CastNested__Opcode__Strval::new(self.stream, self, _root)?);
    |                                                                                   ^^^^ expected enum `std::option::Option`, found struct `cast_nested::CastNested__Opcode`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut cast_nested::CastNested__Opcode`

error[E0308]: mismatched types
  --> src/cast_nested.rs:70:28
   |
70 |         self.opcodes1Int = self.opcodes[1].body;
   |                            ^^^^^^^^^^^^^^^^^^^^ expected struct `cast_nested::CastNested__Opcode__Intval`, found trait kaitai_struct::KaitaiStruct
   |
   = note: expected type `std::option::Option<std::boxed::Box<cast_nested::CastNested__Opcode__Intval>>`
              found type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`

error[E0308]: mismatched types
  --> src/cast_nested.rs:71:16
   |
71 |         return self.opcodes1Int;
   |                ^^^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `value` on type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
  --> src/cast_nested.rs:78:54
   |
78 |         self.opcodes1IntValue = self.opcodes[1].body.value;
   |                                                      ^^^^^

error[E0308]: mismatched types
  --> src/cast_nested.rs:79:16
   |
79 |         return self.opcodes1IntValue;
   |                ^^^^^^^^^^^^^^^^^^^^^ expected u8, found enum `std::option::Option`
   |
   = note: expected type `u8`
              found type `std::option::Option<u8>`

error[E0609]: no field `stream` on type `cast_nested::CastNested__Opcode`
  --> src/cast_nested.rs:96:11
   |
96 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `code`, `body`

error[E0609]: no field `stream` on type `&mut cast_nested::CastNested__Opcode`
   --> src/cast_nested.rs:109:26
    |
109 |         self.code = self.stream.read_u1()?;
    |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut cast_nested::CastNested__Opcode`
   --> src/cast_nested.rs:112:75
    |
112 |                 self.body = Box::new(CastNested__Opcode__Intval::new(self.stream, self, _root)?);
    |                                                                           ^^^^^^

error[E0308]: mismatched types
   --> src/cast_nested.rs:115:29
    |
115 |                 self.body = Box::new(CastNested__Opcode__Strval::new(self.stream, self, _root)?);
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
    |
    = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `std::boxed::Box<cast_nested::CastNested__Opcode__Strval>`
help: try using a variant of the expected type
    |
115 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<CastNested__Opcode__Strval>::new(self.stream,
116 |                                                                                 self,
117 |                                                                                 _root))
118 |                {
119 |                ::std::result::Result::Err(err) =>
120 |                    #[allow(unreachable_code)]
  ...

error[E0308]: mismatched types
   --> src/cast_nested.rs:114:19
    |
114 |               83 => {
    |  ___________________^
115 | |                 self.body = Box::new(CastNested__Opcode__Strval::new(self.stream, self, _root)?);
116 | |             },
    | |_____________^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `cast_nested::CastNested__Opcode__Intval`
   --> src/cast_nested.rs:136:11
    |
136 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut cast_nested::CastNested__Opcode__Intval`
   --> src/cast_nested.rs:149:27
    |
149 |         self.value = self.stream.read_u1()?;
    |                           ^^^^^^

error[E0308]: mismatched types
   --> src/cast_nested.rs:148:27
    |
148 |           where Self: Sized {
    |  ___________________________^
149 | |         self.value = self.stream.read_u1()?;
150 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `cast_nested::CastNested__Opcode__Strval`
   --> src/cast_nested.rs:168:11
    |
168 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0308]: mismatched types
   --> src/cast_nested.rs:112:83
    |
112 |                 self.body = Box::new(CastNested__Opcode__Intval::new(self.stream, self, _root)?);
    |                                                                                   ^^^^ expected enum `std::option::Option`, found struct `cast_nested::CastNested__Opcode`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut cast_nested::CastNested__Opcode`

error[E0609]: no field `stream` on type `&mut cast_nested::CastNested__Opcode__Strval`
   --> src/cast_nested.rs:181:51
    |
181 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                                                   ^^^^^^

error[E0308]: mismatched types
   --> src/cast_nested.rs:112:29
    |
112 |                 self.body = Box::new(CastNested__Opcode__Intval::new(self.stream, self, _root)?);
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
    |
    = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `std::boxed::Box<cast_nested::CastNested__Opcode__Intval>`
help: try using a variant of the expected type
    |
112 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<CastNested__Opcode__Intval>::new(self.stream,
113 |                                                                                 self,
114 |                                                                                 _root))
115 |                {
116 |                ::std::result::Result::Err(err) =>
117 |                    #[allow(unreachable_code)]
  ...

error[E0308]: mismatched types
   --> src/cast_nested.rs:111:19
    |
111 |               73 => {
    |  ___________________^
112 | |                 self.body = Box::new(CastNested__Opcode__Intval::new(self.stream, self, _root)?);
113 | |             },
    | |_____________^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `&mut cast_nested::CastNested__Opcode`
   --> src/cast_nested.rs:115:75
    |
115 |                 self.body = Box::new(CastNested__Opcode__Strval::new(self.stream, self, _root)?);
    |                                                                           ^^^^^^

error[E0308]: mismatched types
   --> src/cast_nested.rs:181:22
    |
181 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                      |
    |                      expected struct `std::string::String`, found enum `std::borrow::Cow`
    |                      help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?).to_string()`
    |
    = note: expected type `std::string::String`
               found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
   --> src/cast_nested.rs:180:27
    |
180 |           where Self: Sized {
    |  ___________________________^
181 | |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
182 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `cast_to_imported::CastToImported`
  --> src/cast_to_imported.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `oneCasted`

error[E0609]: no field `stream` on type `&mut cast_to_imported::CastToImported`
  --> src/cast_to_imported.rs:39:50
   |
39 |         self.one = Box::new(HelloWorld::new(self.stream, self, _root)?);
   |                                                  ^^^^^^

error[E0308]: mismatched types
   --> src/cast_nested.rs:115:83
    |
115 |                 self.body = Box::new(CastNested__Opcode__Strval::new(self.stream, self, _root)?);
    |                                                                                   ^^^^ expected enum `std::option::Option`, found struct `cast_nested::CastNested__Opcode`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut cast_nested::CastNested__Opcode`

error[E0308]: mismatched types
  --> src/cast_to_imported.rs:39:58
   |
39 |         self.one = Box::new(HelloWorld::new(self.stream, self, _root)?);
   |                                                          ^^^^ expected enum `std::option::Option`, found struct `cast_to_imported::CastToImported`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut cast_to_imported::CastToImported`

error[E0308]: mismatched types
  --> src/cast_to_imported.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.one = Box::new(HelloWorld::new(self.stream, self, _root)?);
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
   --> src/cast_nested.rs:115:29
    |
115 |                 self.body = Box::new(CastNested__Opcode__Strval::new(self.stream, self, _root)?);
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
    |
    = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `std::boxed::Box<cast_nested::CastNested__Opcode__Strval>`
help: try using a variant of the expected type
    |
115 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<CastNested__Opcode__Strval>::new(self.stream,
116 |                                                                                 self,
117 |                                                                                 _root))
118 |                {
119 |                ::std::result::Result::Err(err) =>
120 |                    #[allow(unreachable_code)]
  ...

error[E0308]: mismatched types
   --> src/cast_nested.rs:114:19
    |
114 |               83 => {
    |  ___________________^
115 | |                 self.body = Box::new(CastNested__Opcode__Strval::new(self.stream, self, _root)?);
116 | |             },
    | |_____________^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `cast_nested::CastNested__Opcode__Intval`
   --> src/cast_nested.rs:136:11
    |
136 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0308]: mismatched types
  --> src/cast_to_imported.rs:49:26
   |
49 |         self.oneCasted = self.one;
   |                          ^^^^^^^^
   |                          |
   |                          expected enum `std::option::Option`, found struct `std::boxed::Box`
   |                          help: try using a variant of the expected type: `Some(self.one)`
   |
   = note: expected type `std::option::Option<std::boxed::Box<_>>`
              found type `std::boxed::Box<_>`

error[E0308]: mismatched types
  --> src/cast_to_imported.rs:50:16
   |
50 |         return self.oneCasted;
   |                ^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `&mut cast_nested::CastNested__Opcode__Intval`
   --> src/cast_nested.rs:149:27
    |
149 |         self.value = self.stream.read_u1()?;
    |                           ^^^^^^

error[E0308]: mismatched types
   --> src/cast_nested.rs:148:27
    |
148 |           where Self: Sized {
    |  ___________________________^
149 | |         self.value = self.stream.read_u1()?;
150 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `hello_world::HelloWorld`
  --> src/hello_world.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`

error[E0609]: no field `stream` on type `cast_nested::CastNested__Opcode__Strval`
   --> src/cast_nested.rs:168:11
    |
168 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut hello_world::HelloWorld`
  --> src/hello_world.rs:37:25
   |
37 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/hello_world.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |         self.one = self.stream.read_u1()?;
38 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut cast_nested::CastNested__Opcode__Strval`
   --> src/cast_nested.rs:181:51
    |
181 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                                                   ^^^^^^

error[E0609]: no field `stream` on type `cast_to_top::CastToTop`
  --> src/cast_to_top.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `code`, `header`, `headerCasted`

error[E0609]: no field `stream` on type `&mut cast_to_top::CastToTop`
  --> src/cast_to_top.rs:39:26
   |
39 |         self.code = self.stream.read_u1()?;
   |                          ^^^^^^

error[E0308]: mismatched types
  --> src/cast_to_top.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.code = self.stream.read_u1()?;
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut cast_to_top::CastToTop`
  --> src/cast_to_top.rs:49:25
   |
49 |         let _pos = self.stream.pos();
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut cast_to_top::CastToTop`
  --> src/cast_to_top.rs:50:14
   |
50 |         self.stream.seek(1);
   |              ^^^^^^

error[E0609]: no field `stream` on type `&mut cast_to_top::CastToTop`
  --> src/cast_to_top.rs:51:52
   |
51 |         self.header = Box::new(CastToTop::new(self.stream, self, _root)?);
   |                                                    ^^^^^^

error[E0308]: mismatched types
  --> src/cast_to_top.rs:51:60
   |
51 |         self.header = Box::new(CastToTop::new(self.stream, self, _root)?);
   |                                                            ^^^^ expected enum `std::option::Option`, found struct `cast_to_top::CastToTop`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut cast_to_top::CastToTop`

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/cast_to_top.rs:51:32
   |
51 |         self.header = Box::new(CastToTop::new(self.stream, self, _root)?);
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::boxed::Box<cast_to_top::CastToTop>`
   |
   = help: the trait `std::ops::Try` is not implemented for `std::boxed::Box<cast_to_top::CastToTop>`
   = note: required by `std::ops::Try::from_error`

error[E0308]: mismatched types
   --> src/cast_nested.rs:181:22
    |
181 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                      |
    |                      expected struct `std::string::String`, found enum `std::borrow::Cow`
    |                      help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?).to_string()`
    |
    = note: expected type `std::string::String`
               found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
   --> src/cast_nested.rs:180:27
    |
180 |           where Self: Sized {
    |  ___________________________^
181 | |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
182 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `cast_to_imported::CastToImported`
  --> src/cast_to_imported.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `oneCasted`

error[E0609]: no field `stream` on type `&mut cast_to_imported::CastToImported`
  --> src/cast_to_imported.rs:39:50
   |
39 |         self.one = Box::new(HelloWorld::new(self.stream, self, _root)?);
   |                                                  ^^^^^^

error[E0308]: mismatched types
  --> src/cast_to_top.rs:51:23
   |
51 |         self.header = Box::new(CastToTop::new(self.stream, self, _root)?);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<_>>`
              found type `std::boxed::Box<_>`
help: try using a variant of the expected type
   |
51 |         self.header = Some(<Box>::new(match ::std::ops::Try::into_result(<CastToTop>::new(self.stream,
52 |                                                                self, _root)) {
53 |                ::std::result::Result::Err(err) =>
54 |                    #[allow(unreachable_code)]
55 |                    return ::std::ops::Try::from_error(::std::convert::From::from(err)),
56 |                ::std::result::Result::Ok(val) =>
 ...

error[E0609]: no field `stream` on type `&mut cast_to_top::CastToTop`
  --> src/cast_to_top.rs:52:14
   |
52 |         self.stream.seek(_pos);
   |              ^^^^^^

error[E0308]: mismatched types
  --> src/cast_to_top.rs:53:16
   |
53 |         return self.header;
   |                ^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0308]: mismatched types
  --> src/cast_to_top.rs:61:16
   |
61 |         return self.headerCasted;
   |                ^^^^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `debug_0::Debug0`
  --> src/debug_0.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `arrayOfInts`, `_unnamed2`

error[E0609]: no field `stream` on type `&mut debug_0::Debug0`
  --> src/debug_0.rs:40:25
   |
40 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/cast_to_imported.rs:39:58
   |
39 |         self.one = Box::new(HelloWorld::new(self.stream, self, _root)?);
   |                                                          ^^^^ expected enum `std::option::Option`, found struct `cast_to_imported::CastToImported`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut cast_to_imported::CastToImported`

error[E0308]: mismatched types
  --> src/cast_to_imported.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.one = Box::new(HelloWorld::new(self.stream, self, _root)?);
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut debug_0::Debug0`
  --> src/debug_0.rs:43:40
   |
43 |             self.arrayOfInts.push(self.stream.read_u1()?);
   |                                        ^^^^^^

error[E0609]: no field `stream` on type `&mut debug_0::Debug0`
  --> src/debug_0.rs:45:31
   |
45 |         self._unnamed2 = self.stream.read_u1()?;
   |                               ^^^^^^

error[E0308]: mismatched types
  --> src/debug_0.rs:39:27
   |
39 |           where Self: Sized {
   |  ___________________________^
40 | |         self.one = self.stream.read_u1()?;
41 | |         self.arrayOfInts = vec!();
42 | |         for i in 0..3 {
...  |
45 | |         self._unnamed2 = self.stream.read_u1()?;
46 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0277]: the trait bound `debug_enum_name::DebugEnumName__TestEnum1: std::default::Default` is not satisfied
  --> src/debug_enum_name.rs:14:5
   |
14 |     pub one: Box<DebugEnumName__TestEnum1>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `debug_enum_name::DebugEnumName__TestEnum1`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<debug_enum_name::DebugEnumName__TestEnum1>`
   = note: required by `std::default::Default::default`

error[E0609]: no field `stream` on type `debug_enum_name::DebugEnumName`
  --> src/debug_enum_name.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `arrayOfInts`, `testType`

error[E0609]: no field `stream` on type `&mut debug_enum_name::DebugEnumName`
  --> src/debug_enum_name.rs:40:25
   |
40 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut debug_enum_name::DebugEnumName`
  --> src/debug_enum_name.rs:43:40
   |
43 |             self.arrayOfInts.push(self.stream.read_u1()?);
   |                                        ^^^^^^

error[E0609]: no field `stream` on type `&mut debug_enum_name::DebugEnumName`
  --> src/debug_enum_name.rs:45:71
   |
45 |         self.testType = Box::new(DebugEnumName__TestSubtype::new(self.stream, self, _root)?);
   |                                                                       ^^^^^^

error[E0308]: mismatched types
  --> src/cast_to_imported.rs:49:26
   |
49 |         self.oneCasted = self.one;
   |                          ^^^^^^^^
   |                          |
   |                          expected enum `std::option::Option`, found struct `std::boxed::Box`
   |                          help: try using a variant of the expected type: `Some(self.one)`
   |
   = note: expected type `std::option::Option<std::boxed::Box<_>>`
              found type `std::boxed::Box<_>`

error[E0308]: mismatched types
  --> src/cast_to_imported.rs:50:16
   |
50 |         return self.oneCasted;
   |                ^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0308]: mismatched types
  --> src/debug_enum_name.rs:45:79
   |
45 |         self.testType = Box::new(DebugEnumName__TestSubtype::new(self.stream, self, _root)?);
   |                                                                               ^^^^ expected enum `std::option::Option`, found struct `debug_enum_name::DebugEnumName`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut debug_enum_name::DebugEnumName`

error[E0308]: mismatched types
  --> src/debug_enum_name.rs:39:27
   |
39 |           where Self: Sized {
   |  ___________________________^
40 | |         self.one = self.stream.read_u1()?;
41 | |         self.arrayOfInts = vec!();
42 | |         for i in 0..1 {
...  |
45 | |         self.testType = Box::new(DebugEnumName__TestSubtype::new(self.stream, self, _root)?);
46 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `hello_world::HelloWorld`
  --> src/hello_world.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`

error[E0277]: the trait bound `debug_enum_name::DebugEnumName__TestSubtype__InnerEnum1: std::default::Default` is not satisfied
  --> src/debug_enum_name.rs:59:5
   |
59 |     pub field1: Box<DebugEnumName__TestSubtype__InnerEnum1>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `debug_enum_name::DebugEnumName__TestSubtype__InnerEnum1`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<debug_enum_name::DebugEnumName__TestSubtype__InnerEnum1>`
   = note: required by `std::default::Default::default`

error[E0609]: no field `stream` on type `&mut hello_world::HelloWorld`
  --> src/hello_world.rs:37:25
   |
37 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `debug_enum_name::DebugEnumName__TestSubtype`
  --> src/debug_enum_name.rs:72:11
   |
72 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `field1`, `field2`, `instanceField`

error[E0308]: mismatched types
  --> src/hello_world.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |         self.one = self.stream.read_u1()?;
38 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `cast_to_top::CastToTop`
  --> src/cast_to_top.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `code`, `header`, `headerCasted`

error[E0609]: no field `stream` on type `&mut debug_enum_name::DebugEnumName__TestSubtype`
  --> src/debug_enum_name.rs:85:28
   |
85 |         self.field1 = self.stream.read_u1()?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut debug_enum_name::DebugEnumName__TestSubtype`
  --> src/debug_enum_name.rs:86:28
   |
86 |         self.field2 = self.stream.read_u1()?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut cast_to_top::CastToTop`
  --> src/cast_to_top.rs:39:26
   |
39 |         self.code = self.stream.read_u1()?;
   |                          ^^^^^^

error[E0308]: mismatched types
  --> src/debug_enum_name.rs:84:27
   |
84 |           where Self: Sized {
   |  ___________________________^
85 | |         self.field1 = self.stream.read_u1()?;
86 | |         self.field2 = self.stream.read_u1()?;
87 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/cast_to_top.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.code = self.stream.read_u1()?;
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut cast_to_top::CastToTop`
  --> src/cast_to_top.rs:49:25
   |
49 |         let _pos = self.stream.pos();
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut cast_to_top::CastToTop`
  --> src/cast_to_top.rs:50:14
   |
50 |         self.stream.seek(1);
   |              ^^^^^^

error[E0609]: no field `stream` on type `&mut cast_to_top::CastToTop`
  --> src/cast_to_top.rs:51:52
   |
51 |         self.header = Box::new(CastToTop::new(self.stream, self, _root)?);
   |                                                    ^^^^^^

error[E0308]: mismatched types
  --> src/debug_enum_name.rs:96:30
   |
96 |         self.instanceField = (self.field2 & 15);
   |                              ^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
   |
   = note: expected type `std::option::Option<std::boxed::Box<debug_enum_name::DebugEnumName__TestSubtype__InnerEnum2>>`
              found type `u8`

error[E0308]: mismatched types
  --> src/debug_enum_name.rs:97:16
   |
97 |         return self.instanceField;
   |                ^^^^^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `default_big_endian::DefaultBigEndian`
  --> src/default_big_endian.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`

error[E0609]: no field `stream` on type `&mut default_big_endian::DefaultBigEndian`
  --> src/default_big_endian.rs:37:25
   |
37 |         self.one = self.stream.read_u4be()?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/default_big_endian.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |         self.one = self.stream.read_u4be()?;
38 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `default_endian_expr_exception::DefaultEndianExprException`
  --> src/default_endian_expr_exception.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `docs`

error[E0308]: mismatched types
  --> src/cast_to_top.rs:51:60
   |
51 |         self.header = Box::new(CastToTop::new(self.stream, self, _root)?);
   |                                                            ^^^^ expected enum `std::option::Option`, found struct `cast_to_top::CastToTop`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut cast_to_top::CastToTop`

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/cast_to_top.rs:51:32
   |
51 |         self.header = Box::new(CastToTop::new(self.stream, self, _root)?);
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::boxed::Box<cast_to_top::CastToTop>`
   |
   = help: the trait `std::ops::Try` is not implemented for `std::boxed::Box<cast_to_top::CastToTop>`
   = note: required by `std::ops::Try::from_error`

error[E0308]: mismatched types
  --> src/default_endian_expr_exception.rs:37:21
   |
37 |         self.docs = [];
   |                     ^^
   |                     |
   |                     expected struct `std::vec::Vec`, found array of 0 elements
   |                     help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<default_endian_expr_exception::DefaultEndianExprException__Doc>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut default_endian_expr_exception::DefaultEndianExprException`
  --> src/default_endian_expr_exception.rs:38:21
   |
38 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_exception::DefaultEndianExprException`
  --> src/default_endian_expr_exception.rs:39:79
   |
39 |             self.docs.push(Box::new(DefaultEndianExprException__Doc::new(self.stream, self, _root)?));
   |                                                                               ^^^^^^

error[E0308]: mismatched types
  --> src/cast_to_top.rs:51:23
   |
51 |         self.header = Box::new(CastToTop::new(self.stream, self, _root)?);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<_>>`
              found type `std::boxed::Box<_>`
help: try using a variant of the expected type
   |
51 |         self.header = Some(<Box>::new(match ::std::ops::Try::into_result(<CastToTop>::new(self.stream,
52 |                                                                self, _root)) {
53 |                ::std::result::Result::Err(err) =>
54 |                    #[allow(unreachable_code)]
55 |                    return ::std::ops::Try::from_error(::std::convert::From::from(err)),
56 |                ::std::result::Result::Ok(val) =>
 ...

error[E0609]: no field `stream` on type `&mut cast_to_top::CastToTop`
  --> src/cast_to_top.rs:52:14
   |
52 |         self.stream.seek(_pos);
   |              ^^^^^^

error[E0308]: mismatched types
  --> src/cast_to_top.rs:53:16
   |
53 |         return self.header;
   |                ^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0308]: mismatched types
  --> src/cast_to_top.rs:61:16
   |
61 |         return self.headerCasted;
   |                ^^^^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `debug_0::Debug0`
  --> src/debug_0.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `arrayOfInts`, `_unnamed2`

error[E0609]: no field `stream` on type `&mut debug_0::Debug0`
  --> src/debug_0.rs:40:25
   |
40 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut debug_0::Debug0`
  --> src/debug_0.rs:43:40
   |
43 |             self.arrayOfInts.push(self.stream.read_u1()?);
   |                                        ^^^^^^

error[E0609]: no field `stream` on type `&mut debug_0::Debug0`
  --> src/debug_0.rs:45:31
   |
45 |         self._unnamed2 = self.stream.read_u1()?;
   |                               ^^^^^^

error[E0308]: mismatched types
  --> src/debug_0.rs:39:27
   |
39 |           where Self: Sized {
   |  ___________________________^
40 | |         self.one = self.stream.read_u1()?;
41 | |         self.arrayOfInts = vec!();
42 | |         for i in 0..3 {
...  |
45 | |         self._unnamed2 = self.stream.read_u1()?;
46 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0277]: the trait bound `debug_enum_name::DebugEnumName__TestEnum1: std::default::Default` is not satisfied
  --> src/debug_enum_name.rs:14:5
   |
14 |     pub one: Box<DebugEnumName__TestEnum1>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `debug_enum_name::DebugEnumName__TestEnum1`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<debug_enum_name::DebugEnumName__TestEnum1>`
   = note: required by `std::default::Default::default`

error[E0609]: no field `stream` on type `debug_enum_name::DebugEnumName`
  --> src/debug_enum_name.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `arrayOfInts`, `testType`

error[E0609]: no field `stream` on type `&mut debug_enum_name::DebugEnumName`
  --> src/debug_enum_name.rs:40:25
   |
40 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut debug_enum_name::DebugEnumName`
  --> src/debug_enum_name.rs:43:40
   |
43 |             self.arrayOfInts.push(self.stream.read_u1()?);
   |                                        ^^^^^^

error[E0609]: no field `stream` on type `&mut debug_enum_name::DebugEnumName`
  --> src/debug_enum_name.rs:45:71
   |
45 |         self.testType = Box::new(DebugEnumName__TestSubtype::new(self.stream, self, _root)?);
   |                                                                       ^^^^^^

error[E0308]: mismatched types
  --> src/default_endian_expr_exception.rs:39:87
   |
39 |             self.docs.push(Box::new(DefaultEndianExprException__Doc::new(self.stream, self, _root)?));
   |                                                                                       ^^^^ expected enum `std::option::Option`, found struct `default_endian_expr_exception::DefaultEndianExprException`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut default_endian_expr_exception::DefaultEndianExprException`

error[E0308]: mismatched types
  --> src/default_endian_expr_exception.rs:38:9
   |
35 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
38 | /         while !self.stream.isEof() {
39 | |             self.docs.push(Box::new(DefaultEndianExprException__Doc::new(self.stream, self, _root)?));
40 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `default_endian_expr_exception::DefaultEndianExprException__Doc`
  --> src/default_endian_expr_exception.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `indicator`, `main`

error[E0609]: no field `stream` on type `&mut default_endian_expr_exception::DefaultEndianExprException__Doc`
  --> src/default_endian_expr_exception.rs:73:31
   |
73 |         self.indicator = self.stream.read_bytes(2)?;
   |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_exception::DefaultEndianExprException__Doc`
  --> src/default_endian_expr_exception.rs:74:81
   |
74 |         self.main = Box::new(DefaultEndianExprException__Doc__MainObj::new(self.stream, self, _root)?);
   |                                                                                 ^^^^^^

error[E0308]: mismatched types
  --> src/debug_enum_name.rs:45:79
   |
45 |         self.testType = Box::new(DebugEnumName__TestSubtype::new(self.stream, self, _root)?);
   |                                                                               ^^^^ expected enum `std::option::Option`, found struct `debug_enum_name::DebugEnumName`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut debug_enum_name::DebugEnumName`

error[E0308]: mismatched types
  --> src/debug_enum_name.rs:39:27
   |
39 |           where Self: Sized {
   |  ___________________________^
40 | |         self.one = self.stream.read_u1()?;
41 | |         self.arrayOfInts = vec!();
42 | |         for i in 0..1 {
...  |
45 | |         self.testType = Box::new(DebugEnumName__TestSubtype::new(self.stream, self, _root)?);
46 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0277]: the trait bound `debug_enum_name::DebugEnumName__TestSubtype__InnerEnum1: std::default::Default` is not satisfied
  --> src/debug_enum_name.rs:59:5
   |
59 |     pub field1: Box<DebugEnumName__TestSubtype__InnerEnum1>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `debug_enum_name::DebugEnumName__TestSubtype__InnerEnum1`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<debug_enum_name::DebugEnumName__TestSubtype__InnerEnum1>`
   = note: required by `std::default::Default::default`

error[E0609]: no field `stream` on type `debug_enum_name::DebugEnumName__TestSubtype`
  --> src/debug_enum_name.rs:72:11
   |
72 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `field1`, `field2`, `instanceField`

error[E0609]: no field `stream` on type `&mut debug_enum_name::DebugEnumName__TestSubtype`
  --> src/debug_enum_name.rs:85:28
   |
85 |         self.field1 = self.stream.read_u1()?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut debug_enum_name::DebugEnumName__TestSubtype`
  --> src/debug_enum_name.rs:86:28
   |
86 |         self.field2 = self.stream.read_u1()?;
   |                            ^^^^^^

error[E0308]: mismatched types
  --> src/debug_enum_name.rs:84:27
   |
84 |           where Self: Sized {
   |  ___________________________^
85 | |         self.field1 = self.stream.read_u1()?;
86 | |         self.field2 = self.stream.read_u1()?;
87 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/default_endian_expr_exception.rs:74:89
   |
74 |         self.main = Box::new(DefaultEndianExprException__Doc__MainObj::new(self.stream, self, _root)?);
   |                                                                                         ^^^^ expected enum `std::option::Option`, found struct `default_endian_expr_exception::DefaultEndianExprException__Doc`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut default_endian_expr_exception::DefaultEndianExprException__Doc`

error[E0308]: mismatched types
  --> src/default_endian_expr_exception.rs:72:27
   |
72 |           where Self: Sized {
   |  ___________________________^
73 | |         self.indicator = self.stream.read_bytes(2)?;
74 | |         self.main = Box::new(DefaultEndianExprException__Doc__MainObj::new(self.stream, self, _root)?);
75 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `default_endian_expr_exception::DefaultEndianExprException__Doc__MainObj`
  --> src/default_endian_expr_exception.rs:95:11
   |
95 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `someInt`, `someIntBe`, `someIntLe`

error[E0609]: no field `stream` on type `&mut default_endian_expr_exception::DefaultEndianExprException__Doc__MainObj`
   --> src/default_endian_expr_exception.rs:108:29
    |
108 |         self.someInt = self.stream.read_u4()?;
    |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_exception::DefaultEndianExprException__Doc__MainObj`
   --> src/default_endian_expr_exception.rs:109:31
    |
109 |         self.someIntBe = self.stream.read_u2be()?;
    |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_exception::DefaultEndianExprException__Doc__MainObj`
   --> src/default_endian_expr_exception.rs:110:31
    |
110 |         self.someIntLe = self.stream.read_u2le()?;
    |                               ^^^^^^

error[E0308]: mismatched types
   --> src/default_endian_expr_exception.rs:107:27
    |
107 |           where Self: Sized {
    |  ___________________________^
108 | |         self.someInt = self.stream.read_u4()?;
109 | |         self.someIntBe = self.stream.read_u2be()?;
110 | |         self.someIntLe = self.stream.read_u2le()?;
111 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `default_endian_expr_inherited::DefaultEndianExprInherited`
  --> src/default_endian_expr_inherited.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `docs`

error[E0308]: mismatched types
  --> src/debug_enum_name.rs:96:30
   |
96 |         self.instanceField = (self.field2 & 15);
   |                              ^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
   |
   = note: expected type `std::option::Option<std::boxed::Box<debug_enum_name::DebugEnumName__TestSubtype__InnerEnum2>>`
              found type `u8`

error[E0308]: mismatched types
  --> src/debug_enum_name.rs:97:16
   |
97 |         return self.instanceField;
   |                ^^^^^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `default_big_endian::DefaultBigEndian`
  --> src/default_big_endian.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`

error[E0609]: no field `stream` on type `&mut default_big_endian::DefaultBigEndian`
  --> src/default_big_endian.rs:37:25
   |
37 |         self.one = self.stream.read_u4be()?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/default_big_endian.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |         self.one = self.stream.read_u4be()?;
38 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `default_endian_expr_exception::DefaultEndianExprException`
  --> src/default_endian_expr_exception.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `docs`

error[E0308]: mismatched types
  --> src/default_endian_expr_inherited.rs:37:21
   |
37 |         self.docs = [];
   |                     ^^
   |                     |
   |                     expected struct `std::vec::Vec`, found array of 0 elements
   |                     help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<default_endian_expr_inherited::DefaultEndianExprInherited__Doc>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut default_endian_expr_inherited::DefaultEndianExprInherited`
  --> src/default_endian_expr_inherited.rs:38:21
   |
38 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_inherited::DefaultEndianExprInherited`
  --> src/default_endian_expr_inherited.rs:39:79
   |
39 |             self.docs.push(Box::new(DefaultEndianExprInherited__Doc::new(self.stream, self, _root)?));
   |                                                                               ^^^^^^

error[E0308]: mismatched types
  --> src/default_endian_expr_exception.rs:37:21
   |
37 |         self.docs = [];
   |                     ^^
   |                     |
   |                     expected struct `std::vec::Vec`, found array of 0 elements
   |                     help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<default_endian_expr_exception::DefaultEndianExprException__Doc>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut default_endian_expr_exception::DefaultEndianExprException`
  --> src/default_endian_expr_exception.rs:38:21
   |
38 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_exception::DefaultEndianExprException`
  --> src/default_endian_expr_exception.rs:39:79
   |
39 |             self.docs.push(Box::new(DefaultEndianExprException__Doc::new(self.stream, self, _root)?));
   |                                                                               ^^^^^^

error[E0308]: mismatched types
  --> src/default_endian_expr_inherited.rs:39:87
   |
39 |             self.docs.push(Box::new(DefaultEndianExprInherited__Doc::new(self.stream, self, _root)?));
   |                                                                                       ^^^^ expected enum `std::option::Option`, found struct `default_endian_expr_inherited::DefaultEndianExprInherited`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut default_endian_expr_inherited::DefaultEndianExprInherited`

error[E0308]: mismatched types
  --> src/default_endian_expr_inherited.rs:38:9
   |
35 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
38 | /         while !self.stream.isEof() {
39 | |             self.docs.push(Box::new(DefaultEndianExprInherited__Doc::new(self.stream, self, _root)?));
40 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `default_endian_expr_inherited::DefaultEndianExprInherited__Doc`
  --> src/default_endian_expr_inherited.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `indicator`, `main`

error[E0609]: no field `stream` on type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc`
  --> src/default_endian_expr_inherited.rs:73:31
   |
73 |         self.indicator = self.stream.read_bytes(2)?;
   |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc`
  --> src/default_endian_expr_inherited.rs:74:81
   |
74 |         self.main = Box::new(DefaultEndianExprInherited__Doc__MainObj::new(self.stream, self, _root)?);
   |                                                                                 ^^^^^^

error[E0308]: mismatched types
  --> src/default_endian_expr_exception.rs:39:87
   |
39 |             self.docs.push(Box::new(DefaultEndianExprException__Doc::new(self.stream, self, _root)?));
   |                                                                                       ^^^^ expected enum `std::option::Option`, found struct `default_endian_expr_exception::DefaultEndianExprException`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut default_endian_expr_exception::DefaultEndianExprException`

error[E0308]: mismatched types
  --> src/default_endian_expr_exception.rs:38:9
   |
35 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
38 | /         while !self.stream.isEof() {
39 | |             self.docs.push(Box::new(DefaultEndianExprException__Doc::new(self.stream, self, _root)?));
40 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `default_endian_expr_exception::DefaultEndianExprException__Doc`
  --> src/default_endian_expr_exception.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `indicator`, `main`

error[E0609]: no field `stream` on type `&mut default_endian_expr_exception::DefaultEndianExprException__Doc`
  --> src/default_endian_expr_exception.rs:73:31
   |
73 |         self.indicator = self.stream.read_bytes(2)?;
   |                               ^^^^^^

error[E0308]: mismatched types
  --> src/default_endian_expr_inherited.rs:74:89
   |
74 |         self.main = Box::new(DefaultEndianExprInherited__Doc__MainObj::new(self.stream, self, _root)?);
   |                                                                                         ^^^^ expected enum `std::option::Option`, found struct `default_endian_expr_inherited::DefaultEndianExprInherited__Doc`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc`

error[E0308]: mismatched types
  --> src/default_endian_expr_inherited.rs:72:27
   |
72 |           where Self: Sized {
   |  ___________________________^
73 | |         self.indicator = self.stream.read_bytes(2)?;
74 | |         self.main = Box::new(DefaultEndianExprInherited__Doc__MainObj::new(self.stream, self, _root)?);
75 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut default_endian_expr_exception::DefaultEndianExprException__Doc`
  --> src/default_endian_expr_exception.rs:74:81
   |
74 |         self.main = Box::new(DefaultEndianExprException__Doc__MainObj::new(self.stream, self, _root)?);
   |                                                                                 ^^^^^^

error[E0609]: no field `stream` on type `default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj`
  --> src/default_endian_expr_inherited.rs:93:11
   |
93 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `insides`

error[E0609]: no field `stream` on type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj`
   --> src/default_endian_expr_inherited.rs:106:92
    |
106 |         self.insides = Box::new(DefaultEndianExprInherited__Doc__MainObj__SubObj::new(self.stream, self, _root)?);
    |                                                                                            ^^^^^^

error[E0308]: mismatched types
   --> src/default_endian_expr_inherited.rs:106:100
    |
106 |         self.insides = Box::new(DefaultEndianExprInherited__Doc__MainObj__SubObj::new(self.stream, self, _root)?);
    |                                                                                                    ^^^^ expected enum `std::option::Option`, found struct `default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj`

error[E0308]: mismatched types
   --> src/default_endian_expr_inherited.rs:105:27
    |
105 |           where Self: Sized {
    |  ___________________________^
106 | |         self.insides = Box::new(DefaultEndianExprInherited__Doc__MainObj__SubObj::new(self.stream, self, _root)?);
107 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj__SubObj`
   --> src/default_endian_expr_inherited.rs:126:11
    |
126 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `someInt`, `more`

error[E0609]: no field `stream` on type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj__SubObj`
   --> src/default_endian_expr_inherited.rs:139:29
    |
139 |         self.someInt = self.stream.read_u4()?;
    |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj__SubObj`
   --> src/default_endian_expr_inherited.rs:140:100
    |
140 |         self.more = Box::new(DefaultEndianExprInherited__Doc__MainObj__SubObj__SubsubObj::new(self.stream, self, _root)?);
    |                                                                                                    ^^^^^^

error[E0308]: mismatched types
  --> src/default_endian_expr_exception.rs:74:89
   |
74 |         self.main = Box::new(DefaultEndianExprException__Doc__MainObj::new(self.stream, self, _root)?);
   |                                                                                         ^^^^ expected enum `std::option::Option`, found struct `default_endian_expr_exception::DefaultEndianExprException__Doc`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut default_endian_expr_exception::DefaultEndianExprException__Doc`

error[E0308]: mismatched types
  --> src/default_endian_expr_exception.rs:72:27
   |
72 |           where Self: Sized {
   |  ___________________________^
73 | |         self.indicator = self.stream.read_bytes(2)?;
74 | |         self.main = Box::new(DefaultEndianExprException__Doc__MainObj::new(self.stream, self, _root)?);
75 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `default_endian_expr_exception::DefaultEndianExprException__Doc__MainObj`
  --> src/default_endian_expr_exception.rs:95:11
   |
95 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `someInt`, `someIntBe`, `someIntLe`

error[E0609]: no field `stream` on type `&mut default_endian_expr_exception::DefaultEndianExprException__Doc__MainObj`
   --> src/default_endian_expr_exception.rs:108:29
    |
108 |         self.someInt = self.stream.read_u4()?;
    |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_exception::DefaultEndianExprException__Doc__MainObj`
   --> src/default_endian_expr_exception.rs:109:31
    |
109 |         self.someIntBe = self.stream.read_u2be()?;
    |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_exception::DefaultEndianExprException__Doc__MainObj`
   --> src/default_endian_expr_exception.rs:110:31
    |
110 |         self.someIntLe = self.stream.read_u2le()?;
    |                               ^^^^^^

error[E0308]: mismatched types
   --> src/default_endian_expr_exception.rs:107:27
    |
107 |           where Self: Sized {
    |  ___________________________^
108 | |         self.someInt = self.stream.read_u4()?;
109 | |         self.someIntBe = self.stream.read_u2be()?;
110 | |         self.someIntLe = self.stream.read_u2le()?;
111 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `default_endian_expr_inherited::DefaultEndianExprInherited`
  --> src/default_endian_expr_inherited.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `docs`

error[E0308]: mismatched types
   --> src/default_endian_expr_inherited.rs:140:108
    |
140 |         self.more = Box::new(DefaultEndianExprInherited__Doc__MainObj__SubObj__SubsubObj::new(self.stream, self, _root)?);
    |                                                                                                            ^^^^ expected enum `std::option::Option`, found struct `default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj__SubObj`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj__SubObj`

error[E0308]: mismatched types
   --> src/default_endian_expr_inherited.rs:138:27
    |
138 |           where Self: Sized {
    |  ___________________________^
139 | |         self.someInt = self.stream.read_u4()?;
140 | |         self.more = Box::new(DefaultEndianExprInherited__Doc__MainObj__SubObj__SubsubObj::new(self.stream, self, _root)?);
141 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj__SubObj__SubsubObj`
   --> src/default_endian_expr_inherited.rs:161:11
    |
161 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `someInt1`, `someInt2`, `someInst`

error[E0609]: no field `stream` on type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj__SubObj__SubsubObj`
   --> src/default_endian_expr_inherited.rs:174:30
    |
174 |         self.someInt1 = self.stream.read_u2()?;
    |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj__SubObj__SubsubObj`
   --> src/default_endian_expr_inherited.rs:175:30
    |
175 |         self.someInt2 = self.stream.read_u2()?;
    |                              ^^^^^^

error[E0308]: mismatched types
   --> src/default_endian_expr_inherited.rs:173:27
    |
173 |           where Self: Sized {
    |  ___________________________^
174 | |         self.someInt1 = self.stream.read_u2()?;
175 | |         self.someInt2 = self.stream.read_u2()?;
176 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj__SubObj__SubsubObj`
   --> src/default_endian_expr_inherited.rs:185:25
    |
185 |         let _pos = self.stream.pos();
    |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj__SubObj__SubsubObj`
   --> src/default_endian_expr_inherited.rs:186:14
    |
186 |         self.stream.seek(2);
    |              ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj__SubObj__SubsubObj`
   --> src/default_endian_expr_inherited.rs:187:30
    |
187 |         self.someInst = self.stream.read_u4()?;
    |                              ^^^^^^

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
   --> src/default_endian_expr_inherited.rs:187:25
    |
187 |         self.someInst = self.stream.read_u4()?;
    |                         ^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `u32`
    |
    = help: the trait `std::ops::Try` is not implemented for `u32`
    = note: required by `std::ops::Try::from_error`

error[E0609]: no field `stream` on type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj__SubObj__SubsubObj`
   --> src/default_endian_expr_inherited.rs:188:14
    |
188 |         self.stream.seek(_pos);
    |              ^^^^^^

error[E0308]: mismatched types
   --> src/default_endian_expr_inherited.rs:189:16
    |
189 |         return self.someInst;
    |                ^^^^^^^^^^^^^ expected u32, found enum `std::option::Option`
    |
    = note: expected type `u32`
               found type `std::option::Option<u32>`

error[E0609]: no field `stream` on type `default_endian_expr_is_be::DefaultEndianExprIsBe`
  --> src/default_endian_expr_is_be.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `docs`

error[E0308]: mismatched types
  --> src/default_endian_expr_inherited.rs:37:21
   |
37 |         self.docs = [];
   |                     ^^
   |                     |
   |                     expected struct `std::vec::Vec`, found array of 0 elements
   |                     help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<default_endian_expr_inherited::DefaultEndianExprInherited__Doc>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut default_endian_expr_inherited::DefaultEndianExprInherited`
  --> src/default_endian_expr_inherited.rs:38:21
   |
38 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_inherited::DefaultEndianExprInherited`
  --> src/default_endian_expr_inherited.rs:39:79
   |
39 |             self.docs.push(Box::new(DefaultEndianExprInherited__Doc::new(self.stream, self, _root)?));
   |                                                                               ^^^^^^

error[E0308]: mismatched types
  --> src/default_endian_expr_is_be.rs:37:21
   |
37 |         self.docs = [];
   |                     ^^
   |                     |
   |                     expected struct `std::vec::Vec`, found array of 0 elements
   |                     help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<default_endian_expr_is_be::DefaultEndianExprIsBe__Doc>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe`
  --> src/default_endian_expr_is_be.rs:38:21
   |
38 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe`
  --> src/default_endian_expr_is_be.rs:39:74
   |
39 |             self.docs.push(Box::new(DefaultEndianExprIsBe__Doc::new(self.stream, self, _root)?));
   |                                                                          ^^^^^^

error[E0308]: mismatched types
  --> src/default_endian_expr_inherited.rs:39:87
   |
39 |             self.docs.push(Box::new(DefaultEndianExprInherited__Doc::new(self.stream, self, _root)?));
   |                                                                                       ^^^^ expected enum `std::option::Option`, found struct `default_endian_expr_inherited::DefaultEndianExprInherited`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut default_endian_expr_inherited::DefaultEndianExprInherited`

error[E0308]: mismatched types
  --> src/default_endian_expr_inherited.rs:38:9
   |
35 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
38 | /         while !self.stream.isEof() {
39 | |             self.docs.push(Box::new(DefaultEndianExprInherited__Doc::new(self.stream, self, _root)?));
40 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `default_endian_expr_inherited::DefaultEndianExprInherited__Doc`
  --> src/default_endian_expr_inherited.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `indicator`, `main`

error[E0609]: no field `stream` on type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc`
  --> src/default_endian_expr_inherited.rs:73:31
   |
73 |         self.indicator = self.stream.read_bytes(2)?;
   |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc`
  --> src/default_endian_expr_inherited.rs:74:81
   |
74 |         self.main = Box::new(DefaultEndianExprInherited__Doc__MainObj::new(self.stream, self, _root)?);
   |                                                                                 ^^^^^^

error[E0308]: mismatched types
  --> src/default_endian_expr_is_be.rs:39:82
   |
39 |             self.docs.push(Box::new(DefaultEndianExprIsBe__Doc::new(self.stream, self, _root)?));
   |                                                                                  ^^^^ expected enum `std::option::Option`, found struct `default_endian_expr_is_be::DefaultEndianExprIsBe`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe`

error[E0308]: mismatched types
  --> src/default_endian_expr_is_be.rs:38:9
   |
35 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
38 | /         while !self.stream.isEof() {
39 | |             self.docs.push(Box::new(DefaultEndianExprIsBe__Doc::new(self.stream, self, _root)?));
40 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `default_endian_expr_is_be::DefaultEndianExprIsBe__Doc`
  --> src/default_endian_expr_is_be.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `indicator`, `main`

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc`
  --> src/default_endian_expr_is_be.rs:73:31
   |
73 |         self.indicator = self.stream.read_bytes(2)?;
   |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc`
  --> src/default_endian_expr_is_be.rs:74:76
   |
74 |         self.main = Box::new(DefaultEndianExprIsBe__Doc__MainObj::new(self.stream, self, _root)?);
   |                                                                            ^^^^^^

error[E0308]: mismatched types
  --> src/default_endian_expr_inherited.rs:74:89
   |
74 |         self.main = Box::new(DefaultEndianExprInherited__Doc__MainObj::new(self.stream, self, _root)?);
   |                                                                                         ^^^^ expected enum `std::option::Option`, found struct `default_endian_expr_inherited::DefaultEndianExprInherited__Doc`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc`

error[E0308]: mismatched types
  --> src/default_endian_expr_inherited.rs:72:27
   |
72 |           where Self: Sized {
   |  ___________________________^
73 | |         self.indicator = self.stream.read_bytes(2)?;
74 | |         self.main = Box::new(DefaultEndianExprInherited__Doc__MainObj::new(self.stream, self, _root)?);
75 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj`
  --> src/default_endian_expr_inherited.rs:93:11
   |
93 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `insides`

error[E0609]: no field `stream` on type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj`
   --> src/default_endian_expr_inherited.rs:106:92
    |
106 |         self.insides = Box::new(DefaultEndianExprInherited__Doc__MainObj__SubObj::new(self.stream, self, _root)?);
    |                                                                                            ^^^^^^

error[E0308]: mismatched types
  --> src/default_endian_expr_is_be.rs:74:84
   |
74 |         self.main = Box::new(DefaultEndianExprIsBe__Doc__MainObj::new(self.stream, self, _root)?);
   |                                                                                    ^^^^ expected enum `std::option::Option`, found struct `default_endian_expr_is_be::DefaultEndianExprIsBe__Doc`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc`

error[E0308]: mismatched types
  --> src/default_endian_expr_is_be.rs:72:27
   |
72 |           where Self: Sized {
   |  ___________________________^
73 | |         self.indicator = self.stream.read_bytes(2)?;
74 | |         self.main = Box::new(DefaultEndianExprIsBe__Doc__MainObj::new(self.stream, self, _root)?);
75 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`
  --> src/default_endian_expr_is_be.rs:97:11
   |
97 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `someInt`, `someIntBe`, `someIntLe`, `instInt`, `instSub`

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`
   --> src/default_endian_expr_is_be.rs:110:29
    |
110 |         self.someInt = self.stream.read_u4()?;
    |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`
   --> src/default_endian_expr_is_be.rs:111:31
    |
111 |         self.someIntBe = self.stream.read_u2be()?;
    |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`
   --> src/default_endian_expr_is_be.rs:112:31
    |
112 |         self.someIntLe = self.stream.read_u2le()?;
    |                               ^^^^^^

error[E0308]: mismatched types
   --> src/default_endian_expr_is_be.rs:109:27
    |
109 |           where Self: Sized {
    |  ___________________________^
110 | |         self.someInt = self.stream.read_u4()?;
111 | |         self.someIntBe = self.stream.read_u2be()?;
112 | |         self.someIntLe = self.stream.read_u2le()?;
113 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`
   --> src/default_endian_expr_is_be.rs:122:25
    |
122 |         let _pos = self.stream.pos();
    |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`
   --> src/default_endian_expr_is_be.rs:123:14
    |
123 |         self.stream.seek(2);
    |              ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`
   --> src/default_endian_expr_is_be.rs:124:29
    |
124 |         self.instInt = self.stream.read_u4()?;
    |                             ^^^^^^

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
   --> src/default_endian_expr_is_be.rs:124:24
    |
124 |         self.instInt = self.stream.read_u4()?;
    |                        ^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `u32`
    |
    = help: the trait `std::ops::Try` is not implemented for `u32`
    = note: required by `std::ops::Try::from_error`

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`
   --> src/default_endian_expr_is_be.rs:125:14
    |
125 |         self.stream.seek(_pos);
    |              ^^^^^^

error[E0308]: mismatched types
   --> src/default_endian_expr_is_be.rs:126:16
    |
126 |         return self.instInt;
    |                ^^^^^^^^^^^^ expected u32, found enum `std::option::Option`
    |
    = note: expected type `u32`
               found type `std::option::Option<u32>`

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`
   --> src/default_endian_expr_is_be.rs:133:25
    |
133 |         let _pos = self.stream.pos();
    |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`
   --> src/default_endian_expr_is_be.rs:134:14
    |
134 |         self.stream.seek(2);
    |              ^^^^^^

error[E0308]: mismatched types
   --> src/default_endian_expr_inherited.rs:106:100
    |
106 |         self.insides = Box::new(DefaultEndianExprInherited__Doc__MainObj__SubObj::new(self.stream, self, _root)?);
    |                                                                                                    ^^^^ expected enum `std::option::Option`, found struct `default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj`

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`
   --> src/default_endian_expr_is_be.rs:135:91
    |
135 |         self.instSub = Box::new(DefaultEndianExprIsBe__Doc__MainObj__SubMainObj::new(self.stream, self, _root)?);
    |                                                                                           ^^^^^^

error[E0308]: mismatched types
   --> src/default_endian_expr_inherited.rs:105:27
    |
105 |           where Self: Sized {
    |  ___________________________^
106 | |         self.insides = Box::new(DefaultEndianExprInherited__Doc__MainObj__SubObj::new(self.stream, self, _root)?);
107 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj__SubObj`
   --> src/default_endian_expr_inherited.rs:126:11
    |
126 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `someInt`, `more`

error[E0609]: no field `stream` on type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj__SubObj`
   --> src/default_endian_expr_inherited.rs:139:29
    |
139 |         self.someInt = self.stream.read_u4()?;
    |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj__SubObj`
   --> src/default_endian_expr_inherited.rs:140:100
    |
140 |         self.more = Box::new(DefaultEndianExprInherited__Doc__MainObj__SubObj__SubsubObj::new(self.stream, self, _root)?);
    |                                                                                                    ^^^^^^

error[E0308]: mismatched types
   --> src/default_endian_expr_is_be.rs:135:99
    |
135 |         self.instSub = Box::new(DefaultEndianExprIsBe__Doc__MainObj__SubMainObj::new(self.stream, self, _root)?);
    |                                                                                                   ^^^^ expected enum `std::option::Option`, found struct `default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
   --> src/default_endian_expr_is_be.rs:135:33
    |
135 |         self.instSub = Box::new(DefaultEndianExprIsBe__Doc__MainObj__SubMainObj::new(self.stream, self, _root)?);
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::boxed::Box<default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj__SubMainObj>`
    |
    = help: the trait `std::ops::Try` is not implemented for `std::boxed::Box<default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj__SubMainObj>`
    = note: required by `std::ops::Try::from_error`

error[E0308]: mismatched types
   --> src/default_endian_expr_inherited.rs:140:108
    |
140 |         self.more = Box::new(DefaultEndianExprInherited__Doc__MainObj__SubObj__SubsubObj::new(self.stream, self, _root)?);
    |                                                                                                            ^^^^ expected enum `std::option::Option`, found struct `default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj__SubObj`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj__SubObj`

error[E0308]: mismatched types
   --> src/default_endian_expr_inherited.rs:138:27
    |
138 |           where Self: Sized {
    |  ___________________________^
139 | |         self.someInt = self.stream.read_u4()?;
140 | |         self.more = Box::new(DefaultEndianExprInherited__Doc__MainObj__SubObj__SubsubObj::new(self.stream, self, _root)?);
141 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj__SubObj__SubsubObj`
   --> src/default_endian_expr_inherited.rs:161:11
    |
161 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `someInt1`, `someInt2`, `someInst`

error[E0609]: no field `stream` on type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj__SubObj__SubsubObj`
   --> src/default_endian_expr_inherited.rs:174:30
    |
174 |         self.someInt1 = self.stream.read_u2()?;
    |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj__SubObj__SubsubObj`
   --> src/default_endian_expr_inherited.rs:175:30
    |
175 |         self.someInt2 = self.stream.read_u2()?;
    |                              ^^^^^^

error[E0308]: mismatched types
   --> src/default_endian_expr_inherited.rs:173:27
    |
173 |           where Self: Sized {
    |  ___________________________^
174 | |         self.someInt1 = self.stream.read_u2()?;
175 | |         self.someInt2 = self.stream.read_u2()?;
176 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj__SubObj__SubsubObj`
   --> src/default_endian_expr_inherited.rs:185:25
    |
185 |         let _pos = self.stream.pos();
    |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj__SubObj__SubsubObj`
   --> src/default_endian_expr_inherited.rs:186:14
    |
186 |         self.stream.seek(2);
    |              ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj__SubObj__SubsubObj`
   --> src/default_endian_expr_inherited.rs:187:30
    |
187 |         self.someInst = self.stream.read_u4()?;
    |                              ^^^^^^

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
   --> src/default_endian_expr_inherited.rs:187:25
    |
187 |         self.someInst = self.stream.read_u4()?;
    |                         ^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `u32`
    |
    = help: the trait `std::ops::Try` is not implemented for `u32`
    = note: required by `std::ops::Try::from_error`

error[E0609]: no field `stream` on type `&mut default_endian_expr_inherited::DefaultEndianExprInherited__Doc__MainObj__SubObj__SubsubObj`
   --> src/default_endian_expr_inherited.rs:188:14
    |
188 |         self.stream.seek(_pos);
    |              ^^^^^^

error[E0308]: mismatched types
   --> src/default_endian_expr_inherited.rs:189:16
    |
189 |         return self.someInst;
    |                ^^^^^^^^^^^^^ expected u32, found enum `std::option::Option`
    |
    = note: expected type `u32`
               found type `std::option::Option<u32>`

error[E0609]: no field `stream` on type `default_endian_expr_is_be::DefaultEndianExprIsBe`
  --> src/default_endian_expr_is_be.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `docs`

error[E0308]: mismatched types
   --> src/default_endian_expr_is_be.rs:135:24
    |
135 |         self.instSub = Box::new(DefaultEndianExprIsBe__Doc__MainObj__SubMainObj::new(self.stream, self, _root)?);
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
    |
    = note: expected type `std::option::Option<std::boxed::Box<_>>`
               found type `std::boxed::Box<_>`
help: try using a variant of the expected type
    |
135 |         self.instSub = Some(<Box>::new(match ::std::ops::Try::into_result(<DefaultEndianExprIsBe__Doc__MainObj__SubMainObj>::new(self.stream,
136 |                                                                                                      self,
137 |                                                                                                      _root))
138 |                {
139 |                ::std::result::Result::Err(err) =>
140 |                    #[allow(unreachable_code)]
  ...

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`
   --> src/default_endian_expr_is_be.rs:136:14
    |
136 |         self.stream.seek(_pos);
    |              ^^^^^^

error[E0308]: mismatched types
   --> src/default_endian_expr_is_be.rs:137:16
    |
137 |         return self.instSub;
    |                ^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
    |
    = note: expected type `std::boxed::Box<_>`
               found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj__SubMainObj`
   --> src/default_endian_expr_is_be.rs:153:11
    |
153 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `foo`

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj__SubMainObj`
   --> src/default_endian_expr_is_be.rs:166:25
    |
166 |         self.foo = self.stream.read_u4()?;
    |                         ^^^^^^

error[E0308]: mismatched types
   --> src/default_endian_expr_is_be.rs:165:27
    |
165 |           where Self: Sized {
    |  ___________________________^
166 | |         self.foo = self.stream.read_u4()?;
167 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `default_endian_expr_is_le::DefaultEndianExprIsLe`
  --> src/default_endian_expr_is_le.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `docs`

error[E0308]: mismatched types
  --> src/default_endian_expr_is_be.rs:37:21
   |
37 |         self.docs = [];
   |                     ^^
   |                     |
   |                     expected struct `std::vec::Vec`, found array of 0 elements
   |                     help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<default_endian_expr_is_be::DefaultEndianExprIsBe__Doc>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe`
  --> src/default_endian_expr_is_be.rs:38:21
   |
38 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe`
  --> src/default_endian_expr_is_be.rs:39:74
   |
39 |             self.docs.push(Box::new(DefaultEndianExprIsBe__Doc::new(self.stream, self, _root)?));
   |                                                                          ^^^^^^

error[E0308]: mismatched types
  --> src/default_endian_expr_is_le.rs:37:21
   |
37 |         self.docs = [];
   |                     ^^
   |                     |
   |                     expected struct `std::vec::Vec`, found array of 0 elements
   |                     help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<default_endian_expr_is_le::DefaultEndianExprIsLe__Doc>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_le::DefaultEndianExprIsLe`
  --> src/default_endian_expr_is_le.rs:38:21
   |
38 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_le::DefaultEndianExprIsLe`
  --> src/default_endian_expr_is_le.rs:39:74
   |
39 |             self.docs.push(Box::new(DefaultEndianExprIsLe__Doc::new(self.stream, self, _root)?));
   |                                                                          ^^^^^^

error[E0308]: mismatched types
  --> src/default_endian_expr_is_be.rs:39:82
   |
39 |             self.docs.push(Box::new(DefaultEndianExprIsBe__Doc::new(self.stream, self, _root)?));
   |                                                                                  ^^^^ expected enum `std::option::Option`, found struct `default_endian_expr_is_be::DefaultEndianExprIsBe`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe`

error[E0308]: mismatched types
  --> src/default_endian_expr_is_be.rs:38:9
   |
35 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
38 | /         while !self.stream.isEof() {
39 | |             self.docs.push(Box::new(DefaultEndianExprIsBe__Doc::new(self.stream, self, _root)?));
40 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `default_endian_expr_is_be::DefaultEndianExprIsBe__Doc`
  --> src/default_endian_expr_is_be.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `indicator`, `main`

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc`
  --> src/default_endian_expr_is_be.rs:73:31
   |
73 |         self.indicator = self.stream.read_bytes(2)?;
   |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc`
  --> src/default_endian_expr_is_be.rs:74:76
   |
74 |         self.main = Box::new(DefaultEndianExprIsBe__Doc__MainObj::new(self.stream, self, _root)?);
   |                                                                            ^^^^^^

error[E0308]: mismatched types
  --> src/default_endian_expr_is_le.rs:39:82
   |
39 |             self.docs.push(Box::new(DefaultEndianExprIsLe__Doc::new(self.stream, self, _root)?));
   |                                                                                  ^^^^ expected enum `std::option::Option`, found struct `default_endian_expr_is_le::DefaultEndianExprIsLe`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut default_endian_expr_is_le::DefaultEndianExprIsLe`

error[E0308]: mismatched types
  --> src/default_endian_expr_is_le.rs:38:9
   |
35 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
38 | /         while !self.stream.isEof() {
39 | |             self.docs.push(Box::new(DefaultEndianExprIsLe__Doc::new(self.stream, self, _root)?));
40 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `default_endian_expr_is_le::DefaultEndianExprIsLe__Doc`
  --> src/default_endian_expr_is_le.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `indicator`, `main`

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_le::DefaultEndianExprIsLe__Doc`
  --> src/default_endian_expr_is_le.rs:73:31
   |
73 |         self.indicator = self.stream.read_bytes(2)?;
   |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_le::DefaultEndianExprIsLe__Doc`
  --> src/default_endian_expr_is_le.rs:74:76
   |
74 |         self.main = Box::new(DefaultEndianExprIsLe__Doc__MainObj::new(self.stream, self, _root)?);
   |                                                                            ^^^^^^

error[E0308]: mismatched types
  --> src/default_endian_expr_is_be.rs:74:84
   |
74 |         self.main = Box::new(DefaultEndianExprIsBe__Doc__MainObj::new(self.stream, self, _root)?);
   |                                                                                    ^^^^ expected enum `std::option::Option`, found struct `default_endian_expr_is_be::DefaultEndianExprIsBe__Doc`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc`

error[E0308]: mismatched types
  --> src/default_endian_expr_is_be.rs:72:27
   |
72 |           where Self: Sized {
   |  ___________________________^
73 | |         self.indicator = self.stream.read_bytes(2)?;
74 | |         self.main = Box::new(DefaultEndianExprIsBe__Doc__MainObj::new(self.stream, self, _root)?);
75 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`
  --> src/default_endian_expr_is_be.rs:97:11
   |
97 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `someInt`, `someIntBe`, `someIntLe`, `instInt`, `instSub`

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`
   --> src/default_endian_expr_is_be.rs:110:29
    |
110 |         self.someInt = self.stream.read_u4()?;
    |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`
   --> src/default_endian_expr_is_be.rs:111:31
    |
111 |         self.someIntBe = self.stream.read_u2be()?;
    |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`
   --> src/default_endian_expr_is_be.rs:112:31
    |
112 |         self.someIntLe = self.stream.read_u2le()?;
    |                               ^^^^^^

error[E0308]: mismatched types
   --> src/default_endian_expr_is_be.rs:109:27
    |
109 |           where Self: Sized {
    |  ___________________________^
110 | |         self.someInt = self.stream.read_u4()?;
111 | |         self.someIntBe = self.stream.read_u2be()?;
112 | |         self.someIntLe = self.stream.read_u2le()?;
113 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`
   --> src/default_endian_expr_is_be.rs:122:25
    |
122 |         let _pos = self.stream.pos();
    |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`
   --> src/default_endian_expr_is_be.rs:123:14
    |
123 |         self.stream.seek(2);
    |              ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`
   --> src/default_endian_expr_is_be.rs:124:29
    |
124 |         self.instInt = self.stream.read_u4()?;
    |                             ^^^^^^

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
   --> src/default_endian_expr_is_be.rs:124:24
    |
124 |         self.instInt = self.stream.read_u4()?;
    |                        ^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `u32`
    |
    = help: the trait `std::ops::Try` is not implemented for `u32`
    = note: required by `std::ops::Try::from_error`

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`
   --> src/default_endian_expr_is_be.rs:125:14
    |
125 |         self.stream.seek(_pos);
    |              ^^^^^^

error[E0308]: mismatched types
   --> src/default_endian_expr_is_be.rs:126:16
    |
126 |         return self.instInt;
    |                ^^^^^^^^^^^^ expected u32, found enum `std::option::Option`
    |
    = note: expected type `u32`
               found type `std::option::Option<u32>`

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`
   --> src/default_endian_expr_is_be.rs:133:25
    |
133 |         let _pos = self.stream.pos();
    |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`
   --> src/default_endian_expr_is_be.rs:134:14
    |
134 |         self.stream.seek(2);
    |              ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`
   --> src/default_endian_expr_is_be.rs:135:91
    |
135 |         self.instSub = Box::new(DefaultEndianExprIsBe__Doc__MainObj__SubMainObj::new(self.stream, self, _root)?);
    |                                                                                           ^^^^^^

error[E0308]: mismatched types
  --> src/default_endian_expr_is_le.rs:74:84
   |
74 |         self.main = Box::new(DefaultEndianExprIsLe__Doc__MainObj::new(self.stream, self, _root)?);
   |                                                                                    ^^^^ expected enum `std::option::Option`, found struct `default_endian_expr_is_le::DefaultEndianExprIsLe__Doc`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut default_endian_expr_is_le::DefaultEndianExprIsLe__Doc`

error[E0308]: mismatched types
  --> src/default_endian_expr_is_le.rs:72:27
   |
72 |           where Self: Sized {
   |  ___________________________^
73 | |         self.indicator = self.stream.read_bytes(2)?;
74 | |         self.main = Box::new(DefaultEndianExprIsLe__Doc__MainObj::new(self.stream, self, _root)?);
75 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `default_endian_expr_is_le::DefaultEndianExprIsLe__Doc__MainObj`
  --> src/default_endian_expr_is_le.rs:95:11
   |
95 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `someInt`, `someIntBe`, `someIntLe`

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_le::DefaultEndianExprIsLe__Doc__MainObj`
   --> src/default_endian_expr_is_le.rs:108:29
    |
108 |         self.someInt = self.stream.read_u4()?;
    |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_le::DefaultEndianExprIsLe__Doc__MainObj`
   --> src/default_endian_expr_is_le.rs:109:31
    |
109 |         self.someIntBe = self.stream.read_u2be()?;
    |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_le::DefaultEndianExprIsLe__Doc__MainObj`
   --> src/default_endian_expr_is_le.rs:110:31
    |
110 |         self.someIntLe = self.stream.read_u2le()?;
    |                               ^^^^^^

error[E0308]: mismatched types
   --> src/default_endian_expr_is_le.rs:107:27
    |
107 |           where Self: Sized {
    |  ___________________________^
108 | |         self.someInt = self.stream.read_u4()?;
109 | |         self.someIntBe = self.stream.read_u2be()?;
110 | |         self.someIntLe = self.stream.read_u2le()?;
111 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `default_endian_mod::DefaultEndianMod`
  --> src/default_endian_mod.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `main`

error[E0609]: no field `stream` on type `&mut default_endian_mod::DefaultEndianMod`
  --> src/default_endian_mod.rs:37:66
   |
37 |         self.main = Box::new(DefaultEndianMod__MainObj::new(self.stream, self, _root)?);
   |                                                                  ^^^^^^

error[E0308]: mismatched types
   --> src/default_endian_expr_is_be.rs:135:99
    |
135 |         self.instSub = Box::new(DefaultEndianExprIsBe__Doc__MainObj__SubMainObj::new(self.stream, self, _root)?);
    |                                                                                                   ^^^^ expected enum `std::option::Option`, found struct `default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
   --> src/default_endian_expr_is_be.rs:135:33
    |
135 |         self.instSub = Box::new(DefaultEndianExprIsBe__Doc__MainObj__SubMainObj::new(self.stream, self, _root)?);
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::boxed::Box<default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj__SubMainObj>`
    |
    = help: the trait `std::ops::Try` is not implemented for `std::boxed::Box<default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj__SubMainObj>`
    = note: required by `std::ops::Try::from_error`

error[E0308]: mismatched types
  --> src/default_endian_mod.rs:37:74
   |
37 |         self.main = Box::new(DefaultEndianMod__MainObj::new(self.stream, self, _root)?);
   |                                                                          ^^^^ expected enum `std::option::Option`, found struct `default_endian_mod::DefaultEndianMod`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut default_endian_mod::DefaultEndianMod`

error[E0308]: mismatched types
  --> src/default_endian_mod.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |         self.main = Box::new(DefaultEndianMod__MainObj::new(self.stream, self, _root)?);
38 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `default_endian_mod::DefaultEndianMod__MainObj`
  --> src/default_endian_mod.rs:58:11
   |
58 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `nest`, `nestBe`

error[E0609]: no field `stream` on type `&mut default_endian_mod::DefaultEndianMod__MainObj`
  --> src/default_endian_mod.rs:71:25
   |
71 |         self.one = self.stream.read_s4le()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_mod::DefaultEndianMod__MainObj`
  --> src/default_endian_mod.rs:72:75
   |
72 |         self.nest = Box::new(DefaultEndianMod__MainObj__Subnest::new(self.stream, self, _root)?);
   |                                                                           ^^^^^^

error[E0308]: mismatched types
   --> src/default_endian_expr_is_be.rs:135:24
    |
135 |         self.instSub = Box::new(DefaultEndianExprIsBe__Doc__MainObj__SubMainObj::new(self.stream, self, _root)?);
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
    |
    = note: expected type `std::option::Option<std::boxed::Box<_>>`
               found type `std::boxed::Box<_>`
help: try using a variant of the expected type
    |
135 |         self.instSub = Some(<Box>::new(match ::std::ops::Try::into_result(<DefaultEndianExprIsBe__Doc__MainObj__SubMainObj>::new(self.stream,
136 |                                                                                                      self,
137 |                                                                                                      _root))
138 |                {
139 |                ::std::result::Result::Err(err) =>
140 |                    #[allow(unreachable_code)]
  ...

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj`
   --> src/default_endian_expr_is_be.rs:136:14
    |
136 |         self.stream.seek(_pos);
    |              ^^^^^^

error[E0308]: mismatched types
   --> src/default_endian_expr_is_be.rs:137:16
    |
137 |         return self.instSub;
    |                ^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
    |
    = note: expected type `std::boxed::Box<_>`
               found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj__SubMainObj`
   --> src/default_endian_expr_is_be.rs:153:11
    |
153 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `foo`

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_be::DefaultEndianExprIsBe__Doc__MainObj__SubMainObj`
   --> src/default_endian_expr_is_be.rs:166:25
    |
166 |         self.foo = self.stream.read_u4()?;
    |                         ^^^^^^

error[E0308]: mismatched types
   --> src/default_endian_expr_is_be.rs:165:27
    |
165 |           where Self: Sized {
    |  ___________________________^
166 | |         self.foo = self.stream.read_u4()?;
167 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `default_endian_expr_is_le::DefaultEndianExprIsLe`
  --> src/default_endian_expr_is_le.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `docs`

error[E0308]: mismatched types
  --> src/default_endian_mod.rs:72:83
   |
72 |         self.nest = Box::new(DefaultEndianMod__MainObj__Subnest::new(self.stream, self, _root)?);
   |                                                                                   ^^^^ expected enum `std::option::Option`, found struct `default_endian_mod::DefaultEndianMod__MainObj`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut default_endian_mod::DefaultEndianMod__MainObj`

error[E0609]: no field `stream` on type `&mut default_endian_mod::DefaultEndianMod__MainObj`
  --> src/default_endian_mod.rs:73:79
   |
73 |         self.nestBe = Box::new(DefaultEndianMod__MainObj__SubnestBe::new(self.stream, self, _root)?);
   |                                                                               ^^^^^^

error[E0308]: mismatched types
  --> src/default_endian_expr_is_le.rs:37:21
   |
37 |         self.docs = [];
   |                     ^^
   |                     |
   |                     expected struct `std::vec::Vec`, found array of 0 elements
   |                     help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<default_endian_expr_is_le::DefaultEndianExprIsLe__Doc>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_le::DefaultEndianExprIsLe`
  --> src/default_endian_expr_is_le.rs:38:21
   |
38 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_le::DefaultEndianExprIsLe`
  --> src/default_endian_expr_is_le.rs:39:74
   |
39 |             self.docs.push(Box::new(DefaultEndianExprIsLe__Doc::new(self.stream, self, _root)?));
   |                                                                          ^^^^^^

error[E0308]: mismatched types
  --> src/default_endian_mod.rs:73:87
   |
73 |         self.nestBe = Box::new(DefaultEndianMod__MainObj__SubnestBe::new(self.stream, self, _root)?);
   |                                                                                       ^^^^ expected enum `std::option::Option`, found struct `default_endian_mod::DefaultEndianMod__MainObj`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut default_endian_mod::DefaultEndianMod__MainObj`

error[E0308]: mismatched types
  --> src/default_endian_mod.rs:70:27
   |
70 |           where Self: Sized {
   |  ___________________________^
71 | |         self.one = self.stream.read_s4le()?;
72 | |         self.nest = Box::new(DefaultEndianMod__MainObj__Subnest::new(self.stream, self, _root)?);
73 | |         self.nestBe = Box::new(DefaultEndianMod__MainObj__SubnestBe::new(self.stream, self, _root)?);
74 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `default_endian_mod::DefaultEndianMod__MainObj__Subnest`
  --> src/default_endian_mod.rs:92:11
   |
92 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `two`

error[E0609]: no field `stream` on type `&mut default_endian_mod::DefaultEndianMod__MainObj__Subnest`
   --> src/default_endian_mod.rs:105:25
    |
105 |         self.two = self.stream.read_s4le()?;
    |                         ^^^^^^

error[E0308]: mismatched types
   --> src/default_endian_mod.rs:104:27
    |
104 |           where Self: Sized {
    |  ___________________________^
105 | |         self.two = self.stream.read_s4le()?;
106 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `default_endian_mod::DefaultEndianMod__MainObj__SubnestBe`
   --> src/default_endian_mod.rs:124:11
    |
124 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `two`

error[E0609]: no field `stream` on type `&mut default_endian_mod::DefaultEndianMod__MainObj__SubnestBe`
   --> src/default_endian_mod.rs:137:25
    |
137 |         self.two = self.stream.read_s4be()?;
    |                         ^^^^^^

error[E0308]: mismatched types
   --> src/default_endian_mod.rs:136:27
    |
136 |           where Self: Sized {
    |  ___________________________^
137 | |         self.two = self.stream.read_s4be()?;
138 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `docstrings_docref::DocstringsDocref`
  --> src/docstrings_docref.rs:32:11
   |
32 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`, `three`, `foo`, `parseInst`

error[E0609]: no field `stream` on type `&mut docstrings_docref::DocstringsDocref`
  --> src/docstrings_docref.rs:45:25
   |
45 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut docstrings_docref::DocstringsDocref`
  --> src/docstrings_docref.rs:46:25
   |
46 |         self.two = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut docstrings_docref::DocstringsDocref`
  --> src/docstrings_docref.rs:47:27
   |
47 |         self.three = self.stream.read_u1()?;
   |                           ^^^^^^

error[E0308]: mismatched types
  --> src/docstrings_docref.rs:44:27
   |
44 |           where Self: Sized {
   |  ___________________________^
45 | |         self.one = self.stream.read_u1()?;
46 | |         self.two = self.stream.read_u1()?;
47 | |         self.three = self.stream.read_u1()?;
48 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/default_endian_expr_is_le.rs:39:82
   |
39 |             self.docs.push(Box::new(DefaultEndianExprIsLe__Doc::new(self.stream, self, _root)?));
   |                                                                                  ^^^^ expected enum `std::option::Option`, found struct `default_endian_expr_is_le::DefaultEndianExprIsLe`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut default_endian_expr_is_le::DefaultEndianExprIsLe`

error[E0308]: mismatched types
  --> src/default_endian_expr_is_le.rs:38:9
   |
35 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
38 | /         while !self.stream.isEof() {
39 | |             self.docs.push(Box::new(DefaultEndianExprIsLe__Doc::new(self.stream, self, _root)?));
40 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `default_endian_expr_is_le::DefaultEndianExprIsLe__Doc`
  --> src/default_endian_expr_is_le.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `indicator`, `main`

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_le::DefaultEndianExprIsLe__Doc`
  --> src/default_endian_expr_is_le.rs:73:31
   |
73 |         self.indicator = self.stream.read_bytes(2)?;
   |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_le::DefaultEndianExprIsLe__Doc`
  --> src/default_endian_expr_is_le.rs:74:76
   |
74 |         self.main = Box::new(DefaultEndianExprIsLe__Doc__MainObj::new(self.stream, self, _root)?);
   |                                                                            ^^^^^^

error[E0308]: mismatched types
  --> src/docstrings_docref.rs:57:20
   |
57 |         self.foo = true;
   |                    ^^^^
   |                    |
   |                    expected enum `std::option::Option`, found bool
   |                    help: try using a variant of the expected type: `Some(true)`
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/docstrings_docref.rs:58:16
   |
58 |         return self.foo;
   |                ^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0609]: no field `stream` on type `&mut docstrings_docref::DocstringsDocref`
  --> src/docstrings_docref.rs:65:25
   |
65 |         let _pos = self.stream.pos();
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut docstrings_docref::DocstringsDocref`
  --> src/docstrings_docref.rs:66:14
   |
66 |         self.stream.seek(0);
   |              ^^^^^^

error[E0609]: no field `stream` on type `&mut docstrings_docref::DocstringsDocref`
  --> src/docstrings_docref.rs:67:31
   |
67 |         self.parseInst = self.stream.read_u1()?;
   |                               ^^^^^^

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/docstrings_docref.rs:67:26
   |
67 |         self.parseInst = self.stream.read_u1()?;
   |                          ^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `u8`
   |
   = help: the trait `std::ops::Try` is not implemented for `u8`
   = note: required by `std::ops::Try::from_error`

error[E0609]: no field `stream` on type `&mut docstrings_docref::DocstringsDocref`
  --> src/docstrings_docref.rs:68:14
   |
68 |         self.stream.seek(_pos);
   |              ^^^^^^

error[E0308]: mismatched types
  --> src/docstrings_docref.rs:69:16
   |
69 |         return self.parseInst;
   |                ^^^^^^^^^^^^^^ expected u8, found enum `std::option::Option`
   |
   = note: expected type `u8`
              found type `std::option::Option<u8>`

error[E0609]: no field `stream` on type `docstrings::Docstrings`
  --> src/docstrings.rs:30:11
   |
30 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`, `three`

error[E0609]: no field `stream` on type `&mut docstrings::Docstrings`
  --> src/docstrings.rs:43:25
   |
43 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/docstrings.rs:42:27
   |
42 |           where Self: Sized {
   |  ___________________________^
43 | |         self.one = self.stream.read_u1()?;
44 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut docstrings::Docstrings`
  --> src/docstrings.rs:57:25
   |
57 |         let _pos = self.stream.pos();
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut docstrings::Docstrings`
  --> src/docstrings.rs:58:14
   |
58 |         self.stream.seek(0);
   |              ^^^^^^

error[E0609]: no field `stream` on type `&mut docstrings::Docstrings`
  --> src/docstrings.rs:59:25
   |
59 |         self.two = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/docstrings.rs:59:20
   |
59 |         self.two = self.stream.read_u1()?;
   |                    ^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `u8`
   |
   = help: the trait `std::ops::Try` is not implemented for `u8`
   = note: required by `std::ops::Try::from_error`

error[E0609]: no field `stream` on type `&mut docstrings::Docstrings`
  --> src/docstrings.rs:60:14
   |
60 |         self.stream.seek(_pos);
   |              ^^^^^^

error[E0308]: mismatched types
  --> src/docstrings.rs:61:16
   |
61 |         return self.two;
   |                ^^^^^^^^ expected u8, found enum `std::option::Option`
   |
   = note: expected type `u8`
              found type `std::option::Option<u8>`

error[E0308]: mismatched types
  --> src/default_endian_expr_is_le.rs:74:84
   |
74 |         self.main = Box::new(DefaultEndianExprIsLe__Doc__MainObj::new(self.stream, self, _root)?);
   |                                                                                    ^^^^ expected enum `std::option::Option`, found struct `default_endian_expr_is_le::DefaultEndianExprIsLe__Doc`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut default_endian_expr_is_le::DefaultEndianExprIsLe__Doc`

error[E0308]: mismatched types
  --> src/default_endian_expr_is_le.rs:72:27
   |
72 |           where Self: Sized {
   |  ___________________________^
73 | |         self.indicator = self.stream.read_bytes(2)?;
74 | |         self.main = Box::new(DefaultEndianExprIsLe__Doc__MainObj::new(self.stream, self, _root)?);
75 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `default_endian_expr_is_le::DefaultEndianExprIsLe__Doc__MainObj`
  --> src/default_endian_expr_is_le.rs:95:11
   |
95 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `someInt`, `someIntBe`, `someIntLe`

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_le::DefaultEndianExprIsLe__Doc__MainObj`
   --> src/default_endian_expr_is_le.rs:108:29
    |
108 |         self.someInt = self.stream.read_u4()?;
    |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_le::DefaultEndianExprIsLe__Doc__MainObj`
   --> src/default_endian_expr_is_le.rs:109:31
    |
109 |         self.someIntBe = self.stream.read_u2be()?;
    |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_expr_is_le::DefaultEndianExprIsLe__Doc__MainObj`
   --> src/default_endian_expr_is_le.rs:110:31
    |
110 |         self.someIntLe = self.stream.read_u2le()?;
    |                               ^^^^^^

error[E0308]: mismatched types
   --> src/default_endian_expr_is_le.rs:107:27
    |
107 |           where Self: Sized {
    |  ___________________________^
108 | |         self.someInt = self.stream.read_u4()?;
109 | |         self.someIntBe = self.stream.read_u2be()?;
110 | |         self.someIntLe = self.stream.read_u2le()?;
111 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `default_endian_mod::DefaultEndianMod`
  --> src/default_endian_mod.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `main`

error[E0609]: no field `stream` on type `&mut default_endian_mod::DefaultEndianMod`
  --> src/default_endian_mod.rs:37:66
   |
37 |         self.main = Box::new(DefaultEndianMod__MainObj::new(self.stream, self, _root)?);
   |                                                                  ^^^^^^

error[E0308]: mismatched types
  --> src/docstrings.rs:72:22
   |
72 |         self.three = 66;
   |                      ^^
   |                      |
   |                      expected enum `std::option::Option`, found integral variable
   |                      help: try using a variant of the expected type: `Some(66)`
   |
   = note: expected type `std::option::Option<i8>`
              found type `{integer}`

error[E0308]: mismatched types
  --> src/docstrings.rs:73:16
   |
73 |         return self.three;
   |                ^^^^^^^^^^ expected i8, found enum `std::option::Option`
   |
   = note: expected type `i8`
              found type `std::option::Option<i8>`

error[E0609]: no field `stream` on type `docstrings::Docstrings__ComplexSubtype`
   --> src/docstrings.rs:108:11
    |
108 |         s.stream = stream;
    |           ^^^^^^ unknown field

error[E0308]: mismatched types
   --> src/docstrings.rs:120:27
    |
120 |           where Self: Sized {
    |  ___________________________^
121 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0277]: the trait bound `enum_0::Enum0__Animal: std::default::Default` is not satisfied
  --> src/enum_0.rs:13:5
   |
13 |     pub pet1: Box<Enum0__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_0::Enum0__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_0::Enum0__Animal>`
   = note: required by `std::default::Default::default`

error[E0277]: the trait bound `enum_0::Enum0__Animal: std::default::Default` is not satisfied
  --> src/enum_0.rs:14:5
   |
14 |     pub pet2: Box<Enum0__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_0::Enum0__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_0::Enum0__Animal>`
   = note: required by `std::default::Default::default`

error[E0609]: no field `stream` on type `enum_0::Enum0`
  --> src/enum_0.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `pet1`, `pet2`

error[E0609]: no field `stream` on type `&mut enum_0::Enum0`
  --> src/enum_0.rs:38:26
   |
38 |         self.pet1 = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut enum_0::Enum0`
  --> src/enum_0.rs:39:26
   |
39 |         self.pet2 = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0308]: mismatched types
  --> src/enum_0.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.pet1 = self.stream.read_u4le()?;
39 | |         self.pet2 = self.stream.read_u4le()?;
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `enum_1::Enum1`
  --> src/enum_1.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `main`

error[E0609]: no field `stream` on type `&mut enum_1::Enum1`
  --> src/enum_1.rs:37:55
   |
37 |         self.main = Box::new(Enum1__MainObj::new(self.stream, self, _root)?);
   |                                                       ^^^^^^

error[E0308]: mismatched types
  --> src/default_endian_mod.rs:37:74
   |
37 |         self.main = Box::new(DefaultEndianMod__MainObj::new(self.stream, self, _root)?);
   |                                                                          ^^^^ expected enum `std::option::Option`, found struct `default_endian_mod::DefaultEndianMod`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut default_endian_mod::DefaultEndianMod`

error[E0308]: mismatched types
  --> src/default_endian_mod.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |         self.main = Box::new(DefaultEndianMod__MainObj::new(self.stream, self, _root)?);
38 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `default_endian_mod::DefaultEndianMod__MainObj`
  --> src/default_endian_mod.rs:58:11
   |
58 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `nest`, `nestBe`

error[E0609]: no field `stream` on type `&mut default_endian_mod::DefaultEndianMod__MainObj`
  --> src/default_endian_mod.rs:71:25
   |
71 |         self.one = self.stream.read_s4le()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_mod::DefaultEndianMod__MainObj`
  --> src/default_endian_mod.rs:72:75
   |
72 |         self.nest = Box::new(DefaultEndianMod__MainObj__Subnest::new(self.stream, self, _root)?);
   |                                                                           ^^^^^^

error[E0308]: mismatched types
  --> src/enum_1.rs:37:63
   |
37 |         self.main = Box::new(Enum1__MainObj::new(self.stream, self, _root)?);
   |                                                               ^^^^ expected enum `std::option::Option`, found struct `enum_1::Enum1`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut enum_1::Enum1`

error[E0308]: mismatched types
  --> src/enum_1.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |         self.main = Box::new(Enum1__MainObj::new(self.stream, self, _root)?);
38 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `enum_1::Enum1__MainObj`
  --> src/enum_1.rs:56:11
   |
56 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `submain`

error[E0609]: no field `stream` on type `&mut enum_1::Enum1__MainObj`
  --> src/enum_1.rs:69:70
   |
69 |         self.submain = Box::new(Enum1__MainObj__SubmainObj::new(self.stream, self, _root)?);
   |                                                                      ^^^^^^

error[E0308]: mismatched types
  --> src/enum_1.rs:69:78
   |
69 |         self.submain = Box::new(Enum1__MainObj__SubmainObj::new(self.stream, self, _root)?);
   |                                                                              ^^^^ expected enum `std::option::Option`, found struct `enum_1::Enum1__MainObj`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut enum_1::Enum1__MainObj`

error[E0308]: mismatched types
  --> src/enum_1.rs:68:27
   |
68 |           where Self: Sized {
   |  ___________________________^
69 | |         self.submain = Box::new(Enum1__MainObj__SubmainObj::new(self.stream, self, _root)?);
70 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0277]: the trait bound `enum_1::Enum1__MainObj__Animal: std::default::Default` is not satisfied
  --> src/enum_1.rs:82:5
   |
82 |     pub pet1: Box<Enum1__MainObj__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_1::Enum1__MainObj__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_1::Enum1__MainObj__Animal>`
   = note: required by `std::default::Default::default`

error[E0277]: the trait bound `enum_1::Enum1__MainObj__Animal: std::default::Default` is not satisfied
  --> src/enum_1.rs:83:5
   |
83 |     pub pet2: Box<Enum1__MainObj__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_1::Enum1__MainObj__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_1::Enum1__MainObj__Animal>`
   = note: required by `std::default::Default::default`

error[E0609]: no field `stream` on type `enum_1::Enum1__MainObj__SubmainObj`
  --> src/enum_1.rs:94:11
   |
94 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `pet1`, `pet2`

error[E0308]: mismatched types
  --> src/default_endian_mod.rs:72:83
   |
72 |         self.nest = Box::new(DefaultEndianMod__MainObj__Subnest::new(self.stream, self, _root)?);
   |                                                                                   ^^^^ expected enum `std::option::Option`, found struct `default_endian_mod::DefaultEndianMod__MainObj`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut default_endian_mod::DefaultEndianMod__MainObj`

error[E0609]: no field `stream` on type `&mut enum_1::Enum1__MainObj__SubmainObj`
   --> src/enum_1.rs:107:26
    |
107 |         self.pet1 = self.stream.read_u4le()?;
    |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut enum_1::Enum1__MainObj__SubmainObj`
   --> src/enum_1.rs:108:26
    |
108 |         self.pet2 = self.stream.read_u4le()?;
    |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut default_endian_mod::DefaultEndianMod__MainObj`
  --> src/default_endian_mod.rs:73:79
   |
73 |         self.nestBe = Box::new(DefaultEndianMod__MainObj__SubnestBe::new(self.stream, self, _root)?);
   |                                                                               ^^^^^^

error[E0308]: mismatched types
   --> src/enum_1.rs:106:27
    |
106 |           where Self: Sized {
    |  ___________________________^
107 | |         self.pet1 = self.stream.read_u4le()?;
108 | |         self.pet2 = self.stream.read_u4le()?;
109 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0277]: the trait bound `enum_deep::EnumDeep__Container1__Animal: std::default::Default` is not satisfied
  --> src/enum_deep.rs:13:5
   |
13 |     pub pet1: Box<EnumDeep__Container1__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_deep::EnumDeep__Container1__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_deep::EnumDeep__Container1__Animal>`
   = note: required by `std::default::Default::default`

error[E0277]: the trait bound `enum_deep::EnumDeep__Container1__Container2__Animal: std::default::Default` is not satisfied
  --> src/enum_deep.rs:14:5
   |
14 |     pub pet2: Box<EnumDeep__Container1__Container2__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_deep::EnumDeep__Container1__Container2__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_deep::EnumDeep__Container1__Container2__Animal>`
   = note: required by `std::default::Default::default`

error[E0609]: no field `stream` on type `enum_deep::EnumDeep`
  --> src/enum_deep.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `pet1`, `pet2`

error[E0609]: no field `stream` on type `&mut enum_deep::EnumDeep`
  --> src/enum_deep.rs:38:26
   |
38 |         self.pet1 = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut enum_deep::EnumDeep`
  --> src/enum_deep.rs:39:26
   |
39 |         self.pet2 = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0308]: mismatched types
  --> src/enum_deep.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.pet1 = self.stream.read_u4le()?;
39 | |         self.pet2 = self.stream.read_u4le()?;
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `enum_deep::EnumDeep__Container1`
  --> src/enum_deep.rs:57:11
   |
57 |         s.stream = stream;
   |           ^^^^^^ unknown field

error[E0308]: mismatched types
  --> src/enum_deep.rs:69:27
   |
69 |           where Self: Sized {
   |  ___________________________^
70 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `enum_deep::EnumDeep__Container1__Container2`
  --> src/enum_deep.rs:92:11
   |
92 |         s.stream = stream;
   |           ^^^^^^ unknown field

error[E0308]: mismatched types
   --> src/enum_deep.rs:104:27
    |
104 |           where Self: Sized {
    |  ___________________________^
105 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0277]: the trait bound `enum_fancy::EnumFancy__Animal: std::default::Default` is not satisfied
  --> src/enum_fancy.rs:13:5
   |
13 |     pub pet1: Box<EnumFancy__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_fancy::EnumFancy__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_fancy::EnumFancy__Animal>`
   = note: required by `std::default::Default::default`

error[E0277]: the trait bound `enum_fancy::EnumFancy__Animal: std::default::Default` is not satisfied
  --> src/enum_fancy.rs:14:5
   |
14 |     pub pet2: Box<EnumFancy__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_fancy::EnumFancy__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_fancy::EnumFancy__Animal>`
   = note: required by `std::default::Default::default`

error[E0609]: no field `stream` on type `enum_fancy::EnumFancy`
  --> src/enum_fancy.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `pet1`, `pet2`

error[E0609]: no field `stream` on type `&mut enum_fancy::EnumFancy`
  --> src/enum_fancy.rs:38:26
   |
38 |         self.pet1 = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut enum_fancy::EnumFancy`
  --> src/enum_fancy.rs:39:26
   |
39 |         self.pet2 = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0308]: mismatched types
  --> src/enum_fancy.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.pet1 = self.stream.read_u4le()?;
39 | |         self.pet2 = self.stream.read_u4le()?;
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0277]: the trait bound `enum_for_unknown_id::EnumForUnknownId__Animal: std::default::Default` is not satisfied
  --> src/enum_for_unknown_id.rs:13:5
   |
13 |     pub one: Box<EnumForUnknownId__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_for_unknown_id::EnumForUnknownId__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_for_unknown_id::EnumForUnknownId__Animal>`
   = note: required by `std::default::Default::default`

error[E0609]: no field `stream` on type `enum_for_unknown_id::EnumForUnknownId`
  --> src/enum_for_unknown_id.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`

error[E0609]: no field `stream` on type `&mut enum_for_unknown_id::EnumForUnknownId`
  --> src/enum_for_unknown_id.rs:37:25
   |
37 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/enum_for_unknown_id.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |         self.one = self.stream.read_u1()?;
38 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `enum_if::EnumIf`
  --> src/enum_if.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `op1`, `op2`, `op3`

error[E0609]: no field `stream` on type `&mut enum_if::EnumIf`
  --> src/enum_if.rs:39:57
   |
39 |         self.op1 = Box::new(EnumIf__Operation::new(self.stream, self, _root)?);
   |                                                         ^^^^^^

error[E0308]: mismatched types
  --> src/default_endian_mod.rs:73:87
   |
73 |         self.nestBe = Box::new(DefaultEndianMod__MainObj__SubnestBe::new(self.stream, self, _root)?);
   |                                                                                       ^^^^ expected enum `std::option::Option`, found struct `default_endian_mod::DefaultEndianMod__MainObj`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut default_endian_mod::DefaultEndianMod__MainObj`

error[E0308]: mismatched types
  --> src/default_endian_mod.rs:70:27
   |
70 |           where Self: Sized {
   |  ___________________________^
71 | |         self.one = self.stream.read_s4le()?;
72 | |         self.nest = Box::new(DefaultEndianMod__MainObj__Subnest::new(self.stream, self, _root)?);
73 | |         self.nestBe = Box::new(DefaultEndianMod__MainObj__SubnestBe::new(self.stream, self, _root)?);
74 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `default_endian_mod::DefaultEndianMod__MainObj__Subnest`
  --> src/default_endian_mod.rs:92:11
   |
92 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `two`

error[E0609]: no field `stream` on type `&mut default_endian_mod::DefaultEndianMod__MainObj__Subnest`
   --> src/default_endian_mod.rs:105:25
    |
105 |         self.two = self.stream.read_s4le()?;
    |                         ^^^^^^

error[E0308]: mismatched types
   --> src/default_endian_mod.rs:104:27
    |
104 |           where Self: Sized {
    |  ___________________________^
105 | |         self.two = self.stream.read_s4le()?;
106 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `default_endian_mod::DefaultEndianMod__MainObj__SubnestBe`
   --> src/default_endian_mod.rs:124:11
    |
124 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `two`

error[E0609]: no field `stream` on type `&mut default_endian_mod::DefaultEndianMod__MainObj__SubnestBe`
   --> src/default_endian_mod.rs:137:25
    |
137 |         self.two = self.stream.read_s4be()?;
    |                         ^^^^^^

error[E0308]: mismatched types
   --> src/default_endian_mod.rs:136:27
    |
136 |           where Self: Sized {
    |  ___________________________^
137 | |         self.two = self.stream.read_s4be()?;
138 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `docstrings_docref::DocstringsDocref`
  --> src/docstrings_docref.rs:32:11
   |
32 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`, `three`, `foo`, `parseInst`

error[E0609]: no field `stream` on type `&mut docstrings_docref::DocstringsDocref`
  --> src/docstrings_docref.rs:45:25
   |
45 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut docstrings_docref::DocstringsDocref`
  --> src/docstrings_docref.rs:46:25
   |
46 |         self.two = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut docstrings_docref::DocstringsDocref`
  --> src/docstrings_docref.rs:47:27
   |
47 |         self.three = self.stream.read_u1()?;
   |                           ^^^^^^

error[E0308]: mismatched types
  --> src/docstrings_docref.rs:44:27
   |
44 |           where Self: Sized {
   |  ___________________________^
45 | |         self.one = self.stream.read_u1()?;
46 | |         self.two = self.stream.read_u1()?;
47 | |         self.three = self.stream.read_u1()?;
48 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/enum_if.rs:39:65
   |
39 |         self.op1 = Box::new(EnumIf__Operation::new(self.stream, self, _root)?);
   |                                                                 ^^^^ expected enum `std::option::Option`, found struct `enum_if::EnumIf`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut enum_if::EnumIf`

error[E0609]: no field `stream` on type `&mut enum_if::EnumIf`
  --> src/enum_if.rs:40:57
   |
40 |         self.op2 = Box::new(EnumIf__Operation::new(self.stream, self, _root)?);
   |                                                         ^^^^^^

error[E0308]: mismatched types
  --> src/docstrings_docref.rs:57:20
   |
57 |         self.foo = true;
   |                    ^^^^
   |                    |
   |                    expected enum `std::option::Option`, found bool
   |                    help: try using a variant of the expected type: `Some(true)`
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/docstrings_docref.rs:58:16
   |
58 |         return self.foo;
   |                ^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0609]: no field `stream` on type `&mut docstrings_docref::DocstringsDocref`
  --> src/docstrings_docref.rs:65:25
   |
65 |         let _pos = self.stream.pos();
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut docstrings_docref::DocstringsDocref`
  --> src/docstrings_docref.rs:66:14
   |
66 |         self.stream.seek(0);
   |              ^^^^^^

error[E0609]: no field `stream` on type `&mut docstrings_docref::DocstringsDocref`
  --> src/docstrings_docref.rs:67:31
   |
67 |         self.parseInst = self.stream.read_u1()?;
   |                               ^^^^^^

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/docstrings_docref.rs:67:26
   |
67 |         self.parseInst = self.stream.read_u1()?;
   |                          ^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `u8`
error[E0308]: mismatched types
  --> src/enum_if.rs:40:65
   |
40 |         self.op2 = Box::new(EnumIf__Operation::new(self.stream, self, _root)?);
   |                                                                 ^^^^ expected enum `std::option::Option`, found struct `enum_if::EnumIf`
   |
   |
   = help: the trait `std::ops::Try` is not implemented for `u8`
   = note: required by `std::ops::Try::from_error`

   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut enum_if::EnumIf`

error[E0609]: no field `stream` on type `&mut docstrings_docref::DocstringsDocref`
  --> src/docstrings_docref.rs:68:14
   |
68 |         self.stream.seek(_pos);
   |              ^^^^^^

error[E0308]: mismatched types
  --> src/docstrings_docref.rs:69:16
   |
69 |         return self.parseInst;
   |                ^^^^^^^^^^^^^^ expected u8, found enum `std::option::Option`
   |
   = note: expected type `u8`
              found type `std::option::Option<u8>`

error[E0609]: no field `stream` on type `&mut enum_if::EnumIf`
  --> src/enum_if.rs:41:57
   |
41 |         self.op3 = Box::new(EnumIf__Operation::new(self.stream, self, _root)?);
   |                                                         ^^^^^^

error[E0609]: no field `stream` on type `docstrings::Docstrings`
  --> src/docstrings.rs:30:11
   |
30 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`, `three`

error[E0609]: no field `stream` on type `&mut docstrings::Docstrings`
  --> src/docstrings.rs:43:25
   |
43 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/docstrings.rs:42:27
   |
42 |           where Self: Sized {
   |  ___________________________^
43 | |         self.one = self.stream.read_u1()?;
44 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut docstrings::Docstrings`
  --> src/docstrings.rs:57:25
   |
57 |         let _pos = self.stream.pos();
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut docstrings::Docstrings`
  --> src/docstrings.rs:58:14
   |
58 |         self.stream.seek(0);
   |              ^^^^^^

error[E0609]: no field `stream` on type `&mut docstrings::Docstrings`
  --> src/docstrings.rs:59:25
   |
59 |         self.two = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/docstrings.rs:59:20
   |
59 |         self.two = self.stream.read_u1()?;
   |                    ^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `u8`
   |
   = help: the trait `std::ops::Try` is not implemented for `u8`
   = note: required by `std::ops::Try::from_error`

error[E0609]: no field `stream` on type `&mut docstrings::Docstrings`
  --> src/docstrings.rs:60:14
   |
60 |         self.stream.seek(_pos);
   |              ^^^^^^

error[E0308]: mismatched types
  --> src/docstrings.rs:61:16
   |
61 |         return self.two;
   |                ^^^^^^^^ expected u8, found enum `std::option::Option`
   |
   = note: expected type `u8`
              found type `std::option::Option<u8>`

error[E0308]: mismatched types
  --> src/docstrings.rs:72:22
   |
72 |         self.three = 66;
   |                      ^^
   |                      |
   |                      expected enum `std::option::Option`, found integral variable
   |                      help: try using a variant of the expected type: `Some(66)`
   |
   = note: expected type `std::option::Option<i8>`
              found type `{integer}`

error[E0308]: mismatched types
  --> src/docstrings.rs:73:16
   |
73 |         return self.three;
   |                ^^^^^^^^^^ expected i8, found enum `std::option::Option`
   |
   = note: expected type `i8`
              found type `std::option::Option<i8>`

error[E0308]: mismatched types
  --> src/enum_if.rs:41:65
   |
41 |         self.op3 = Box::new(EnumIf__Operation::new(self.stream, self, _root)?);
   |                                                                 ^^^^ expected enum `std::option::Option`, found struct `enum_if::EnumIf`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut enum_if::EnumIf`

error[E0308]: mismatched types
  --> src/enum_if.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.op1 = Box::new(EnumIf__Operation::new(self.stream, self, _root)?);
40 | |         self.op2 = Box::new(EnumIf__Operation::new(self.stream, self, _root)?);
41 | |         self.op3 = Box::new(EnumIf__Operation::new(self.stream, self, _root)?);
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `docstrings::Docstrings__ComplexSubtype`
   --> src/docstrings.rs:108:11
    |
108 |         s.stream = stream;
    |           ^^^^^^ unknown field

error[E0277]: the trait bound `enum_if::EnumIf__Opcodes: std::default::Default` is not satisfied
  --> src/enum_if.rs:53:5
   |
53 |     pub opcode: Box<EnumIf__Opcodes>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_if::EnumIf__Opcodes`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_if::EnumIf__Opcodes>`
   = note: required by `std::default::Default::default`

error[E0609]: no field `stream` on type `enum_if::EnumIf__Operation`
  --> src/enum_if.rs:66:11
   |
66 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `opcode`, `argTuple`, `argStr`

error[E0308]: mismatched types
   --> src/docstrings.rs:120:27
    |
120 |           where Self: Sized {
    |  ___________________________^
121 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0277]: the trait bound `enum_0::Enum0__Animal: std::default::Default` is not satisfied
  --> src/enum_0.rs:13:5
   |
13 |     pub pet1: Box<Enum0__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_0::Enum0__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_0::Enum0__Animal>`
   = note: required by `std::default::Default::default`

error[E0277]: the trait bound `enum_0::Enum0__Animal: std::default::Default` is not satisfied
  --> src/enum_0.rs:14:5
   |
14 |     pub pet2: Box<Enum0__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_0::Enum0__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_0::Enum0__Animal>`
   = note: required by `std::default::Default::default`

error[E0609]: no field `stream` on type `enum_0::Enum0`
  --> src/enum_0.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `pet1`, `pet2`

error[E0609]: no field `stream` on type `&mut enum_if::EnumIf__Operation`
  --> src/enum_if.rs:79:28
   |
79 |         self.opcode = self.stream.read_u1()?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut enum_0::Enum0`
  --> src/enum_0.rs:38:26
   |
38 |         self.pet1 = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut enum_0::Enum0`
  --> src/enum_0.rs:39:26
   |
39 |         self.pet2 = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0308]: mismatched types
  --> src/enum_0.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.pet1 = self.stream.read_u4le()?;
39 | |         self.pet2 = self.stream.read_u4le()?;
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0369]: binary operation `==` cannot be applied to type `std::boxed::Box<enum_if::EnumIf__Opcodes>`
  --> src/enum_if.rs:80:12
   |
80 |         if self.opcode == EnumIf__Opcodes::A_TUPLE {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: an implementation of `std::cmp::PartialEq` might be missing for `std::boxed::Box<enum_if::EnumIf__Opcodes>`

error[E0609]: no field `stream` on type `&mut enum_if::EnumIf__Operation`
  --> src/enum_if.rs:81:65
   |
81 |             self.argTuple = Box::new(EnumIf__ArgTuple::new(self.stream, self, _root)?);
   |                                                                 ^^^^^^

error[E0609]: no field `stream` on type `enum_1::Enum1`
  --> src/enum_1.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `main`

error[E0609]: no field `stream` on type `&mut enum_1::Enum1`
  --> src/enum_1.rs:37:55
   |
37 |         self.main = Box::new(Enum1__MainObj::new(self.stream, self, _root)?);
   |                                                       ^^^^^^

error[E0308]: mismatched types
  --> src/enum_1.rs:37:63
   |
37 |         self.main = Box::new(Enum1__MainObj::new(self.stream, self, _root)?);
   |                                                               ^^^^ expected enum `std::option::Option`, found struct `enum_1::Enum1`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut enum_1::Enum1`

error[E0308]: mismatched types
  --> src/enum_1.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |         self.main = Box::new(Enum1__MainObj::new(self.stream, self, _root)?);
38 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `enum_1::Enum1__MainObj`
  --> src/enum_1.rs:56:11
   |
56 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `submain`

error[E0609]: no field `stream` on type `&mut enum_1::Enum1__MainObj`
  --> src/enum_1.rs:69:70
   |
69 |         self.submain = Box::new(Enum1__MainObj__SubmainObj::new(self.stream, self, _root)?);
   |                                                                      ^^^^^^

error[E0308]: mismatched types
  --> src/enum_if.rs:81:73
   |
81 |             self.argTuple = Box::new(EnumIf__ArgTuple::new(self.stream, self, _root)?);
   |                                                                         ^^^^ expected enum `std::option::Option`, found struct `enum_if::EnumIf__Operation`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut enum_if::EnumIf__Operation`

error[E0369]: binary operation `==` cannot be applied to type `std::boxed::Box<enum_if::EnumIf__Opcodes>`
  --> src/enum_if.rs:83:12
   |
83 |         if self.opcode == EnumIf__Opcodes::A_STRING {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: an implementation of `std::cmp::PartialEq` might be missing for `std::boxed::Box<enum_if::EnumIf__Opcodes>`

error[E0609]: no field `stream` on type `&mut enum_if::EnumIf__Operation`
  --> src/enum_if.rs:84:61
   |
84 |             self.argStr = Box::new(EnumIf__ArgStr::new(self.stream, self, _root)?);
   |                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/enum_1.rs:69:78
   |
69 |         self.submain = Box::new(Enum1__MainObj__SubmainObj::new(self.stream, self, _root)?);
   |                                                                              ^^^^ expected enum `std::option::Option`, found struct `enum_1::Enum1__MainObj`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut enum_1::Enum1__MainObj`

error[E0308]: mismatched types
  --> src/enum_1.rs:68:27
   |
68 |           where Self: Sized {
   |  ___________________________^
69 | |         self.submain = Box::new(Enum1__MainObj__SubmainObj::new(self.stream, self, _root)?);
70 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0277]: the trait bound `enum_1::Enum1__MainObj__Animal: std::default::Default` is not satisfied
  --> src/enum_1.rs:82:5
   |
82 |     pub pet1: Box<Enum1__MainObj__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_1::Enum1__MainObj__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_1::Enum1__MainObj__Animal>`
   = note: required by `std::default::Default::default`

error[E0277]: the trait bound `enum_1::Enum1__MainObj__Animal: std::default::Default` is not satisfied
  --> src/enum_1.rs:83:5
   |
83 |     pub pet2: Box<Enum1__MainObj__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_1::Enum1__MainObj__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_1::Enum1__MainObj__Animal>`
   = note: required by `std::default::Default::default`

error[E0609]: no field `stream` on type `enum_1::Enum1__MainObj__SubmainObj`
  --> src/enum_1.rs:94:11
   |
94 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `pet1`, `pet2`

error[E0609]: no field `stream` on type `&mut enum_1::Enum1__MainObj__SubmainObj`
   --> src/enum_1.rs:107:26
    |
107 |         self.pet1 = self.stream.read_u4le()?;
    |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut enum_1::Enum1__MainObj__SubmainObj`
   --> src/enum_1.rs:108:26
    |
108 |         self.pet2 = self.stream.read_u4le()?;
    |                          ^^^^^^

error[E0308]: mismatched types
   --> src/enum_1.rs:106:27
    |
106 |           where Self: Sized {
    |  ___________________________^
107 | |         self.pet1 = self.stream.read_u4le()?;
108 | |         self.pet2 = self.stream.read_u4le()?;
109 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0277]: the trait bound `enum_deep::EnumDeep__Container1__Animal: std::default::Default` is not satisfied
  --> src/enum_deep.rs:13:5
   |
13 |     pub pet1: Box<EnumDeep__Container1__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_deep::EnumDeep__Container1__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_deep::EnumDeep__Container1__Animal>`
   = note: required by `std::default::Default::default`

error[E0277]: the trait bound `enum_deep::EnumDeep__Container1__Container2__Animal: std::default::Default` is not satisfied
  --> src/enum_deep.rs:14:5
   |
14 |     pub pet2: Box<EnumDeep__Container1__Container2__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_deep::EnumDeep__Container1__Container2__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_deep::EnumDeep__Container1__Container2__Animal>`
   = note: required by `std::default::Default::default`

error[E0609]: no field `stream` on type `enum_deep::EnumDeep`
  --> src/enum_deep.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `pet1`, `pet2`

error[E0609]: no field `stream` on type `&mut enum_deep::EnumDeep`
  --> src/enum_deep.rs:38:26
   |
38 |         self.pet1 = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut enum_deep::EnumDeep`
  --> src/enum_deep.rs:39:26
   |
39 |         self.pet2 = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0308]: mismatched types
  --> src/enum_deep.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.pet1 = self.stream.read_u4le()?;
39 | |         self.pet2 = self.stream.read_u4le()?;
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `enum_deep::EnumDeep__Container1`
  --> src/enum_deep.rs:57:11
   |
57 |         s.stream = stream;
   |           ^^^^^^ unknown field

error[E0308]: mismatched types
  --> src/enum_deep.rs:69:27
   |
69 |           where Self: Sized {
   |  ___________________________^
70 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `enum_deep::EnumDeep__Container1__Container2`
  --> src/enum_deep.rs:92:11
   |
92 |         s.stream = stream;
   |           ^^^^^^ unknown field

error[E0308]: mismatched types
   --> src/enum_deep.rs:104:27
    |
104 |           where Self: Sized {
    |  ___________________________^
105 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0277]: the trait bound `enum_fancy::EnumFancy__Animal: std::default::Default` is not satisfied
  --> src/enum_fancy.rs:13:5
   |
13 |     pub pet1: Box<EnumFancy__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_fancy::EnumFancy__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_fancy::EnumFancy__Animal>`
   = note: required by `std::default::Default::default`

error[E0277]: the trait bound `enum_fancy::EnumFancy__Animal: std::default::Default` is not satisfied
  --> src/enum_fancy.rs:14:5
   |
14 |     pub pet2: Box<EnumFancy__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_fancy::EnumFancy__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_fancy::EnumFancy__Animal>`
   = note: required by `std::default::Default::default`

error[E0609]: no field `stream` on type `enum_fancy::EnumFancy`
  --> src/enum_fancy.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `pet1`, `pet2`

error[E0609]: no field `stream` on type `&mut enum_fancy::EnumFancy`
  --> src/enum_fancy.rs:38:26
   |
38 |         self.pet1 = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut enum_fancy::EnumFancy`
  --> src/enum_fancy.rs:39:26
   |
39 |         self.pet2 = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0308]: mismatched types
  --> src/enum_fancy.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.pet1 = self.stream.read_u4le()?;
39 | |         self.pet2 = self.stream.read_u4le()?;
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0277]: the trait bound `enum_for_unknown_id::EnumForUnknownId__Animal: std::default::Default` is not satisfied
  --> src/enum_for_unknown_id.rs:13:5
   |
13 |     pub one: Box<EnumForUnknownId__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_for_unknown_id::EnumForUnknownId__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_for_unknown_id::EnumForUnknownId__Animal>`
   = note: required by `std::default::Default::default`

error[E0609]: no field `stream` on type `enum_for_unknown_id::EnumForUnknownId`
  --> src/enum_for_unknown_id.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`

error[E0609]: no field `stream` on type `&mut enum_for_unknown_id::EnumForUnknownId`
  --> src/enum_for_unknown_id.rs:37:25
   |
37 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/enum_for_unknown_id.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |         self.one = self.stream.read_u1()?;
38 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `enum_if::EnumIf`
  --> src/enum_if.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `op1`, `op2`, `op3`

error[E0609]: no field `stream` on type `&mut enum_if::EnumIf`
  --> src/enum_if.rs:39:57
   |
39 |         self.op1 = Box::new(EnumIf__Operation::new(self.stream, self, _root)?);
   |                                                         ^^^^^^

error[E0308]: mismatched types
  --> src/enum_if.rs:84:69
   |
84 |             self.argStr = Box::new(EnumIf__ArgStr::new(self.stream, self, _root)?);
   |                                                                     ^^^^ expected enum `std::option::Option`, found struct `enum_if::EnumIf__Operation`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut enum_if::EnumIf__Operation`

error[E0308]: mismatched types
  --> src/enum_if.rs:83:53
   |
83 |           if self.opcode == EnumIf__Opcodes::A_STRING {
   |  _____________________________________________________^
84 | |             self.argStr = Box::new(EnumIf__ArgStr::new(self.stream, self, _root)?);
85 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `enum_if::EnumIf__ArgTuple`
   --> src/enum_if.rs:105:11
    |
105 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `num1`, `num2`

error[E0609]: no field `stream` on type `&mut enum_if::EnumIf__ArgTuple`
   --> src/enum_if.rs:118:26
    |
118 |         self.num1 = self.stream.read_u1()?;
    |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut enum_if::EnumIf__ArgTuple`
   --> src/enum_if.rs:119:26
    |
119 |         self.num2 = self.stream.read_u1()?;
    |                          ^^^^^^

error[E0308]: mismatched types
   --> src/enum_if.rs:117:27
    |
117 |           where Self: Sized {
    |  ___________________________^
118 | |         self.num1 = self.stream.read_u1()?;
119 | |         self.num2 = self.stream.read_u1()?;
120 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `enum_if::EnumIf__ArgStr`
   --> src/enum_if.rs:139:11
    |
139 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `len`, `str`

error[E0609]: no field `stream` on type `&mut enum_if::EnumIf__ArgStr`
   --> src/enum_if.rs:152:25
    |
152 |         self.len = self.stream.read_u1()?;
    |                         ^^^^^^

warning: unreachable expression
   --> src/enum_if.rs:153:9
    |
153 |         self.str = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: #[warn(unreachable_code)] on by default

error[E0277]: the trait bound `enum_negative::EnumNegative__Constants: std::default::Default` is not satisfied
  --> src/enum_negative.rs:13:5
   |
13 |     pub f1: Box<EnumNegative__Constants>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_negative::EnumNegative__Constants`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_negative::EnumNegative__Constants>`
   = note: required by `std::default::Default::default`

error[E0277]: the trait bound `enum_negative::EnumNegative__Constants: std::default::Default` is not satisfied
  --> src/enum_negative.rs:14:5
   |
14 |     pub f2: Box<EnumNegative__Constants>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_negative::EnumNegative__Constants`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_negative::EnumNegative__Constants>`
   = note: required by `std::default::Default::default`

error[E0609]: no field `stream` on type `enum_negative::EnumNegative`
  --> src/enum_negative.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `f1`, `f2`

error[E0609]: no field `stream` on type `&mut enum_negative::EnumNegative`
  --> src/enum_negative.rs:38:24
   |
38 |         self.f1 = self.stream.read_s1()?;
   |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut enum_negative::EnumNegative`
  --> src/enum_negative.rs:39:24
   |
39 |         self.f2 = self.stream.read_s1()?;
   |                        ^^^^^^

error[E0308]: mismatched types
  --> src/enum_negative.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.f1 = self.stream.read_s1()?;
39 | |         self.f2 = self.stream.read_s1()?;
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0277]: the trait bound `enum_of_value_inst::EnumOfValueInst__Animal: std::default::Default` is not satisfied
  --> src/enum_of_value_inst.rs:13:5
   |
13 |     pub pet1: Box<EnumOfValueInst__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_of_value_inst::EnumOfValueInst__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_of_value_inst::EnumOfValueInst__Animal>`
   = note: required by `std::default::Default::default`

error[E0277]: the trait bound `enum_of_value_inst::EnumOfValueInst__Animal: std::default::Default` is not satisfied
  --> src/enum_of_value_inst.rs:14:5
   |
14 |     pub pet2: Box<EnumOfValueInst__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_of_value_inst::EnumOfValueInst__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_of_value_inst::EnumOfValueInst__Animal>`
   = note: required by `std::default::Default::default`

error[E0609]: no field `stream` on type `enum_of_value_inst::EnumOfValueInst`
  --> src/enum_of_value_inst.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `pet1`, `pet2`, `pet3`, `pet4`

error[E0609]: no field `stream` on type `&mut enum_of_value_inst::EnumOfValueInst`
  --> src/enum_of_value_inst.rs:40:26
   |
40 |         self.pet1 = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut enum_of_value_inst::EnumOfValueInst`
  --> src/enum_of_value_inst.rs:41:26
   |
41 |         self.pet2 = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0308]: mismatched types
  --> src/enum_of_value_inst.rs:39:27
   |
39 |           where Self: Sized {
   |  ___________________________^
40 | |         self.pet1 = self.stream.read_u4le()?;
41 | |         self.pet2 = self.stream.read_u4le()?;
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `pet_1` on type `&mut enum_of_value_inst::EnumOfValueInst`
  --> src/enum_of_value_inst.rs:51:29
   |
51 |         self.pet3 = if self.pet_1 == EnumOfValueInst__Animal::CAT { 4 } else { 12};
   |                             ^^^^^

error[E0308]: mismatched types
  --> src/enum_of_value_inst.rs:51:69
   |
51 |         self.pet3 = if self.pet_1 == EnumOfValueInst__Animal::CAT { 4 } else { 12};
   |                                                                     ^ expected enum `std::option::Option`, found integral variable
   |
   = note: expected type `std::option::Option<std::boxed::Box<enum_of_value_inst::EnumOfValueInst__Animal>>`
              found type `{integer}`

error[E0308]: mismatched types
  --> src/enum_of_value_inst.rs:51:80
   |
51 |         self.pet3 = if self.pet_1 == EnumOfValueInst__Animal::CAT { 4 } else { 12};
   |                                                                                ^^ expected enum `std::option::Option`, found integral variable
   |
   = note: expected type `std::option::Option<std::boxed::Box<enum_of_value_inst::EnumOfValueInst__Animal>>`
              found type `{integer}`

error[E0308]: mismatched types
  --> src/enum_of_value_inst.rs:52:16
   |
52 |         return self.pet3;
   |                ^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `pet_1` on type `&mut enum_of_value_inst::EnumOfValueInst`
  --> src/enum_of_value_inst.rs:59:29
   |
59 |         self.pet4 = if self.pet_1 == EnumOfValueInst__Animal::CAT { EnumOfValueInst__Animal::DOG } else { EnumOfValueInst__Animal::CHICKEN};
   |                             ^^^^^

error[E0308]: mismatched types
  --> src/enum_of_value_inst.rs:59:69
   |
59 |         self.pet4 = if self.pet_1 == EnumOfValueInst__Animal::CAT { EnumOfValueInst__Animal::DOG } else { EnumOfValueInst__Animal::CHICKEN};
   |                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found enum `enum_of_value_inst::EnumOfValueInst__Animal`
   |
   = note: expected type `std::option::Option<std::boxed::Box<enum_of_value_inst::EnumOfValueInst__Animal>>`
              found type `enum_of_value_inst::EnumOfValueInst__Animal`

error[E0308]: mismatched types
  --> src/enum_of_value_inst.rs:59:107
   |
59 |         self.pet4 = if self.pet_1 == EnumOfValueInst__Animal::CAT { EnumOfValueInst__Animal::DOG } else { EnumOfValueInst__Animal::CHICKEN};
   |                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found enum `enum_of_value_inst::EnumOfValueInst__Animal`
   |
   = note: expected type `std::option::Option<std::boxed::Box<enum_of_value_inst::EnumOfValueInst__Animal>>`
              found type `enum_of_value_inst::EnumOfValueInst__Animal`

error[E0308]: mismatched types
  --> src/enum_of_value_inst.rs:60:16
   |
60 |         return self.pet4;
   |                ^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0277]: the trait bound `enum_to_i::EnumToI__Animal: std::default::Default` is not satisfied
  --> src/enum_to_i.rs:13:5
   |
13 |     pub pet1: Box<EnumToI__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_to_i::EnumToI__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_to_i::EnumToI__Animal>`
   = note: required by `std::default::Default::default`

error[E0277]: the trait bound `enum_to_i::EnumToI__Animal: std::default::Default` is not satisfied
  --> src/enum_to_i.rs:14:5
   |
14 |     pub pet2: Box<EnumToI__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_to_i::EnumToI__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_to_i::EnumToI__Animal>`
   = note: required by `std::default::Default::default`

error[E0609]: no field `stream` on type `enum_to_i::EnumToI`
  --> src/enum_to_i.rs:28:11
   |
28 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `pet1`, `pet2`, `pet1I`, `pet1Mod`, `oneLtTwo`

error[E0609]: no field `stream` on type `&mut enum_to_i::EnumToI`
  --> src/enum_to_i.rs:41:26
   |
41 |         self.pet1 = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0308]: mismatched types
  --> src/enum_if.rs:39:65
   |
39 |         self.op1 = Box::new(EnumIf__Operation::new(self.stream, self, _root)?);
   |                                                                 ^^^^ expected enum `std::option::Option`, found struct `enum_if::EnumIf`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut enum_if::EnumIf`

error[E0609]: no field `stream` on type `&mut enum_to_i::EnumToI`
  --> src/enum_to_i.rs:42:26
   |
42 |         self.pet2 = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0308]: mismatched types
  --> src/enum_to_i.rs:40:27
   |
40 |           where Self: Sized {
   |  ___________________________^
41 | |         self.pet1 = self.stream.read_u4le()?;
42 | |         self.pet2 = self.stream.read_u4le()?;
43 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut enum_if::EnumIf`
  --> src/enum_if.rs:40:57
   |
40 |         self.op2 = Box::new(EnumIf__Operation::new(self.stream, self, _root)?);
   |                                                         ^^^^^^

error[E0609]: no field `pet_1` on type `&mut enum_to_i::EnumToI`
  --> src/enum_to_i.rs:52:27
   |
52 |         self.pet1I = self.pet_1;
   |                           ^^^^^

error[E0308]: mismatched types
  --> src/enum_to_i.rs:53:16
   |
53 |         return self.pet1I;
   |                ^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0609]: no field `pet_1` on type `&mut enum_to_i::EnumToI`
  --> src/enum_to_i.rs:60:30
   |
60 |         self.pet1Mod = (self.pet_1 + 32768);
   |                              ^^^^^

error[E0308]: mismatched types
  --> src/enum_to_i.rs:61:16
   |
61 |         return self.pet1Mod;
   |                ^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0609]: no field `pet_1` on type `&mut enum_to_i::EnumToI`
  --> src/enum_to_i.rs:68:30
   |
68 |         self.oneLtTwo = self.pet_1 < self.pet_2;
   |                              ^^^^^

error[E0609]: no field `pet_2` on type `&mut enum_to_i::EnumToI`
  --> src/enum_to_i.rs:68:43
   |
68 |         self.oneLtTwo = self.pet_1 < self.pet_2;
   |                                           ^^^^^

error[E0308]: mismatched types
  --> src/enum_if.rs:40:65
   |
40 |         self.op2 = Box::new(EnumIf__Operation::new(self.stream, self, _root)?);
   |                                                                 ^^^^ expected enum `std::option::Option`, found struct `enum_if::EnumIf`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut enum_if::EnumIf`

error[E0609]: no field `stream` on type `&mut enum_if::EnumIf`
  --> src/enum_if.rs:41:57
   |
41 |         self.op3 = Box::new(EnumIf__Operation::new(self.stream, self, _root)?);
   |                                                         ^^^^^^

error[E0308]: mismatched types
  --> src/enum_to_i.rs:68:25
   |
68 |         self.oneLtTwo = self.pet_1 < self.pet_2;
   |                         ^^^^^^^^^^^^^^^^^^^^^^^
   |                         |
   |                         expected enum `std::option::Option`, found bool
   |                         help: try using a variant of the expected type: `Some(self.pet_1 < self.pet_2)`
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/enum_to_i.rs:69:16
   |
69 |         return self.oneLtTwo;
   |                ^^^^^^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0609]: no field `stream` on type `eof_exception_bytes::EofExceptionBytes`
  --> src/eof_exception_bytes.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `buf`

error[E0609]: no field `stream` on type `&mut eof_exception_bytes::EofExceptionBytes`
  --> src/eof_exception_bytes.rs:37:25
   |
37 |         self.buf = self.stream.read_bytes(13)?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/eof_exception_bytes.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |         self.buf = self.stream.read_bytes(13)?;
38 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `eof_exception_u4::EofExceptionU4`
  --> src/eof_exception_u4.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `prebuf`, `failInt`

error[E0609]: no field `stream` on type `&mut eof_exception_u4::EofExceptionU4`
  --> src/eof_exception_u4.rs:38:28
   |
38 |         self.prebuf = self.stream.read_bytes(9)?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut eof_exception_u4::EofExceptionU4`
  --> src/eof_exception_u4.rs:39:29
   |
39 |         self.failInt = self.stream.read_u4le()?;
   |                             ^^^^^^

error[E0308]: mismatched types
  --> src/eof_exception_u4.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.prebuf = self.stream.read_bytes(9)?;
39 | |         self.failInt = self.stream.read_u4le()?;
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `expr_0::Expr0`
  --> src/expr_0.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `lenOf1`, `mustBeF7`, `mustBeAbc123`

error[E0609]: no field `stream` on type `&mut expr_0::Expr0`
  --> src/expr_0.rs:39:28
   |
39 |         self.lenOf1 = self.stream.read_u2le()?;
   |                            ^^^^^^

error[E0308]: mismatched types
  --> src/expr_0.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.lenOf1 = self.stream.read_u2le()?;
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/enum_if.rs:41:65
   |
41 |         self.op3 = Box::new(EnumIf__Operation::new(self.stream, self, _root)?);
   |                                                                 ^^^^ expected enum `std::option::Option`, found struct `enum_if::EnumIf`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut enum_if::EnumIf`

error[E0308]: mismatched types
  --> src/enum_if.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.op1 = Box::new(EnumIf__Operation::new(self.stream, self, _root)?);
40 | |         self.op2 = Box::new(EnumIf__Operation::new(self.stream, self, _root)?);
41 | |         self.op3 = Box::new(EnumIf__Operation::new(self.stream, self, _root)?);
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0277]: the trait bound `enum_if::EnumIf__Opcodes: std::default::Default` is not satisfied
  --> src/enum_if.rs:53:5
   |
53 |     pub opcode: Box<EnumIf__Opcodes>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_if::EnumIf__Opcodes`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_if::EnumIf__Opcodes>`
   = note: required by `std::default::Default::default`

error[E0609]: no field `stream` on type `enum_if::EnumIf__Operation`
  --> src/enum_if.rs:66:11
   |
66 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `opcode`, `argTuple`, `argStr`

error[E0609]: no field `stream` on type `&mut enum_if::EnumIf__Operation`
  --> src/enum_if.rs:79:28
   |
79 |         self.opcode = self.stream.read_u1()?;
   |                            ^^^^^^

error[E0369]: binary operation `==` cannot be applied to type `std::boxed::Box<enum_if::EnumIf__Opcodes>`
  --> src/enum_if.rs:80:12
   |
80 |         if self.opcode == EnumIf__Opcodes::A_TUPLE {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: an implementation of `std::cmp::PartialEq` might be missing for `std::boxed::Box<enum_if::EnumIf__Opcodes>`

error[E0308]: mismatched types
  --> src/expr_0.rs:49:25
   |
49 |         self.mustBeF7 = (7 + 240);
   |                         ^^^^^^^^^
   |                         |
   |                         expected enum `std::option::Option`, found integral variable
   |                         help: try using a variant of the expected type: `Some(7 + 240)`
   |
   = note: expected type `std::option::Option<i32>`
              found type `{integer}`

error[E0609]: no field `stream` on type `&mut enum_if::EnumIf__Operation`
  --> src/enum_if.rs:81:65
   |
81 |             self.argTuple = Box::new(EnumIf__ArgTuple::new(self.stream, self, _root)?);
   |                                                                 ^^^^^^

error[E0308]: mismatched types
  --> src/expr_0.rs:50:16
   |
50 |         return self.mustBeF7;
   |                ^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0308]: mismatched types
  --> src/enum_if.rs:81:73
   |
81 |             self.argTuple = Box::new(EnumIf__ArgTuple::new(self.stream, self, _root)?);
   |                                                                         ^^^^ expected enum `std::option::Option`, found struct `enum_if::EnumIf__Operation`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut enum_if::EnumIf__Operation`

error[E0369]: binary operation `==` cannot be applied to type `std::boxed::Box<enum_if::EnumIf__Opcodes>`
  --> src/enum_if.rs:83:12
   |
83 |         if self.opcode == EnumIf__Opcodes::A_STRING {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: an implementation of `std::cmp::PartialEq` might be missing for `std::boxed::Box<enum_if::EnumIf__Opcodes>`

error[E0308]: mismatched types
  --> src/expr_0.rs:57:29
   |
57 |         self.mustBeAbc123 = format!("{}{}", "abc", "123");
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::string::String`
   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `std::string::String`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)
help: try using a variant of the expected type
   |
2  | Some(::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["", ""],
3  |                                                    &match (&"abc", &"123") {
4  |                                                         (arg0, arg1) =>
5  |                                                         [<::fmt::ArgumentV1>::new(arg0,
6  |                                                                                   ::fmt::Display::fmt),
7  |                                                          <::fmt::ArgumentV1>::new(arg1,
 ...

error[E0609]: no field `stream` on type `&mut enum_if::EnumIf__Operation`
  --> src/enum_if.rs:84:61
   |
84 |             self.argStr = Box::new(EnumIf__ArgStr::new(self.stream, self, _root)?);
   |                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/expr_0.rs:58:16
   |
58 |         return self.mustBeAbc123;
   |                ^^^^^^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0609]: no field `stream` on type `expr_1::Expr1`
  --> src/expr_1.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `lenOf1`, `str1`, `lenOf1Mod`, `str1Len`

error[E0609]: no field `stream` on type `&mut expr_1::Expr1`
  --> src/expr_1.rs:40:28
   |
40 |         self.lenOf1 = self.stream.read_u2le()?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_1::Expr1`
  --> src/expr_1.rs:41:50
   |
41 |         self.str1 = String::from_utf8_lossy(self.stream.read_bytes(self.len_of_1_mod)?);
   |                                                  ^^^^^^

error[E0609]: no field `len_of_1_mod` on type `&mut expr_1::Expr1`
  --> src/expr_1.rs:41:73
   |
41 |         self.str1 = String::from_utf8_lossy(self.stream.read_bytes(self.len_of_1_mod)?);
   |                                                                         ^^^^^^^^^^^^

error[E0308]: mismatched types
  --> src/enum_if.rs:84:69
   |
84 |             self.argStr = Box::new(EnumIf__ArgStr::new(self.stream, self, _root)?);
   |                                                                     ^^^^ expected enum `std::option::Option`, found struct `enum_if::EnumIf__Operation`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut enum_if::EnumIf__Operation`

error[E0308]: mismatched types
  --> src/enum_if.rs:83:53
   |
83 |           if self.opcode == EnumIf__Opcodes::A_STRING {
   |  _____________________________________________________^
84 | |             self.argStr = Box::new(EnumIf__ArgStr::new(self.stream, self, _root)?);
85 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `enum_if::EnumIf__ArgTuple`
   --> src/enum_if.rs:105:11
    |
105 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `num1`, `num2`

error[E0609]: no field `stream` on type `&mut enum_if::EnumIf__ArgTuple`
   --> src/enum_if.rs:118:26
    |
118 |         self.num1 = self.stream.read_u1()?;
    |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut enum_if::EnumIf__ArgTuple`
   --> src/enum_if.rs:119:26
    |
119 |         self.num2 = self.stream.read_u1()?;
    |                          ^^^^^^

error[E0308]: mismatched types
   --> src/enum_if.rs:117:27
    |
117 |           where Self: Sized {
    |  ___________________________^
118 | |         self.num1 = self.stream.read_u1()?;
119 | |         self.num2 = self.stream.read_u1()?;
120 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `enum_if::EnumIf__ArgStr`
   --> src/enum_if.rs:139:11
    |
139 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `len`, `str`

error[E0609]: no field `stream` on type `&mut enum_if::EnumIf__ArgStr`
   --> src/enum_if.rs:152:25
    |
152 |         self.len = self.stream.read_u1()?;
    |                         ^^^^^^

warning: unreachable expression
   --> src/enum_if.rs:153:9
    |
153 |         self.str = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: #[warn(unreachable_code)] on by default

error[E0308]: mismatched types
  --> src/expr_1.rs:41:21
   |
41 |         self.str1 = String::from_utf8_lossy(self.stream.read_bytes(self.len_of_1_mod)?);
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                     |
   |                     expected struct `std::string::String`, found enum `std::borrow::Cow`
   |                     help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes(self.len_of_1_mod)?).to_string()`
   |
   = note: expected type `std::string::String`
              found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
  --> src/expr_1.rs:39:27
   |
39 |           where Self: Sized {
   |  ___________________________^
40 | |         self.lenOf1 = self.stream.read_u2le()?;
41 | |         self.str1 = String::from_utf8_lossy(self.stream.read_bytes(self.len_of_1_mod)?);
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0277]: the trait bound `enum_negative::EnumNegative__Constants: std::default::Default` is not satisfied
  --> src/enum_negative.rs:13:5
   |
13 |     pub f1: Box<EnumNegative__Constants>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_negative::EnumNegative__Constants`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_negative::EnumNegative__Constants>`
   = note: required by `std::default::Default::default`

error[E0277]: the trait bound `enum_negative::EnumNegative__Constants: std::default::Default` is not satisfied
  --> src/enum_negative.rs:14:5
   |
14 |     pub f2: Box<EnumNegative__Constants>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_negative::EnumNegative__Constants`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_negative::EnumNegative__Constants>`
   = note: required by `std::default::Default::default`

error[E0609]: no field `len_of_1` on type `&mut expr_1::Expr1`
  --> src/expr_1.rs:51:32
   |
51 |         self.lenOf1Mod = (self.len_of_1 - 2);
   |                                ^^^^^^^^

error[E0609]: no field `stream` on type `enum_negative::EnumNegative`
  --> src/enum_negative.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `f1`, `f2`

error[E0308]: mismatched types
  --> src/expr_1.rs:52:16
   |
52 |         return self.lenOf1Mod;
   |                ^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `&mut enum_negative::EnumNegative`
  --> src/enum_negative.rs:38:24
   |
38 |         self.f1 = self.stream.read_s1()?;
   |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut enum_negative::EnumNegative`
  --> src/enum_negative.rs:39:24
   |
39 |         self.f2 = self.stream.read_s1()?;
   |                        ^^^^^^

error[E0308]: mismatched types
  --> src/enum_negative.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.f1 = self.stream.read_s1()?;
39 | |         self.f2 = self.stream.read_s1()?;
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0277]: the trait bound `enum_of_value_inst::EnumOfValueInst__Animal: std::default::Default` is not satisfied
  --> src/enum_of_value_inst.rs:13:5
   |
13 |     pub pet1: Box<EnumOfValueInst__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_of_value_inst::EnumOfValueInst__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_of_value_inst::EnumOfValueInst__Animal>`
   = note: required by `std::default::Default::default`

error[E0277]: the trait bound `enum_of_value_inst::EnumOfValueInst__Animal: std::default::Default` is not satisfied
  --> src/enum_of_value_inst.rs:14:5
   |
14 |     pub pet2: Box<EnumOfValueInst__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_of_value_inst::EnumOfValueInst__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_of_value_inst::EnumOfValueInst__Animal>`
   = note: required by `std::default::Default::default`

error[E0609]: no field `stream` on type `enum_of_value_inst::EnumOfValueInst`
  --> src/enum_of_value_inst.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `pet1`, `pet2`, `pet3`, `pet4`

error[E0609]: no field `stream` on type `&mut enum_of_value_inst::EnumOfValueInst`
  --> src/enum_of_value_inst.rs:40:26
   |
40 |         self.pet1 = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut enum_of_value_inst::EnumOfValueInst`
  --> src/enum_of_value_inst.rs:41:26
   |
41 |         self.pet2 = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0308]: mismatched types
  --> src/enum_of_value_inst.rs:39:27
   |
39 |           where Self: Sized {
   |  ___________________________^
40 | |         self.pet1 = self.stream.read_u4le()?;
41 | |         self.pet2 = self.stream.read_u4le()?;
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `pet_1` on type `&mut enum_of_value_inst::EnumOfValueInst`
  --> src/enum_of_value_inst.rs:51:29
   |
51 |         self.pet3 = if self.pet_1 == EnumOfValueInst__Animal::CAT { 4 } else { 12};
   |                             ^^^^^

error[E0308]: mismatched types
  --> src/enum_of_value_inst.rs:51:69
   |
51 |         self.pet3 = if self.pet_1 == EnumOfValueInst__Animal::CAT { 4 } else { 12};
   |                                                                     ^ expected enum `std::option::Option`, found integral variable
   |
   = note: expected type `std::option::Option<std::boxed::Box<enum_of_value_inst::EnumOfValueInst__Animal>>`
              found type `{integer}`

error[E0308]: mismatched types
  --> src/enum_of_value_inst.rs:51:80
   |
51 |         self.pet3 = if self.pet_1 == EnumOfValueInst__Animal::CAT { 4 } else { 12};
   |                                                                                ^^ expected enum `std::option::Option`, found integral variable
   |
   = note: expected type `std::option::Option<std::boxed::Box<enum_of_value_inst::EnumOfValueInst__Animal>>`
              found type `{integer}`

error[E0308]: mismatched types
  --> src/enum_of_value_inst.rs:52:16
   |
52 |         return self.pet3;
   |                ^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `pet_1` on type `&mut enum_of_value_inst::EnumOfValueInst`
  --> src/enum_of_value_inst.rs:59:29
   |
59 |         self.pet4 = if self.pet_1 == EnumOfValueInst__Animal::CAT { EnumOfValueInst__Animal::DOG } else { EnumOfValueInst__Animal::CHICKEN};
   |                             ^^^^^

error[E0308]: mismatched types
  --> src/enum_of_value_inst.rs:59:69
   |
59 |         self.pet4 = if self.pet_1 == EnumOfValueInst__Animal::CAT { EnumOfValueInst__Animal::DOG } else { EnumOfValueInst__Animal::CHICKEN};
   |                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found enum `enum_of_value_inst::EnumOfValueInst__Animal`
   |
   = note: expected type `std::option::Option<std::boxed::Box<enum_of_value_inst::EnumOfValueInst__Animal>>`
              found type `enum_of_value_inst::EnumOfValueInst__Animal`

error[E0308]: mismatched types
  --> src/enum_of_value_inst.rs:59:107
   |
59 |         self.pet4 = if self.pet_1 == EnumOfValueInst__Animal::CAT { EnumOfValueInst__Animal::DOG } else { EnumOfValueInst__Animal::CHICKEN};
   |                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found enum `enum_of_value_inst::EnumOfValueInst__Animal`
   |
   = note: expected type `std::option::Option<std::boxed::Box<enum_of_value_inst::EnumOfValueInst__Animal>>`
              found type `enum_of_value_inst::EnumOfValueInst__Animal`

error[E0308]: mismatched types
  --> src/enum_of_value_inst.rs:60:16
   |
60 |         return self.pet4;
   |                ^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0277]: the trait bound `enum_to_i::EnumToI__Animal: std::default::Default` is not satisfied
  --> src/enum_to_i.rs:13:5
   |
13 |     pub pet1: Box<EnumToI__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_to_i::EnumToI__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_to_i::EnumToI__Animal>`
   = note: required by `std::default::Default::default`

error[E0277]: the trait bound `enum_to_i::EnumToI__Animal: std::default::Default` is not satisfied
  --> src/enum_to_i.rs:14:5
   |
14 |     pub pet2: Box<EnumToI__Animal>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `enum_to_i::EnumToI__Animal`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<enum_to_i::EnumToI__Animal>`
   = note: required by `std::default::Default::default`

error[E0609]: no field `stream` on type `enum_to_i::EnumToI`
  --> src/enum_to_i.rs:28:11
   |
28 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `pet1`, `pet2`, `pet1I`, `pet1Mod`, `oneLtTwo`

error[E0609]: no field `stream` on type `&mut enum_to_i::EnumToI`
  --> src/enum_to_i.rs:41:26
   |
41 |         self.pet1 = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut enum_to_i::EnumToI`
  --> src/enum_to_i.rs:42:26
   |
42 |         self.pet2 = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0308]: mismatched types
  --> src/enum_to_i.rs:40:27
   |
40 |           where Self: Sized {
   |  ___________________________^
41 | |         self.pet1 = self.stream.read_u4le()?;
42 | |         self.pet2 = self.stream.read_u4le()?;
43 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `pet_1` on type `&mut enum_to_i::EnumToI`
  --> src/enum_to_i.rs:52:27
   |
52 |         self.pet1I = self.pet_1;
   |                           ^^^^^

error[E0308]: mismatched types
  --> src/enum_to_i.rs:53:16
   |
53 |         return self.pet1I;
   |                ^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0609]: no field `pet_1` on type `&mut enum_to_i::EnumToI`
  --> src/enum_to_i.rs:60:30
   |
60 |         self.pet1Mod = (self.pet_1 + 32768);
   |                              ^^^^^

error[E0308]: mismatched types
  --> src/enum_to_i.rs:61:16
   |
61 |         return self.pet1Mod;
   |                ^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0609]: no field `pet_1` on type `&mut enum_to_i::EnumToI`
  --> src/enum_to_i.rs:68:30
   |
68 |         self.oneLtTwo = self.pet_1 < self.pet_2;
   |                              ^^^^^

error[E0609]: no field `pet_2` on type `&mut enum_to_i::EnumToI`
  --> src/enum_to_i.rs:68:43
   |
68 |         self.oneLtTwo = self.pet_1 < self.pet_2;
   |                                           ^^^^^

error[E0308]: mismatched types
  --> src/expr_1.rs:59:24
   |
59 |         self.str1Len = self.str1.len();
   |                        ^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found usize
   |
   = note: expected type `std::option::Option<i32>`
              found type `usize`

error[E0308]: mismatched types
  --> src/expr_1.rs:60:16
   |
60 |         return self.str1Len;
   |                ^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `expr_2::Expr2`
  --> src/expr_2.rs:33:11
   |
33 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `str1`, `str2`, `str1LenMod`, `str1Len`, `str1Tuple5` ... and 4 others

error[E0609]: no field `stream` on type `&mut expr_2::Expr2`
  --> src/expr_2.rs:46:54
   |
46 |         self.str1 = Box::new(Expr2__ModStr::new(self.stream, self, _root)?);
   |                                                      ^^^^^^

error[E0308]: mismatched types
  --> src/enum_to_i.rs:68:25
   |
68 |         self.oneLtTwo = self.pet_1 < self.pet_2;
   |                         ^^^^^^^^^^^^^^^^^^^^^^^
   |                         |
   |                         expected enum `std::option::Option`, found bool
   |                         help: try using a variant of the expected type: `Some(self.pet_1 < self.pet_2)`
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/enum_to_i.rs:69:16
   |
69 |         return self.oneLtTwo;
   |                ^^^^^^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0609]: no field `stream` on type `eof_exception_bytes::EofExceptionBytes`
  --> src/eof_exception_bytes.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `buf`

error[E0609]: no field `stream` on type `&mut eof_exception_bytes::EofExceptionBytes`
  --> src/eof_exception_bytes.rs:37:25
   |
37 |         self.buf = self.stream.read_bytes(13)?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/eof_exception_bytes.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |         self.buf = self.stream.read_bytes(13)?;
38 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `eof_exception_u4::EofExceptionU4`
  --> src/eof_exception_u4.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `prebuf`, `failInt`

error[E0609]: no field `stream` on type `&mut eof_exception_u4::EofExceptionU4`
  --> src/eof_exception_u4.rs:38:28
   |
38 |         self.prebuf = self.stream.read_bytes(9)?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut eof_exception_u4::EofExceptionU4`
  --> src/eof_exception_u4.rs:39:29
   |
39 |         self.failInt = self.stream.read_u4le()?;
   |                             ^^^^^^

error[E0308]: mismatched types
  --> src/eof_exception_u4.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.prebuf = self.stream.read_bytes(9)?;
39 | |         self.failInt = self.stream.read_u4le()?;
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `expr_0::Expr0`
  --> src/expr_0.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `lenOf1`, `mustBeF7`, `mustBeAbc123`

error[E0609]: no field `stream` on type `&mut expr_0::Expr0`
  --> src/expr_0.rs:39:28
   |
39 |         self.lenOf1 = self.stream.read_u2le()?;
   |                            ^^^^^^

error[E0308]: mismatched types
  --> src/expr_0.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.lenOf1 = self.stream.read_u2le()?;
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/expr_2.rs:46:62
   |
46 |         self.str1 = Box::new(Expr2__ModStr::new(self.stream, self, _root)?);
   |                                                              ^^^^ expected enum `std::option::Option`, found struct `expr_2::Expr2`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut expr_2::Expr2`

error[E0609]: no field `stream` on type `&mut expr_2::Expr2`
  --> src/expr_2.rs:47:54
   |
47 |         self.str2 = Box::new(Expr2__ModStr::new(self.stream, self, _root)?);
   |                                                      ^^^^^^

error[E0308]: mismatched types
  --> src/expr_0.rs:49:25
   |
49 |         self.mustBeF7 = (7 + 240);
   |                         ^^^^^^^^^
   |                         |
   |                         expected enum `std::option::Option`, found integral variable
   |                         help: try using a variant of the expected type: `Some(7 + 240)`
   |
   = note: expected type `std::option::Option<i32>`
              found type `{integer}`

error[E0308]: mismatched types
  --> src/expr_0.rs:50:16
   |
50 |         return self.mustBeF7;
   |                ^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0308]: mismatched types
  --> src/expr_2.rs:47:62
   |
47 |         self.str2 = Box::new(Expr2__ModStr::new(self.stream, self, _root)?);
   |                                                              ^^^^ expected enum `std::option::Option`, found struct `expr_2::Expr2`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut expr_2::Expr2`

error[E0308]: mismatched types
  --> src/expr_2.rs:45:27
   |
45 |           where Self: Sized {
   |  ___________________________^
46 | |         self.str1 = Box::new(Expr2__ModStr::new(self.stream, self, _root)?);
47 | |         self.str2 = Box::new(Expr2__ModStr::new(self.stream, self, _root)?);
48 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `len_mod` on type `std::boxed::Box<expr_2::Expr2__ModStr>`
  --> src/expr_2.rs:57:37
   |
57 |         self.str1LenMod = self.str1.len_mod;
   |                                     ^^^^^^^ unknown field

error[E0308]: mismatched types
  --> src/expr_2.rs:58:16
   |
58 |         return self.str1LenMod;
   |                ^^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0308]: mismatched types
  --> src/expr_0.rs:57:29
   |
57 |         self.mustBeAbc123 = format!("{}{}", "abc", "123");
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::string::String`
   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `std::string::String`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)
help: try using a variant of the expected type
   |
2  | Some(::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["", ""],
3  |                                                    &match (&"abc", &"123") {
4  |                                                         (arg0, arg1) =>
5  |                                                         [<::fmt::ArgumentV1>::new(arg0,
6  |                                                                                   ::fmt::Display::fmt),
7  |                                                          <::fmt::ArgumentV1>::new(arg1,
 ...

error[E0308]: mismatched types
  --> src/expr_0.rs:58:16
   |
58 |         return self.mustBeAbc123;
   |                ^^^^^^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0609]: no field `stream` on type `expr_1::Expr1`
  --> src/expr_1.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `lenOf1`, `str1`, `lenOf1Mod`, `str1Len`

error[E0308]: mismatched types
  --> src/expr_2.rs:65:24
   |
65 |         self.str1Len = self.str1.str.len();
   |                        ^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found usize
   |
   = note: expected type `std::option::Option<i32>`
              found type `usize`

error[E0308]: mismatched types
  --> src/expr_2.rs:66:16
   |
66 |         return self.str1Len;
   |                ^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0308]: mismatched types
  --> src/expr_2.rs:74:16
   |
74 |         return self.str1Tuple5;
   |                ^^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0308]: mismatched types
  --> src/expr_2.rs:82:16
   |
82 |         return self.str2Tuple5;
   |                ^^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0308]: mismatched types
  --> src/expr_2.rs:90:16
   |
90 |         return self.str1Avg;
   |                ^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `&mut expr_1::Expr1`
  --> src/expr_1.rs:40:28
   |
40 |         self.lenOf1 = self.stream.read_u2le()?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_1::Expr1`
  --> src/expr_1.rs:41:50
   |
41 |         self.str1 = String::from_utf8_lossy(self.stream.read_bytes(self.len_of_1_mod)?);
   |                                                  ^^^^^^

error[E0609]: no field `len_of_1_mod` on type `&mut expr_1::Expr1`
  --> src/expr_1.rs:41:73
   |
41 |         self.str1 = String::from_utf8_lossy(self.stream.read_bytes(self.len_of_1_mod)?);
   |                                                                         ^^^^^^^^^^^^

error[E0308]: mismatched types
  --> src/expr_2.rs:97:26
   |
97 |         self.str1Byte1 = self.str1.rest.byte1;
   |                          ^^^^^^^^^^^^^^^^^^^^
   |                          |
   |                          expected enum `std::option::Option`, found u8
   |                          help: try using a variant of the expected type: `Some(self.str1.rest.byte1)`
   |
   = note: expected type `std::option::Option<u8>`
              found type `u8`

error[E0308]: mismatched types
  --> src/expr_2.rs:98:16
   |
98 |         return self.str1Byte1;
   |                ^^^^^^^^^^^^^^ expected u8, found enum `std::option::Option`
   |
   = note: expected type `u8`
              found type `std::option::Option<u8>`

error[E0308]: mismatched types
   --> src/expr_2.rs:106:16
    |
106 |         return self.str1Char5;
    |                ^^^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
    |
    = note: expected type `std::string::String`
               found type `std::option::Option<std::string::String>`

error[E0609]: no field `stream` on type `expr_2::Expr2__ModStr`
   --> src/expr_2.rs:128:11
    |
128 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `lenOrig`, `str`, `rest`, `_raw_rest`, `lenMod` ... and 2 others

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__ModStr`
   --> src/expr_2.rs:141:29
    |
141 |         self.lenOrig = self.stream.read_u2le()?;
    |                             ^^^^^^

warning: unreachable expression
   --> src/expr_2.rs:142:9
    |
142 |         self.str = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__ModStr`
   --> src/expr_2.rs:143:31
    |
143 |         self._raw_rest = self.stream.read_bytes(3)?;
    |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__ModStr`
   --> src/expr_2.rs:145:53
    |
145 |         self.rest = Box::new(Expr2__Tuple::new(self.stream, self, _root)?);
    |                                                     ^^^^^^

error[E0308]: mismatched types
  --> src/expr_1.rs:41:21
   |
41 |         self.str1 = String::from_utf8_lossy(self.stream.read_bytes(self.len_of_1_mod)?);
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                     |
   |                     expected struct `std::string::String`, found enum `std::borrow::Cow`
   |                     help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes(self.len_of_1_mod)?).to_string()`
   |
   = note: expected type `std::string::String`
              found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
  --> src/expr_1.rs:39:27
   |
39 |           where Self: Sized {
   |  ___________________________^
40 | |         self.lenOf1 = self.stream.read_u2le()?;
41 | |         self.str1 = String::from_utf8_lossy(self.stream.read_bytes(self.len_of_1_mod)?);
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `len_of_1` on type `&mut expr_1::Expr1`
  --> src/expr_1.rs:51:32
   |
51 |         self.lenOf1Mod = (self.len_of_1 - 2);
   |                                ^^^^^^^^

error[E0308]: mismatched types
  --> src/expr_1.rs:52:16
   |
52 |         return self.lenOf1Mod;
   |                ^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/expr_2.rs:145:61
    |
145 |         self.rest = Box::new(Expr2__Tuple::new(self.stream, self, _root)?);
    |                                                             ^^^^ expected enum `std::option::Option`, found struct `expr_2::Expr2__ModStr`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut expr_2::Expr2__ModStr`

error[E0308]: mismatched types
  --> src/expr_1.rs:59:24
   |
59 |         self.str1Len = self.str1.len();
   |                        ^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found usize
   |
   = note: expected type `std::option::Option<i32>`
              found type `usize`

error[E0308]: mismatched types
  --> src/expr_1.rs:60:16
   |
60 |         return self.str1Len;
   |                ^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0609]: no field `len_orig` on type `&mut expr_2::Expr2__ModStr`
   --> src/expr_2.rs:155:29
    |
155 |         self.lenMod = (self.len_orig - 3);
    |                             ^^^^^^^^

error[E0308]: mismatched types
   --> src/expr_2.rs:156:16
    |
156 |         return self.lenMod;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `expr_2::Expr2`
  --> src/expr_2.rs:33:11
   |
33 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `str1`, `str2`, `str1LenMod`, `str1Len`, `str1Tuple5` ... and 4 others

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__ModStr`
   --> src/expr_2.rs:163:25
    |
163 |         let _pos = self.stream.pos();
    |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__ModStr`
   --> src/expr_2.rs:164:14
    |
164 |         self.stream.seek(5);
    |              ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__ModStr`
   --> src/expr_2.rs:165:51
    |
165 |         self.char5 = String::from_utf8_lossy(self.stream.read_bytes(1)?);
    |                                                   ^^^^^^

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
   --> src/expr_2.rs:165:46
    |
165 |         self.char5 = String::from_utf8_lossy(self.stream.read_bytes(1)?);
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::string::String`
    |
    = help: the trait `std::ops::Try` is not implemented for `std::string::String`
    = note: required by `std::ops::Try::from_error`

error[E0609]: no field `stream` on type `&mut expr_2::Expr2`
  --> src/expr_2.rs:46:54
   |
46 |         self.str1 = Box::new(Expr2__ModStr::new(self.stream, self, _root)?);
   |                                                      ^^^^^^

error[E0308]: mismatched types
   --> src/expr_2.rs:165:22
    |
165 |         self.char5 = String::from_utf8_lossy(self.stream.read_bytes(1)?);
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found enum `std::borrow::Cow`
error[E0308]: mismatched types
  --> src/expr_2.rs:46:62
   |
46 |         self.str1 = Box::new(Expr2__ModStr::new(self.stream, self, _root)?);
   |                                                              ^^^^ expected enum `std::option::Option`, found struct `expr_2::Expr2`
    |
   |
    = note: expected type `std::option::Option<std::string::String>`
               found type `std::borrow::Cow<'_, str>`

   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut expr_2::Expr2`

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__ModStr`
   --> src/expr_2.rs:166:14
    |
166 |         self.stream.seek(_pos);
    |              ^^^^^^

error[E0308]: mismatched types
   --> src/expr_2.rs:167:16
    |
167 |         return self.char5;
    |                ^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
    |
    = note: expected type `std::string::String`
               found type `std::option::Option<std::string::String>`

error[E0609]: no field `stream` on type `&mut expr_2::Expr2`
  --> src/expr_2.rs:47:54
   |
47 |         self.str2 = Box::new(Expr2__ModStr::new(self.stream, self, _root)?);
   |                                                      ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__ModStr`
   --> src/expr_2.rs:174:25
    |
174 |         let _pos = self.stream.pos();
    |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__ModStr`
   --> src/expr_2.rs:175:14
    |
175 |         self.stream.seek(5);
    |              ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__ModStr`
   --> src/expr_2.rs:176:55
    |
176 |         self.tuple5 = Box::new(Expr2__Tuple::new(self.stream, self, _root)?);
    |                                                       ^^^^^^

error[E0308]: mismatched types
  --> src/expr_2.rs:47:62
   |
47 |         self.str2 = Box::new(Expr2__ModStr::new(self.stream, self, _root)?);
   |                                                              ^^^^ expected enum `std::option::Option`, found struct `expr_2::Expr2`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut expr_2::Expr2`

error[E0308]: mismatched types
  --> src/expr_2.rs:45:27
   |
45 |           where Self: Sized {
   |  ___________________________^
46 | |         self.str1 = Box::new(Expr2__ModStr::new(self.stream, self, _root)?);
47 | |         self.str2 = Box::new(Expr2__ModStr::new(self.stream, self, _root)?);
48 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `len_mod` on type `std::boxed::Box<expr_2::Expr2__ModStr>`
  --> src/expr_2.rs:57:37
   |
57 |         self.str1LenMod = self.str1.len_mod;
   |                                     ^^^^^^^ unknown field

error[E0308]: mismatched types
  --> src/expr_2.rs:58:16
   |
58 |         return self.str1LenMod;
   |                ^^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/expr_2.rs:176:63
    |
176 |         self.tuple5 = Box::new(Expr2__Tuple::new(self.stream, self, _root)?);
    |                                                               ^^^^ expected enum `std::option::Option`, found struct `expr_2::Expr2__ModStr`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut expr_2::Expr2__ModStr`

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
   --> src/expr_2.rs:176:32
    |
176 |         self.tuple5 = Box::new(Expr2__Tuple::new(self.stream, self, _root)?);
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::boxed::Box<expr_2::Expr2__Tuple>`
    |
    = help: the trait `std::ops::Try` is not implemented for `std::boxed::Box<expr_2::Expr2__Tuple>`
    = note: required by `std::ops::Try::from_error`

error[E0308]: mismatched types
  --> src/expr_2.rs:65:24
   |
65 |         self.str1Len = self.str1.str.len();
   |                        ^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found usize
   |
   = note: expected type `std::option::Option<i32>`
              found type `usize`

error[E0308]: mismatched types
  --> src/expr_2.rs:66:16
   |
66 |         return self.str1Len;
   |                ^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0308]: mismatched types
  --> src/expr_2.rs:74:16
   |
74 |         return self.str1Tuple5;
   |                ^^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0308]: mismatched types
  --> src/expr_2.rs:82:16
   |
82 |         return self.str2Tuple5;
   |                ^^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0308]: mismatched types
  --> src/expr_2.rs:90:16
   |
90 |         return self.str1Avg;
   |                ^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/expr_2.rs:176:23
    |
176 |         self.tuple5 = Box::new(Expr2__Tuple::new(self.stream, self, _root)?);
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
    |
    = note: expected type `std::option::Option<std::boxed::Box<_>>`
               found type `std::boxed::Box<_>`
help: try using a variant of the expected type
    |
176 |         self.tuple5 = Some(<Box>::new(match ::std::ops::Try::into_result(<Expr2__Tuple>::new(self.stream,
177 |                                                                   self,
178 |                                                                   _root)) {
179 |                ::std::result::Result::Err(err) =>
180 |                    #[allow(unreachable_code)]
181 |                    return ::std::ops::Try::from_error(::std::convert::From::from(err)),
  ...

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__ModStr`
   --> src/expr_2.rs:177:14
    |
177 |         self.stream.seek(_pos);
    |              ^^^^^^

error[E0308]: mismatched types
   --> src/expr_2.rs:178:16
    |
178 |         return self.tuple5;
    |                ^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
    |
    = note: expected type `std::boxed::Box<_>`
               found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `expr_2::Expr2__Tuple`
   --> src/expr_2.rs:197:11
    |
197 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `byte0`, `byte1`, `byte2`, `avg`

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__Tuple`
   --> src/expr_2.rs:210:27
    |
210 |         self.byte0 = self.stream.read_u1()?;
    |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__Tuple`
   --> src/expr_2.rs:211:27
    |
211 |         self.byte1 = self.stream.read_u1()?;
    |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__Tuple`
   --> src/expr_2.rs:212:27
    |
212 |         self.byte2 = self.stream.read_u1()?;
    |                           ^^^^^^

error[E0308]: mismatched types
   --> src/expr_2.rs:209:27
    |
209 |           where Self: Sized {
    |  ___________________________^
210 | |         self.byte0 = self.stream.read_u1()?;
211 | |         self.byte1 = self.stream.read_u1()?;
212 | |         self.byte2 = self.stream.read_u1()?;
213 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0308]: mismatched types
  --> src/expr_2.rs:97:26
   |
97 |         self.str1Byte1 = self.str1.rest.byte1;
   |                          ^^^^^^^^^^^^^^^^^^^^
   |                          |
   |                          expected enum `std::option::Option`, found u8
   |                          help: try using a variant of the expected type: `Some(self.str1.rest.byte1)`
   |
   = note: expected type `std::option::Option<u8>`
              found type `u8`

error[E0308]: mismatched types
  --> src/expr_2.rs:98:16
   |
98 |         return self.str1Byte1;
   |                ^^^^^^^^^^^^^^ expected u8, found enum `std::option::Option`
   |
   = note: expected type `u8`
              found type `std::option::Option<u8>`

error[E0308]: mismatched types
   --> src/expr_2.rs:106:16
    |
106 |         return self.str1Char5;
    |                ^^^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
    |
    = note: expected type `std::string::String`
               found type `std::option::Option<std::string::String>`

error[E0609]: no field `stream` on type `expr_2::Expr2__ModStr`
   --> src/expr_2.rs:128:11
    |
128 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `lenOrig`, `str`, `rest`, `_raw_rest`, `lenMod` ... and 2 others

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__ModStr`
   --> src/expr_2.rs:141:29
    |
141 |         self.lenOrig = self.stream.read_u2le()?;
    |                             ^^^^^^

warning: unreachable expression
   --> src/expr_2.rs:142:9
    |
142 |         self.str = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__ModStr`
   --> src/expr_2.rs:143:31
    |
143 |         self._raw_rest = self.stream.read_bytes(3)?;
    |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__ModStr`
   --> src/expr_2.rs:145:53
    |
145 |         self.rest = Box::new(Expr2__Tuple::new(self.stream, self, _root)?);
    |                                                     ^^^^^^

error[E0308]: mismatched types
   --> src/expr_2.rs:222:20
    |
222 |         self.avg = (self.byte1 + self.byte2) / 2;
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/expr_2.rs:223:16
    |
223 |         return self.avg;
    |                ^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `expr_3::Expr3`
  --> src/expr_3.rs:35:11
   |
35 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`, `three`, `isStrGe`, `isStrNe` ... and 7 others

error[E0609]: no field `stream` on type `&mut expr_3::Expr3`
  --> src/expr_3.rs:48:25
   |
48 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_3::Expr3`
  --> src/expr_3.rs:49:49
   |
49 |         self.two = String::from_utf8_lossy(self.stream.read_bytes(3)?);
   |                                                 ^^^^^^

error[E0308]: mismatched types
   --> src/expr_2.rs:145:61
    |
145 |         self.rest = Box::new(Expr2__Tuple::new(self.stream, self, _root)?);
    |                                                             ^^^^ expected enum `std::option::Option`, found struct `expr_2::Expr2__ModStr`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut expr_2::Expr2__ModStr`

error[E0609]: no field `len_orig` on type `&mut expr_2::Expr2__ModStr`
   --> src/expr_2.rs:155:29
    |
155 |         self.lenMod = (self.len_orig - 3);
    |                             ^^^^^^^^

error[E0308]: mismatched types
   --> src/expr_2.rs:156:16
    |
156 |         return self.lenMod;
    |                ^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__ModStr`
   --> src/expr_2.rs:163:25
    |
163 |         let _pos = self.stream.pos();
    |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__ModStr`
   --> src/expr_2.rs:164:14
    |
164 |         self.stream.seek(5);
    |              ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__ModStr`
   --> src/expr_2.rs:165:51
    |
165 |         self.char5 = String::from_utf8_lossy(self.stream.read_bytes(1)?);
    |                                                   ^^^^^^

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
   --> src/expr_2.rs:165:46
    |
165 |         self.char5 = String::from_utf8_lossy(self.stream.read_bytes(1)?);
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::string::String`
    |
    = help: the trait `std::ops::Try` is not implemented for `std::string::String`
    = note: required by `std::ops::Try::from_error`

error[E0308]: mismatched types
  --> src/expr_3.rs:49:20
   |
49 |         self.two = String::from_utf8_lossy(self.stream.read_bytes(3)?);
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                    |
   |                    expected struct `std::string::String`, found enum `std::borrow::Cow`
   |                    help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes(3)?).to_string()`
   |
   = note: expected type `std::string::String`
              found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
  --> src/expr_3.rs:47:27
   |
47 |           where Self: Sized {
   |  ___________________________^
48 | |         self.one = self.stream.read_u1()?;
49 | |         self.two = String::from_utf8_lossy(self.stream.read_bytes(3)?);
50 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
   --> src/expr_2.rs:165:22
    |
165 |         self.char5 = String::from_utf8_lossy(self.stream.read_bytes(1)?);
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found enum `std::borrow::Cow`
    |
    = note: expected type `std::option::Option<std::string::String>`
               found type `std::borrow::Cow<'_, str>`

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__ModStr`
   --> src/expr_2.rs:166:14
    |
166 |         self.stream.seek(_pos);
    |              ^^^^^^

error[E0308]: mismatched types
   --> src/expr_2.rs:167:16
    |
167 |         return self.char5;
    |                ^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
    |
    = note: expected type `std::string::String`
               found type `std::option::Option<std::string::String>`

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__ModStr`
   --> src/expr_2.rs:174:25
    |
174 |         let _pos = self.stream.pos();
    |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__ModStr`
   --> src/expr_2.rs:175:14
    |
175 |         self.stream.seek(5);
    |              ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__ModStr`
   --> src/expr_2.rs:176:55
    |
176 |         self.tuple5 = Box::new(Expr2__Tuple::new(self.stream, self, _root)?);
    |                                                       ^^^^^^

error[E0308]: mismatched types
  --> src/expr_3.rs:59:22
   |
59 |         self.three = format!("{}{}", "@", self.two);
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::string::String`
   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `std::string::String`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)
help: try using a variant of the expected type
   |
2  | Some(::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["", ""],
3  |                                                    &match (&"@", &self.two) {
4  |                                                         (arg0, arg1) =>
5  |                                                         [<::fmt::ArgumentV1>::new(arg0,
6  |                                                                                   ::fmt::Display::fmt),
7  |                                                          <::fmt::ArgumentV1>::new(arg1,
 ...

error[E0308]: mismatched types
  --> src/expr_3.rs:60:16
   |
60 |         return self.three;
   |                ^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
   --> src/expr_2.rs:176:63
    |
176 |         self.tuple5 = Box::new(Expr2__Tuple::new(self.stream, self, _root)?);
    |                                                               ^^^^ expected enum `std::option::Option`, found struct `expr_2::Expr2__ModStr`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut expr_2::Expr2__ModStr`

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
   --> src/expr_2.rs:176:32
    |
176 |         self.tuple5 = Box::new(Expr2__Tuple::new(self.stream, self, _root)?);
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::boxed::Box<expr_2::Expr2__Tuple>`
    |
    = help: the trait `std::ops::Try` is not implemented for `std::boxed::Box<expr_2::Expr2__Tuple>`
    = note: required by `std::ops::Try::from_error`

error[E0308]: mismatched types
  --> src/expr_3.rs:67:36
   |
67 |         self.isStrGe = self.two >= "ACK2";
   |                                    ^^^^^^
   |                                    |
   |                                    expected struct `std::string::String`, found reference
   |                                    help: try using a conversion method: `"ACK2".to_string()`
   |
   = note: expected type `std::string::String`
              found type `&'static str`

error[E0308]: mismatched types
   --> src/expr_2.rs:176:23
    |
176 |         self.tuple5 = Box::new(Expr2__Tuple::new(self.stream, self, _root)?);
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
    |
    = note: expected type `std::option::Option<std::boxed::Box<_>>`
               found type `std::boxed::Box<_>`
help: try using a variant of the expected type
    |
176 |         self.tuple5 = Some(<Box>::new(match ::std::ops::Try::into_result(<Expr2__Tuple>::new(self.stream,
177 |                                                                   self,
178 |                                                                   _root)) {
179 |                ::std::result::Result::Err(err) =>
180 |                    #[allow(unreachable_code)]
181 |                    return ::std::ops::Try::from_error(::std::convert::From::from(err)),
  ...

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__ModStr`
   --> src/expr_2.rs:177:14
    |
177 |         self.stream.seek(_pos);
    |              ^^^^^^

error[E0308]: mismatched types
   --> src/expr_2.rs:178:16
    |
178 |         return self.tuple5;
    |                ^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
    |
    = note: expected type `std::boxed::Box<_>`
               found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `expr_2::Expr2__Tuple`
   --> src/expr_2.rs:197:11
    |
197 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `byte0`, `byte1`, `byte2`, `avg`

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__Tuple`
   --> src/expr_2.rs:210:27
    |
210 |         self.byte0 = self.stream.read_u1()?;
    |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__Tuple`
   --> src/expr_2.rs:211:27
    |
211 |         self.byte1 = self.stream.read_u1()?;
    |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_2::Expr2__Tuple`
   --> src/expr_2.rs:212:27
    |
212 |         self.byte2 = self.stream.read_u1()?;
    |                           ^^^^^^

error[E0308]: mismatched types
   --> src/expr_2.rs:209:27
    |
209 |           where Self: Sized {
    |  ___________________________^
210 | |         self.byte0 = self.stream.read_u1()?;
211 | |         self.byte1 = self.stream.read_u1()?;
212 | |         self.byte2 = self.stream.read_u1()?;
213 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0308]: mismatched types
  --> src/expr_3.rs:67:24
   |
67 |         self.isStrGe = self.two >= "ACK2";
   |                        ^^^^^^^^^^^^^^^^^^
   |                        |
   |                        expected enum `std::option::Option`, found bool
   |                        help: try using a variant of the expected type: `Some(self.two >= "ACK2")`
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/expr_3.rs:68:16
   |
68 |         return self.isStrGe;
   |                ^^^^^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0308]: mismatched types
   --> src/expr_2.rs:222:20
    |
222 |         self.avg = (self.byte1 + self.byte2) / 2;
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
    |
    = note: expected type `std::option::Option<i32>`
               found type `u8`

error[E0308]: mismatched types
   --> src/expr_2.rs:223:16
    |
223 |         return self.avg;
    |                ^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `expr_3::Expr3`
  --> src/expr_3.rs:35:11
   |
35 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`, `three`, `isStrGe`, `isStrNe` ... and 7 others

error[E0609]: no field `stream` on type `&mut expr_3::Expr3`
  --> src/expr_3.rs:48:25
   |
48 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_3::Expr3`
  --> src/expr_3.rs:49:49
   |
49 |         self.two = String::from_utf8_lossy(self.stream.read_bytes(3)?);
   |                                                 ^^^^^^

error[E0308]: mismatched types
  --> src/expr_3.rs:75:24
   |
75 |         self.isStrNe = self.two != "ACK";
   |                        ^^^^^^^^^^^^^^^^^
   |                        |
   |                        expected enum `std::option::Option`, found bool
   |                        help: try using a variant of the expected type: `Some(self.two != "ACK")`
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/expr_3.rs:76:16
   |
76 |         return self.isStrNe;
   |                ^^^^^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0308]: mismatched types
  --> src/expr_3.rs:83:35
   |
83 |         self.isStrGt = self.two > "ACK2";
   |                                   ^^^^^^
   |                                   |
   |                                   expected struct `std::string::String`, found reference
   |                                   help: try using a conversion method: `"ACK2".to_string()`
   |
   = note: expected type `std::string::String`
              found type `&'static str`

error[E0308]: mismatched types
  --> src/expr_3.rs:49:20
   |
49 |         self.two = String::from_utf8_lossy(self.stream.read_bytes(3)?);
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                    |
   |                    expected struct `std::string::String`, found enum `std::borrow::Cow`
   |                    help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes(3)?).to_string()`
   |
   = note: expected type `std::string::String`
              found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
  --> src/expr_3.rs:47:27
   |
47 |           where Self: Sized {
   |  ___________________________^
48 | |         self.one = self.stream.read_u1()?;
49 | |         self.two = String::from_utf8_lossy(self.stream.read_bytes(3)?);
50 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/expr_3.rs:83:24
   |
83 |         self.isStrGt = self.two > "ACK2";
   |                        ^^^^^^^^^^^^^^^^^
   |                        |
   |                        expected enum `std::option::Option`, found bool
   |                        help: try using a variant of the expected type: `Some(self.two > "ACK2")`
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/expr_3.rs:84:16
   |
84 |         return self.isStrGt;
   |                ^^^^^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0308]: mismatched types
  --> src/expr_3.rs:59:22
   |
59 |         self.three = format!("{}{}", "@", self.two);
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::string::String`
   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `std::string::String`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)
help: try using a variant of the expected type
   |
2  | Some(::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["", ""],
3  |                                                    &match (&"@", &self.two) {
4  |                                                         (arg0, arg1) =>
5  |                                                         [<::fmt::ArgumentV1>::new(arg0,
6  |                                                                                   ::fmt::Display::fmt),
7  |                                                          <::fmt::ArgumentV1>::new(arg1,
 ...

error[E0308]: mismatched types
  --> src/expr_3.rs:60:16
   |
60 |         return self.three;
   |                ^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
  --> src/expr_3.rs:91:36
   |
91 |         self.isStrLe = self.two <= "ACK2";
   |                                    ^^^^^^
   |                                    |
   |                                    expected struct `std::string::String`, found reference
   |                                    help: try using a conversion method: `"ACK2".to_string()`
   |
   = note: expected type `std::string::String`
              found type `&'static str`

error[E0308]: mismatched types
  --> src/expr_3.rs:91:24
   |
91 |         self.isStrLe = self.two <= "ACK2";
   |                        ^^^^^^^^^^^^^^^^^^
   |                        |
   |                        expected enum `std::option::Option`, found bool
   |                        help: try using a variant of the expected type: `Some(self.two <= "ACK2")`
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/expr_3.rs:92:16
   |
92 |         return self.isStrLe;
   |                ^^^^^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0308]: mismatched types
  --> src/expr_3.rs:67:36
   |
67 |         self.isStrGe = self.two >= "ACK2";
   |                                    ^^^^^^
   |                                    |
   |                                    expected struct `std::string::String`, found reference
   |                                    help: try using a conversion method: `"ACK2".to_string()`
   |
   = note: expected type `std::string::String`
              found type `&'static str`

error[E0308]: mismatched types
  --> src/expr_3.rs:99:38
   |
99 |         self.isStrLt2 = self.three < self.two;
   |                                      ^^^^^^^^
   |                                      |
   |                                      expected enum `std::option::Option`, found struct `std::string::String`
   |                                      help: try using a variant of the expected type: `Some(self.two)`
   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `std::string::String`

error[E0308]: mismatched types
  --> src/expr_3.rs:67:24
   |
67 |         self.isStrGe = self.two >= "ACK2";
   |                        ^^^^^^^^^^^^^^^^^^
   |                        |
   |                        expected enum `std::option::Option`, found bool
   |                        help: try using a variant of the expected type: `Some(self.two >= "ACK2")`
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/expr_3.rs:68:16
   |
68 |         return self.isStrGe;
   |                ^^^^^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0308]: mismatched types
  --> src/expr_3.rs:99:25
   |
99 |         self.isStrLt2 = self.three < self.two;
   |                         ^^^^^^^^^^^^^^^^^^^^^
   |                         |
   |                         expected enum `std::option::Option`, found bool
   |                         help: try using a variant of the expected type: `Some(self.three < self.two)`
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
   --> src/expr_3.rs:100:16
    |
100 |         return self.isStrLt2;
    |                ^^^^^^^^^^^^^ expected bool, found enum `std::option::Option`
    |
    = note: expected type `bool`
               found type `std::option::Option<bool>`

error[E0308]: mismatched types
  --> src/expr_3.rs:75:24
   |
75 |         self.isStrNe = self.two != "ACK";
   |                        ^^^^^^^^^^^^^^^^^
   |                        |
   |                        expected enum `std::option::Option`, found bool
   |                        help: try using a variant of the expected type: `Some(self.two != "ACK")`
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/expr_3.rs:76:16
   |
76 |         return self.isStrNe;
   |                ^^^^^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0308]: mismatched types
   --> src/expr_3.rs:107:24
    |
107 |         self.testNot = !(false);
    |                        ^^^^^^^^
    |                        |
    |                        expected enum `std::option::Option`, found bool
    |                        help: try using a variant of the expected type: `Some(!false)`
    |
    = note: expected type `std::option::Option<bool>`
               found type `bool`

error[E0308]: mismatched types
   --> src/expr_3.rs:108:16
    |
108 |         return self.testNot;
    |                ^^^^^^^^^^^^ expected bool, found enum `std::option::Option`
    |
    = note: expected type `bool`
               found type `std::option::Option<bool>`

error[E0308]: mismatched types
  --> src/expr_3.rs:83:35
   |
83 |         self.isStrGt = self.two > "ACK2";
   |                                   ^^^^^^
   |                                   |
   |                                   expected struct `std::string::String`, found reference
   |                                   help: try using a conversion method: `"ACK2".to_string()`
   |
   = note: expected type `std::string::String`
              found type `&'static str`

error[E0308]: mismatched types
   --> src/expr_3.rs:115:35
    |
115 |         self.isStrLt = self.two < "ACK2";
    |                                   ^^^^^^
    |                                   |
    |                                   expected struct `std::string::String`, found reference
    |                                   help: try using a conversion method: `"ACK2".to_string()`
    |
    = note: expected type `std::string::String`
               found type `&'static str`

error[E0308]: mismatched types
  --> src/expr_3.rs:83:24
   |
83 |         self.isStrGt = self.two > "ACK2";
   |                        ^^^^^^^^^^^^^^^^^
   |                        |
   |                        expected enum `std::option::Option`, found bool
   |                        help: try using a variant of the expected type: `Some(self.two > "ACK2")`
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/expr_3.rs:84:16
   |
84 |         return self.isStrGt;
   |                ^^^^^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0308]: mismatched types
   --> src/expr_3.rs:115:24
    |
115 |         self.isStrLt = self.two < "ACK2";
    |                        ^^^^^^^^^^^^^^^^^
    |                        |
    |                        expected enum `std::option::Option`, found bool
    |                        help: try using a variant of the expected type: `Some(self.two < "ACK2")`
    |
    = note: expected type `std::option::Option<bool>`
               found type `bool`

error[E0308]: mismatched types
   --> src/expr_3.rs:116:16
    |
116 |         return self.isStrLt;
    |                ^^^^^^^^^^^^ expected bool, found enum `std::option::Option`
    |
    = note: expected type `bool`
               found type `std::option::Option<bool>`

error[E0308]: mismatched types
  --> src/expr_3.rs:91:36
   |
91 |         self.isStrLe = self.two <= "ACK2";
   |                                    ^^^^^^
   |                                    |
   |                                    expected struct `std::string::String`, found reference
   |                                    help: try using a conversion method: `"ACK2".to_string()`
   |
   = note: expected type `std::string::String`
              found type `&'static str`

error[E0308]: mismatched types
   --> src/expr_3.rs:123:21
    |
123 |         self.four = format!("{}{}", format!("{}{}", "_", self.two), "_");
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::string::String`
    |
    = note: expected type `std::option::Option<std::string::String>`
               found type `std::string::String`
    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)
help: try using a variant of the expected type
    |
2   | Some(::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["", ""],
3   |                                                    &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
4   |                                                                                                                  ""],
5   |                                                                                                                &match (&"_",
6   |                                                                                                                        &self.two)
7   |                                                                                                                     {
  ...

error[E0308]: mismatched types
   --> src/expr_3.rs:124:16
    |
124 |         return self.four;
    |                ^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
    |
    = note: expected type `std::string::String`
               found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
  --> src/expr_3.rs:91:24
   |
91 |         self.isStrLe = self.two <= "ACK2";
   |                        ^^^^^^^^^^^^^^^^^^
   |                        |
   |                        expected enum `std::option::Option`, found bool
   |                        help: try using a variant of the expected type: `Some(self.two <= "ACK2")`
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/expr_3.rs:92:16
   |
92 |         return self.isStrLe;
   |                ^^^^^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0308]: mismatched types
   --> src/expr_3.rs:131:24
    |
131 |         self.isStrEq = self.two == "ACK";
    |                        ^^^^^^^^^^^^^^^^^
    |                        |
    |                        expected enum `std::option::Option`, found bool
    |                        help: try using a variant of the expected type: `Some(self.two == "ACK")`
    |
    = note: expected type `std::option::Option<bool>`
               found type `bool`

error[E0308]: mismatched types
   --> src/expr_3.rs:132:16
    |
132 |         return self.isStrEq;
    |                ^^^^^^^^^^^^ expected bool, found enum `std::option::Option`
    |
    = note: expected type `bool`
               found type `std::option::Option<bool>`

error[E0609]: no field `stream` on type `expr_array::ExprArray`
  --> src/expr_array.rs:42:11
   |
42 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `aint`, `afloat`, `astr`, `aintFirst`, `afloatSize` ... and 13 others

error[E0609]: no field `stream` on type `&mut expr_array::ExprArray`
  --> src/expr_array.rs:57:33
   |
57 |             self.aint.push(self.stream.read_u4le()?);
   |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_array::ExprArray`
  --> src/expr_array.rs:61:35
   |
61 |             self.afloat.push(self.stream.read_f8le()?);
   |                                   ^^^^^^

warning: unreachable expression
  --> src/expr_array.rs:65:13
   |
65 |             self.astr.push(panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8"));
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> src/expr_array.rs:64:9
   |
53 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
64 | /         for i in 0..3 {
65 | |             self.astr.push(panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8"));
66 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/expr_3.rs:99:38
   |
99 |         self.isStrLt2 = self.three < self.two;
   |                                      ^^^^^^^^
   |                                      |
   |                                      expected enum `std::option::Option`, found struct `std::string::String`
   |                                      help: try using a variant of the expected type: `Some(self.two)`
   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `std::string::String`

error[E0308]: mismatched types
  --> src/expr_3.rs:99:25
   |
99 |         self.isStrLt2 = self.three < self.two;
   |                         ^^^^^^^^^^^^^^^^^^^^^
   |                         |
   |                         expected enum `std::option::Option`, found bool
   |                         help: try using a variant of the expected type: `Some(self.three < self.two)`
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
   --> src/expr_3.rs:100:16
    |
100 |         return self.isStrLt2;
    |                ^^^^^^^^^^^^^ expected bool, found enum `std::option::Option`
    |
    = note: expected type `bool`
               found type `std::option::Option<bool>`

error[E0308]: mismatched types
  --> src/expr_array.rs:76:26
   |
76 |         self.aintFirst = self.aint.first();
   |                          ^^^^^^^^^^^^^^^^^ expected u32, found &u32
   |
   = note: expected type `std::option::Option<u32>`
              found type `std::option::Option<&u32>`

error[E0308]: mismatched types
  --> src/expr_array.rs:77:16
   |
77 |         return self.aintFirst;
   |                ^^^^^^^^^^^^^^ expected u32, found enum `std::option::Option`
   |
   = note: expected type `u32`
              found type `std::option::Option<u32>`

error[E0308]: mismatched types
   --> src/expr_3.rs:107:24
    |
107 |         self.testNot = !(false);
    |                        ^^^^^^^^
    |                        |
    |                        expected enum `std::option::Option`, found bool
    |                        help: try using a variant of the expected type: `Some(!false)`
    |
    = note: expected type `std::option::Option<bool>`
               found type `bool`

error[E0308]: mismatched types
   --> src/expr_3.rs:108:16
    |
108 |         return self.testNot;
    |                ^^^^^^^^^^^^ expected bool, found enum `std::option::Option`
    |
    = note: expected type `bool`
               found type `std::option::Option<bool>`

error[E0308]: mismatched types
  --> src/expr_array.rs:84:27
   |
84 |         self.afloatSize = self.afloat.len();
   |                           ^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found usize
   |
   = note: expected type `std::option::Option<i32>`
              found type `usize`

error[E0308]: mismatched types
  --> src/expr_array.rs:85:16
   |
85 |         return self.afloatSize;
   |                ^^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/expr_3.rs:115:35
    |
115 |         self.isStrLt = self.two < "ACK2";
    |                                   ^^^^^^
    |                                   |
    |                                   expected struct `std::string::String`, found reference
    |                                   help: try using a conversion method: `"ACK2".to_string()`
    |
    = note: expected type `std::string::String`
               found type `&'static str`

error[E0308]: mismatched types
  --> src/expr_array.rs:92:25
   |
92 |         self.astrSize = self.astr.len();
   |                         ^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found usize
   |
   = note: expected type `std::option::Option<i32>`
              found type `usize`

error[E0308]: mismatched types
  --> src/expr_array.rs:93:16
   |
93 |         return self.astrSize;
   |                ^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/expr_3.rs:115:24
    |
115 |         self.isStrLt = self.two < "ACK2";
    |                        ^^^^^^^^^^^^^^^^^
    |                        |
    |                        expected enum `std::option::Option`, found bool
    |                        help: try using a variant of the expected type: `Some(self.two < "ACK2")`
    |
    = note: expected type `std::option::Option<bool>`
               found type `bool`

error[E0308]: mismatched types
   --> src/expr_3.rs:116:16
    |
116 |         return self.isStrLt;
    |                ^^^^^^^^^^^^ expected bool, found enum `std::option::Option`
    |
    = note: expected type `bool`
               found type `std::option::Option<bool>`

error[E0308]: mismatched types
   --> src/expr_array.rs:100:24
    |
100 |         self.aintMin = self.aint.iter().min();
    |                        ^^^^^^^^^^^^^^^^^^^^^^ expected u32, found &u32
    |
    = note: expected type `std::option::Option<u32>`
               found type `std::option::Option<&u32>`

error[E0308]: mismatched types
   --> src/expr_array.rs:101:16
    |
101 |         return self.aintMin;
    |                ^^^^^^^^^^^^ expected u32, found enum `std::option::Option`
    |
    = note: expected type `u32`
               found type `std::option::Option<u32>`

error[E0277]: the trait bound `f64: std::cmp::Ord` is not satisfied
   --> src/expr_array.rs:108:45
    |
108 |         self.afloatMin = self.afloat.iter().min();
    |                                             ^^^ the trait `std::cmp::Ord` is not implemented for `f64`
    |
    = note: required because of the requirements on the impl of `std::cmp::Ord` for `&f64`

error[E0308]: mismatched types
   --> src/expr_3.rs:123:21
    |
123 |         self.four = format!("{}{}", format!("{}{}", "_", self.two), "_");
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::string::String`
    |
    = note: expected type `std::option::Option<std::string::String>`
               found type `std::string::String`
    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)
help: try using a variant of the expected type
    |
2   | Some(::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["", ""],
3   |                                                    &match (&::fmt::format(<::fmt::Arguments>::new_v1_formatted(&["",
4   |                                                                                                                  ""],
5   |                                                                                                                &match (&"_",
6   |                                                                                                                        &self.two)
7   |                                                                                                                     {
  ...

error[E0308]: mismatched types
   --> src/expr_3.rs:124:16
    |
124 |         return self.four;
    |                ^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
    |
    = note: expected type `std::string::String`
               found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
   --> src/expr_array.rs:108:26
    |
108 |         self.afloatMin = self.afloat.iter().min();
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^ expected f64, found &f64
    |
    = note: expected type `std::option::Option<f64>`
               found type `std::option::Option<&f64>`

error[E0308]: mismatched types
   --> src/expr_array.rs:109:16
    |
109 |         return self.afloatMin;
    |                ^^^^^^^^^^^^^^ expected f64, found enum `std::option::Option`
    |
    = note: expected type `f64`
               found type `std::option::Option<f64>`

error[E0308]: mismatched types
   --> src/expr_3.rs:131:24
    |
131 |         self.isStrEq = self.two == "ACK";
    |                        ^^^^^^^^^^^^^^^^^
    |                        |
    |                        expected enum `std::option::Option`, found bool
    |                        help: try using a variant of the expected type: `Some(self.two == "ACK")`
    |
    = note: expected type `std::option::Option<bool>`
               found type `bool`

error[E0308]: mismatched types
   --> src/expr_3.rs:132:16
    |
132 |         return self.isStrEq;
    |                ^^^^^^^^^^^^ expected bool, found enum `std::option::Option`
    |
    = note: expected type `bool`
               found type `std::option::Option<bool>`

error[E0609]: no field `stream` on type `expr_array::ExprArray`
  --> src/expr_array.rs:42:11
   |
42 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `aint`, `afloat`, `astr`, `aintFirst`, `afloatSize` ... and 13 others

error[E0609]: no field `stream` on type `&mut expr_array::ExprArray`
  --> src/expr_array.rs:57:33
   |
57 |             self.aint.push(self.stream.read_u4le()?);
   |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_array::ExprArray`
  --> src/expr_array.rs:61:35
   |
61 |             self.afloat.push(self.stream.read_f8le()?);
   |                                   ^^^^^^

warning: unreachable expression
  --> src/expr_array.rs:65:13
   |
65 |             self.astr.push(panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8"));
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> src/expr_array.rs:64:9
   |
53 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
64 | /         for i in 0..3 {
65 | |             self.astr.push(panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8"));
66 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
   --> src/expr_array.rs:116:25
    |
116 |         self.aintSize = self.aint.len();
    |                         ^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found usize
    |
    = note: expected type `std::option::Option<i32>`
               found type `usize`

error[E0308]: mismatched types
   --> src/expr_array.rs:117:16
    |
117 |         return self.aintSize;
    |                ^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
  --> src/expr_array.rs:76:26
   |
76 |         self.aintFirst = self.aint.first();
   |                          ^^^^^^^^^^^^^^^^^ expected u32, found &u32
   |
   = note: expected type `std::option::Option<u32>`
              found type `std::option::Option<&u32>`

error[E0308]: mismatched types
  --> src/expr_array.rs:77:16
   |
77 |         return self.aintFirst;
   |                ^^^^^^^^^^^^^^ expected u32, found enum `std::option::Option`
   |
   = note: expected type `u32`
              found type `std::option::Option<u32>`

error[E0308]: mismatched types
   --> src/expr_array.rs:124:25
    |
124 |         self.aintLast = self.aint.last();
    |                         ^^^^^^^^^^^^^^^^ expected u32, found &u32
    |
    = note: expected type `std::option::Option<u32>`
               found type `std::option::Option<&u32>`

error[E0308]: mismatched types
   --> src/expr_array.rs:125:16
    |
125 |         return self.aintLast;
    |                ^^^^^^^^^^^^^ expected u32, found enum `std::option::Option`
    |
    = note: expected type `u32`
               found type `std::option::Option<u32>`

error[E0308]: mismatched types
  --> src/expr_array.rs:84:27
   |
84 |         self.afloatSize = self.afloat.len();
   |                           ^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found usize
   |
   = note: expected type `std::option::Option<i32>`
              found type `usize`

error[E0308]: mismatched types
  --> src/expr_array.rs:85:16
   |
85 |         return self.afloatSize;
   |                ^^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/expr_array.rs:132:27
    |
132 |         self.afloatLast = self.afloat.last();
    |                           ^^^^^^^^^^^^^^^^^^ expected f64, found &f64
    |
    = note: expected type `std::option::Option<f64>`
               found type `std::option::Option<&f64>`

error[E0308]: mismatched types
   --> src/expr_array.rs:133:16
    |
133 |         return self.afloatLast;
    |                ^^^^^^^^^^^^^^^ expected f64, found enum `std::option::Option`
    |
    = note: expected type `f64`
               found type `std::option::Option<f64>`

error[E0308]: mismatched types
  --> src/expr_array.rs:92:25
   |
92 |         self.astrSize = self.astr.len();
   |                         ^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found usize
   |
   = note: expected type `std::option::Option<i32>`
              found type `usize`

error[E0308]: mismatched types
  --> src/expr_array.rs:93:16
   |
93 |         return self.astrSize;
   |                ^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/expr_array.rs:140:26
    |
140 |         self.astrFirst = self.astr.first();
    |                          ^^^^^^^^^^^^^^^^^ expected struct `std::string::String`, found reference
    |
    = note: expected type `std::option::Option<std::string::String>`
               found type `std::option::Option<&std::string::String>`

error[E0308]: mismatched types
   --> src/expr_array.rs:141:16
    |
141 |         return self.astrFirst;
    |                ^^^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
    |
    = note: expected type `std::string::String`
               found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
   --> src/expr_array.rs:100:24
    |
100 |         self.aintMin = self.aint.iter().min();
    |                        ^^^^^^^^^^^^^^^^^^^^^^ expected u32, found &u32
    |
    = note: expected type `std::option::Option<u32>`
               found type `std::option::Option<&u32>`

error[E0308]: mismatched types
   --> src/expr_array.rs:101:16
    |
101 |         return self.aintMin;
    |                ^^^^^^^^^^^^ expected u32, found enum `std::option::Option`
    |
    = note: expected type `u32`
               found type `std::option::Option<u32>`

error[E0277]: the trait bound `f64: std::cmp::Ord` is not satisfied
   --> src/expr_array.rs:108:45
    |
108 |         self.afloatMin = self.afloat.iter().min();
    |                                             ^^^ the trait `std::cmp::Ord` is not implemented for `f64`
    |
    = note: required because of the requirements on the impl of `std::cmp::Ord` for `&f64`

error[E0308]: mismatched types
   --> src/expr_array.rs:148:25
    |
148 |         self.astrLast = self.astr.last();
    |                         ^^^^^^^^^^^^^^^^ expected struct `std::string::String`, found reference
    |
    = note: expected type `std::option::Option<std::string::String>`
               found type `std::option::Option<&std::string::String>`

error[E0308]: mismatched types
   --> src/expr_array.rs:149:16
    |
149 |         return self.astrLast;
    |                ^^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
    |
    = note: expected type `std::string::String`
               found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
   --> src/expr_array.rs:108:26
    |
108 |         self.afloatMin = self.afloat.iter().min();
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^ expected f64, found &f64
    |
    = note: expected type `std::option::Option<f64>`
               found type `std::option::Option<&f64>`

error[E0308]: mismatched types
   --> src/expr_array.rs:109:16
    |
109 |         return self.afloatMin;
    |                ^^^^^^^^^^^^^^ expected f64, found enum `std::option::Option`
    |
    = note: expected type `f64`
               found type `std::option::Option<f64>`

error[E0308]: mismatched types
   --> src/expr_array.rs:156:24
    |
156 |         self.aintMax = self.aint.iter().max();
    |                        ^^^^^^^^^^^^^^^^^^^^^^ expected u32, found &u32
    |
    = note: expected type `std::option::Option<u32>`
               found type `std::option::Option<&u32>`

error[E0308]: mismatched types
   --> src/expr_array.rs:157:16
    |
157 |         return self.aintMax;
    |                ^^^^^^^^^^^^ expected u32, found enum `std::option::Option`
    |
    = note: expected type `u32`
               found type `std::option::Option<u32>`

error[E0308]: mismatched types
   --> src/expr_array.rs:116:25
    |
116 |         self.aintSize = self.aint.len();
    |                         ^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found usize
    |
    = note: expected type `std::option::Option<i32>`
               found type `usize`

error[E0308]: mismatched types
   --> src/expr_array.rs:117:16
    |
117 |         return self.aintSize;
    |                ^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
   --> src/expr_array.rs:164:28
    |
164 |         self.afloatFirst = self.afloat.first();
    |                            ^^^^^^^^^^^^^^^^^^^ expected f64, found &f64
    |
    = note: expected type `std::option::Option<f64>`
               found type `std::option::Option<&f64>`

error[E0308]: mismatched types
   --> src/expr_array.rs:165:16
    |
165 |         return self.afloatFirst;
    |                ^^^^^^^^^^^^^^^^ expected f64, found enum `std::option::Option`
    |
    = note: expected type `f64`
               found type `std::option::Option<f64>`

error[E0308]: mismatched types
   --> src/expr_array.rs:124:25
    |
124 |         self.aintLast = self.aint.last();
    |                         ^^^^^^^^^^^^^^^^ expected u32, found &u32
    |
    = note: expected type `std::option::Option<u32>`
               found type `std::option::Option<&u32>`

error[E0308]: mismatched types
   --> src/expr_array.rs:125:16
    |
125 |         return self.aintLast;
    |                ^^^^^^^^^^^^^ expected u32, found enum `std::option::Option`
    |
    = note: expected type `u32`
               found type `std::option::Option<u32>`

error[E0308]: mismatched types
   --> src/expr_array.rs:172:24
    |
172 |         self.astrMin = self.astr.iter().min();
    |                        ^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::string::String`, found reference
    |
    = note: expected type `std::option::Option<std::string::String>`
               found type `std::option::Option<&std::string::String>`

error[E0308]: mismatched types
   --> src/expr_array.rs:173:16
    |
173 |         return self.astrMin;
    |                ^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
    |
    = note: expected type `std::string::String`
               found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
   --> src/expr_array.rs:132:27
    |
132 |         self.afloatLast = self.afloat.last();
    |                           ^^^^^^^^^^^^^^^^^^ expected f64, found &f64
    |
    = note: expected type `std::option::Option<f64>`
               found type `std::option::Option<&f64>`

error[E0308]: mismatched types
   --> src/expr_array.rs:133:16
    |
133 |         return self.afloatLast;
    |                ^^^^^^^^^^^^^^^ expected f64, found enum `std::option::Option`
    |
    = note: expected type `f64`
               found type `std::option::Option<f64>`

error[E0308]: mismatched types
   --> src/expr_array.rs:180:24
    |
180 |         self.astrMax = self.astr.iter().max();
    |                        ^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::string::String`, found reference
    |
    = note: expected type `std::option::Option<std::string::String>`
               found type `std::option::Option<&std::string::String>`

error[E0308]: mismatched types
   --> src/expr_array.rs:181:16
    |
181 |         return self.astrMax;
    |                ^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
    |
    = note: expected type `std::string::String`
               found type `std::option::Option<std::string::String>`

error[E0277]: the trait bound `f64: std::cmp::Ord` is not satisfied
   --> src/expr_array.rs:188:45
    |
188 |         self.afloatMax = self.afloat.iter().max();
    |                                             ^^^ the trait `std::cmp::Ord` is not implemented for `f64`
    |
    = note: required because of the requirements on the impl of `std::cmp::Ord` for `&f64`

error[E0308]: mismatched types
   --> src/expr_array.rs:140:26
    |
140 |         self.astrFirst = self.astr.first();
    |                          ^^^^^^^^^^^^^^^^^ expected struct `std::string::String`, found reference
    |
    = note: expected type `std::option::Option<std::string::String>`
               found type `std::option::Option<&std::string::String>`

error[E0308]: mismatched types
   --> src/expr_array.rs:141:16
    |
141 |         return self.astrFirst;
    |                ^^^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
    |
    = note: expected type `std::string::String`
               found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
   --> src/expr_array.rs:188:26
    |
188 |         self.afloatMax = self.afloat.iter().max();
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^ expected f64, found &f64
    |
    = note: expected type `std::option::Option<f64>`
               found type `std::option::Option<&f64>`

error[E0308]: mismatched types
   --> src/expr_array.rs:189:16
    |
189 |         return self.afloatMax;
    |                ^^^^^^^^^^^^^^ expected f64, found enum `std::option::Option`
    |
    = note: expected type `f64`
               found type `std::option::Option<f64>`

error[E0609]: no field `stream` on type `expr_bytes_cmp::ExprBytesCmp`
  --> src/expr_bytes_cmp.rs:36:11
   |
36 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`, `isLe`, `ack`, `isGt2` ... and 8 others

error[E0609]: no field `stream` on type `&mut expr_bytes_cmp::ExprBytesCmp`
  --> src/expr_bytes_cmp.rs:49:25
   |
49 |         self.one = self.stream.read_bytes(1)?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_bytes_cmp::ExprBytesCmp`
  --> src/expr_bytes_cmp.rs:50:25
   |
50 |         self.two = self.stream.read_bytes(3)?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/expr_bytes_cmp.rs:48:27
   |
48 |           where Self: Sized {
   |  ___________________________^
49 | |         self.one = self.stream.read_bytes(1)?;
50 | |         self.two = self.stream.read_bytes(3)?;
51 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
   --> src/expr_array.rs:148:25
    |
148 |         self.astrLast = self.astr.last();
    |                         ^^^^^^^^^^^^^^^^ expected struct `std::string::String`, found reference
    |
    = note: expected type `std::option::Option<std::string::String>`
               found type `std::option::Option<&std::string::String>`

error[E0308]: mismatched types
   --> src/expr_array.rs:149:16
    |
149 |         return self.astrLast;
    |                ^^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
    |
    = note: expected type `std::string::String`
               found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
  --> src/expr_bytes_cmp.rs:60:33
   |
60 |         self.isLe = self.two <= self.ack2;
   |                                 ^^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
   |
   = note: expected type `std::vec::Vec<_>`
              found type `std::option::Option<std::vec::Vec<_>>`

error[E0308]: mismatched types
   --> src/expr_array.rs:156:24
    |
156 |         self.aintMax = self.aint.iter().max();
    |                        ^^^^^^^^^^^^^^^^^^^^^^ expected u32, found &u32
    |
    = note: expected type `std::option::Option<u32>`
               found type `std::option::Option<&u32>`

error[E0308]: mismatched types
   --> src/expr_array.rs:157:16
    |
157 |         return self.aintMax;
    |                ^^^^^^^^^^^^ expected u32, found enum `std::option::Option`
    |
    = note: expected type `u32`
               found type `std::option::Option<u32>`

error[E0308]: mismatched types
  --> src/expr_bytes_cmp.rs:60:21
   |
60 |         self.isLe = self.two <= self.ack2;
   |                     ^^^^^^^^^^^^^^^^^^^^^
   |                     |
   |                     expected enum `std::option::Option`, found bool
   |                     help: try using a variant of the expected type: `Some(self.two <= self.ack2)`
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/expr_bytes_cmp.rs:61:16
   |
61 |         return self.isLe;
   |                ^^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0308]: mismatched types
   --> src/expr_array.rs:164:28
    |
164 |         self.afloatFirst = self.afloat.first();
    |                            ^^^^^^^^^^^^^^^^^^^ expected f64, found &f64
    |
    = note: expected type `std::option::Option<f64>`
               found type `std::option::Option<&f64>`

error[E0308]: mismatched types
   --> src/expr_array.rs:165:16
    |
165 |         return self.afloatFirst;
    |                ^^^^^^^^^^^^^^^^ expected f64, found enum `std::option::Option`
    |
    = note: expected type `f64`
               found type `std::option::Option<f64>`

error[E0308]: mismatched types
   --> src/expr_array.rs:172:24
    |
172 |         self.astrMin = self.astr.iter().min();
    |                        ^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::string::String`, found reference
    |
    = note: expected type `std::option::Option<std::string::String>`
               found type `std::option::Option<&std::string::String>`

error[E0308]: mismatched types
   --> src/expr_array.rs:173:16
    |
173 |         return self.astrMin;
    |                ^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
    |
    = note: expected type `std::string::String`
               found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
  --> src/expr_bytes_cmp.rs:68:20
   |
68 |         self.ack = vec!([0x41, 0x43, 0x4b]);
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::vec::Vec`
   |
   = note: expected type `std::option::Option<std::vec::Vec<u8>>`
              found type `std::vec::Vec<[{integer}; 3]>`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error[E0308]: mismatched types
  --> src/expr_bytes_cmp.rs:69:16
   |
69 |         return self.ack;
   |                ^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
   |
   = note: expected type `std::vec::Vec<_>`
              found type `std::option::Option<std::vec::Vec<_>>`

error[E0609]: no field `hi_val` on type `&mut expr_bytes_cmp::ExprBytesCmp`
  --> src/expr_bytes_cmp.rs:76:27
   |
76 |         self.isGt2 = self.hi_val > self.two;
   |                           ^^^^^^

error[E0308]: mismatched types
   --> src/expr_array.rs:180:24
    |
180 |         self.astrMax = self.astr.iter().max();
    |                        ^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::string::String`, found reference
    |
    = note: expected type `std::option::Option<std::string::String>`
               found type `std::option::Option<&std::string::String>`

error[E0308]: mismatched types
   --> src/expr_array.rs:181:16
    |
181 |         return self.astrMax;
    |                ^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
    |
    = note: expected type `std::string::String`
               found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
  --> src/expr_bytes_cmp.rs:76:22
   |
76 |         self.isGt2 = self.hi_val > self.two;
   |                      ^^^^^^^^^^^^^^^^^^^^^^
   |                      |
   |                      expected enum `std::option::Option`, found bool
   |                      help: try using a variant of the expected type: `Some(self.hi_val > self.two)`
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/expr_bytes_cmp.rs:77:16
   |
77 |         return self.isGt2;
   |                ^^^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0277]: the trait bound `f64: std::cmp::Ord` is not satisfied
   --> src/expr_array.rs:188:45
    |
188 |         self.afloatMax = self.afloat.iter().max();
    |                                             ^^^ the trait `std::cmp::Ord` is not implemented for `f64`
    |
    = note: required because of the requirements on the impl of `std::cmp::Ord` for `&f64`

error[E0308]: mismatched types
  --> src/expr_bytes_cmp.rs:84:32
   |
84 |         self.isGt = self.two > self.ack2;
   |                                ^^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
   |
   = note: expected type `std::vec::Vec<_>`
              found type `std::option::Option<std::vec::Vec<_>>`

error[E0308]: mismatched types
   --> src/expr_array.rs:188:26
    |
188 |         self.afloatMax = self.afloat.iter().max();
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^ expected f64, found &f64
    |
    = note: expected type `std::option::Option<f64>`
               found type `std::option::Option<&f64>`

error[E0308]: mismatched types
   --> src/expr_array.rs:189:16
    |
189 |         return self.afloatMax;
    |                ^^^^^^^^^^^^^^ expected f64, found enum `std::option::Option`
    |
    = note: expected type `f64`
               found type `std::option::Option<f64>`

error[E0609]: no field `stream` on type `expr_bytes_cmp::ExprBytesCmp`
  --> src/expr_bytes_cmp.rs:36:11
   |
36 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`, `isLe`, `ack`, `isGt2` ... and 8 others

error[E0609]: no field `stream` on type `&mut expr_bytes_cmp::ExprBytesCmp`
  --> src/expr_bytes_cmp.rs:49:25
   |
49 |         self.one = self.stream.read_bytes(1)?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_bytes_cmp::ExprBytesCmp`
  --> src/expr_bytes_cmp.rs:50:25
   |
50 |         self.two = self.stream.read_bytes(3)?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/expr_bytes_cmp.rs:48:27
   |
48 |           where Self: Sized {
   |  ___________________________^
49 | |         self.one = self.stream.read_bytes(1)?;
50 | |         self.two = self.stream.read_bytes(3)?;
51 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/expr_bytes_cmp.rs:84:21
   |
84 |         self.isGt = self.two > self.ack2;
   |                     ^^^^^^^^^^^^^^^^^^^^
   |                     |
   |                     expected enum `std::option::Option`, found bool
   |                     help: try using a variant of the expected type: `Some(self.two > self.ack2)`
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/expr_bytes_cmp.rs:85:16
   |
85 |         return self.isGt;
   |                ^^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0308]: mismatched types
  --> src/expr_bytes_cmp.rs:60:33
   |
60 |         self.isLe = self.two <= self.ack2;
   |                                 ^^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
   |
   = note: expected type `std::vec::Vec<_>`
              found type `std::option::Option<std::vec::Vec<_>>`

error[E0308]: mismatched types
  --> src/expr_bytes_cmp.rs:92:21
   |
92 |         self.ack2 = vec!([0x41, 0x43, 0x4b, 0x32]);
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::vec::Vec`
   |
   = note: expected type `std::option::Option<std::vec::Vec<u8>>`
              found type `std::vec::Vec<[{integer}; 4]>`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error[E0308]: mismatched types
  --> src/expr_bytes_cmp.rs:93:16
   |
93 |         return self.ack2;
   |                ^^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
   |
   = note: expected type `std::vec::Vec<_>`
              found type `std::option::Option<std::vec::Vec<_>>`

error[E0308]: mismatched types
  --> src/expr_bytes_cmp.rs:60:21
   |
60 |         self.isLe = self.two <= self.ack2;
   |                     ^^^^^^^^^^^^^^^^^^^^^
   |                     |
   |                     expected enum `std::option::Option`, found bool
   |                     help: try using a variant of the expected type: `Some(self.two <= self.ack2)`
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/expr_bytes_cmp.rs:61:16
   |
61 |         return self.isLe;
   |                ^^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:100:21
    |
100 |         self.isEq = self.two == self.ack;
    |                     ^^^^^^^^^^^^^^^^^^^^
    |                     |
    |                     expected enum `std::option::Option`, found bool
    |                     help: try using a variant of the expected type: `Some(self.two == self.ack)`
    |
    = note: expected type `std::option::Option<bool>`
               found type `bool`

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:101:16
    |
101 |         return self.isEq;
    |                ^^^^^^^^^ expected bool, found enum `std::option::Option`
    |
    = note: expected type `bool`
               found type `std::option::Option<bool>`

error[E0277]: the trait bound `std::vec::Vec<u8>: std::cmp::PartialEq<std::option::Option<std::vec::Vec<u8>>>` is not satisfied
   --> src/expr_bytes_cmp.rs:100:30
    |
100 |         self.isEq = self.two == self.ack;
    |                              ^^ can't compare `std::vec::Vec<u8>` with `std::option::Option<std::vec::Vec<u8>>`
    |
    = help: the trait `std::cmp::PartialEq<std::option::Option<std::vec::Vec<u8>>>` is not implemented for `std::vec::Vec<u8>`

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:108:22
    |
108 |         self.isLt2 = self.one < self.two;
    |                      ^^^^^^^^^^^^^^^^^^^
    |                      |
    |                      expected enum `std::option::Option`, found bool
    |                      help: try using a variant of the expected type: `Some(self.one < self.two)`
    |
    = note: expected type `std::option::Option<bool>`
               found type `bool`

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:109:16
    |
109 |         return self.isLt2;
    |                ^^^^^^^^^^ expected bool, found enum `std::option::Option`
    |
    = note: expected type `bool`
               found type `std::option::Option<bool>`

error[E0308]: mismatched types
  --> src/expr_bytes_cmp.rs:68:20
   |
68 |         self.ack = vec!([0x41, 0x43, 0x4b]);
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::vec::Vec`
   |
   = note: expected type `std::option::Option<std::vec::Vec<u8>>`
              found type `std::vec::Vec<[{integer}; 3]>`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error[E0308]: mismatched types
  --> src/expr_bytes_cmp.rs:69:16
   |
69 |         return self.ack;
   |                ^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
   |
   = note: expected type `std::vec::Vec<_>`
              found type `std::option::Option<std::vec::Vec<_>>`

error[E0609]: no field `hi_val` on type `&mut expr_bytes_cmp::ExprBytesCmp`
  --> src/expr_bytes_cmp.rs:76:27
   |
76 |         self.isGt2 = self.hi_val > self.two;
   |                           ^^^^^^

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:116:33
    |
116 |         self.isGe = self.two >= self.ack2;
    |                                 ^^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
    |
    = note: expected type `std::vec::Vec<_>`
               found type `std::option::Option<std::vec::Vec<_>>`

error[E0308]: mismatched types
  --> src/expr_bytes_cmp.rs:76:22
   |
76 |         self.isGt2 = self.hi_val > self.two;
   |                      ^^^^^^^^^^^^^^^^^^^^^^
   |                      |
   |                      expected enum `std::option::Option`, found bool
   |                      help: try using a variant of the expected type: `Some(self.hi_val > self.two)`
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/expr_bytes_cmp.rs:77:16
   |
77 |         return self.isGt2;
   |                ^^^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:116:21
    |
116 |         self.isGe = self.two >= self.ack2;
    |                     ^^^^^^^^^^^^^^^^^^^^^
    |                     |
    |                     expected enum `std::option::Option`, found bool
    |                     help: try using a variant of the expected type: `Some(self.two >= self.ack2)`
    |
    = note: expected type `std::option::Option<bool>`
               found type `bool`

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:117:16
    |
117 |         return self.isGe;
    |                ^^^^^^^^^ expected bool, found enum `std::option::Option`
    |
    = note: expected type `bool`
               found type `std::option::Option<bool>`

error[E0308]: mismatched types
  --> src/expr_bytes_cmp.rs:84:32
   |
84 |         self.isGt = self.two > self.ack2;
   |                                ^^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
   |
   = note: expected type `std::vec::Vec<_>`
              found type `std::option::Option<std::vec::Vec<_>>`

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:124:22
    |
124 |         self.hiVal = vec!([0x90, 0x43]);
    |                      ^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::vec::Vec`
    |
    = note: expected type `std::option::Option<std::vec::Vec<u8>>`
               found type `std::vec::Vec<[{integer}; 2]>`
    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:125:16
    |
125 |         return self.hiVal;
    |                ^^^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
    |
    = note: expected type `std::vec::Vec<_>`
               found type `std::option::Option<std::vec::Vec<_>>`

error[E0308]: mismatched types
  --> src/expr_bytes_cmp.rs:84:21
   |
84 |         self.isGt = self.two > self.ack2;
   |                     ^^^^^^^^^^^^^^^^^^^^
   |                     |
   |                     expected enum `std::option::Option`, found bool
   |                     help: try using a variant of the expected type: `Some(self.two > self.ack2)`
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/expr_bytes_cmp.rs:85:16
   |
85 |         return self.isGt;
   |                ^^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:132:21
    |
132 |         self.isNe = self.two != self.ack;
    |                     ^^^^^^^^^^^^^^^^^^^^
    |                     |
    |                     expected enum `std::option::Option`, found bool
    |                     help: try using a variant of the expected type: `Some(self.two != self.ack)`
    |
    = note: expected type `std::option::Option<bool>`
               found type `bool`

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:133:16
    |
133 |         return self.isNe;
    |                ^^^^^^^^^ expected bool, found enum `std::option::Option`
    |
    = note: expected type `bool`
               found type `std::option::Option<bool>`

error[E0277]: the trait bound `std::vec::Vec<u8>: std::cmp::PartialEq<std::option::Option<std::vec::Vec<u8>>>` is not satisfied
   --> src/expr_bytes_cmp.rs:132:30
    |
132 |         self.isNe = self.two != self.ack;
    |                              ^^ can't compare `std::vec::Vec<u8>` with `std::option::Option<std::vec::Vec<u8>>`
    |
    = help: the trait `std::cmp::PartialEq<std::option::Option<std::vec::Vec<u8>>>` is not implemented for `std::vec::Vec<u8>`

error[E0308]: mismatched types
  --> src/expr_bytes_cmp.rs:92:21
   |
92 |         self.ack2 = vec!([0x41, 0x43, 0x4b, 0x32]);
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::vec::Vec`
   |
   = note: expected type `std::option::Option<std::vec::Vec<u8>>`
              found type `std::vec::Vec<[{integer}; 4]>`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error[E0308]: mismatched types
  --> src/expr_bytes_cmp.rs:93:16
   |
93 |         return self.ack2;
   |                ^^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
   |
   = note: expected type `std::vec::Vec<_>`
              found type `std::option::Option<std::vec::Vec<_>>`

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:140:32
    |
140 |         self.isLt = self.two < self.ack2;
    |                                ^^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
    |
    = note: expected type `std::vec::Vec<_>`
               found type `std::option::Option<std::vec::Vec<_>>`

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:100:21
    |
100 |         self.isEq = self.two == self.ack;
    |                     ^^^^^^^^^^^^^^^^^^^^
    |                     |
    |                     expected enum `std::option::Option`, found bool
    |                     help: try using a variant of the expected type: `Some(self.two == self.ack)`
    |
    = note: expected type `std::option::Option<bool>`
               found type `bool`

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:101:16
    |
101 |         return self.isEq;
    |                ^^^^^^^^^ expected bool, found enum `std::option::Option`
    |
    = note: expected type `bool`
               found type `std::option::Option<bool>`

error[E0277]: the trait bound `std::vec::Vec<u8>: std::cmp::PartialEq<std::option::Option<std::vec::Vec<u8>>>` is not satisfied
   --> src/expr_bytes_cmp.rs:100:30
    |
100 |         self.isEq = self.two == self.ack;
    |                              ^^ can't compare `std::vec::Vec<u8>` with `std::option::Option<std::vec::Vec<u8>>`
    |
    = help: the trait `std::cmp::PartialEq<std::option::Option<std::vec::Vec<u8>>>` is not implemented for `std::vec::Vec<u8>`

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:140:21
    |
140 |         self.isLt = self.two < self.ack2;
    |                     ^^^^^^^^^^^^^^^^^^^^
    |                     |
    |                     expected enum `std::option::Option`, found bool
    |                     help: try using a variant of the expected type: `Some(self.two < self.ack2)`
    |
    = note: expected type `std::option::Option<bool>`
               found type `bool`

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:141:16
    |
141 |         return self.isLt;
    |                ^^^^^^^^^ expected bool, found enum `std::option::Option`
    |
    = note: expected type `bool`
               found type `std::option::Option<bool>`

error[E0609]: no field `stream` on type `expr_enum::ExprEnum`
  --> src/expr_enum.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `constDog`, `derivedBoom`, `derivedDog`

error[E0609]: no field `stream` on type `&mut expr_enum::ExprEnum`
  --> src/expr_enum.rs:40:25
   |
40 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/expr_enum.rs:39:27
   |
39 |           where Self: Sized {
   |  ___________________________^
40 | |         self.one = self.stream.read_u1()?;
41 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:108:22
    |
108 |         self.isLt2 = self.one < self.two;
    |                      ^^^^^^^^^^^^^^^^^^^
    |                      |
    |                      expected enum `std::option::Option`, found bool
    |                      help: try using a variant of the expected type: `Some(self.one < self.two)`
    |
    = note: expected type `std::option::Option<bool>`
               found type `bool`

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:109:16
    |
109 |         return self.isLt2;
    |                ^^^^^^^^^^ expected bool, found enum `std::option::Option`
    |
    = note: expected type `bool`
               found type `std::option::Option<bool>`

error[E0308]: mismatched types
  --> src/expr_enum.rs:50:25
   |
50 |         self.constDog = 4;
   |                         ^ expected enum `std::option::Option`, found integral variable
   |
   = note: expected type `std::option::Option<std::boxed::Box<expr_enum::ExprEnum__Animal>>`
              found type `{integer}`

error[E0308]: mismatched types
  --> src/expr_enum.rs:51:16
   |
51 |         return self.constDog;
   |                ^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:116:33
    |
116 |         self.isGe = self.two >= self.ack2;
    |                                 ^^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
    |
    = note: expected type `std::vec::Vec<_>`
               found type `std::option::Option<std::vec::Vec<_>>`

error[E0308]: mismatched types
  --> src/expr_enum.rs:58:28
   |
58 |         self.derivedBoom = self.one;
   |                            ^^^^^^^^ expected enum `std::option::Option`, found u8
   |
   = note: expected type `std::option::Option<std::boxed::Box<expr_enum::ExprEnum__Animal>>`
              found type `u8`

error[E0308]: mismatched types
  --> src/expr_enum.rs:59:16
   |
59 |         return self.derivedBoom;
   |                ^^^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:116:21
    |
116 |         self.isGe = self.two >= self.ack2;
    |                     ^^^^^^^^^^^^^^^^^^^^^
    |                     |
    |                     expected enum `std::option::Option`, found bool
    |                     help: try using a variant of the expected type: `Some(self.two >= self.ack2)`
    |
    = note: expected type `std::option::Option<bool>`
               found type `bool`

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:117:16
    |
117 |         return self.isGe;
    |                ^^^^^^^^^ expected bool, found enum `std::option::Option`
    |
    = note: expected type `bool`
               found type `std::option::Option<bool>`

error[E0308]: mismatched types
  --> src/expr_enum.rs:66:27
   |
66 |         self.derivedDog = (self.one - 98);
   |                           ^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
   |
   = note: expected type `std::option::Option<std::boxed::Box<expr_enum::ExprEnum__Animal>>`
              found type `u8`

error[E0308]: mismatched types
  --> src/expr_enum.rs:67:16
   |
67 |         return self.derivedDog;
   |                ^^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `expr_io_eof::ExprIoEof`
  --> src/expr_io_eof.rs:28:11
   |
28 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `substream1`, `substream2`, `_raw_substream1`, `_raw_substream2`

error[E0609]: no field `stream` on type `&mut expr_io_eof::ExprIoEof`
  --> src/expr_io_eof.rs:41:37
   |
41 |         self._raw_substream1 = self.stream.read_bytes(4)?;
   |                                     ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_io_eof::ExprIoEof`
  --> src/expr_io_eof.rs:43:66
   |
43 |         self.substream1 = Box::new(ExprIoEof__OneOrTwo::new(self.stream, self, _root)?);
   |                                                                  ^^^^^^

error[E0308]: mismatched types
  --> src/expr_io_eof.rs:43:74
   |
43 |         self.substream1 = Box::new(ExprIoEof__OneOrTwo::new(self.stream, self, _root)?);
   |                                                                          ^^^^ expected enum `std::option::Option`, found struct `expr_io_eof::ExprIoEof`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut expr_io_eof::ExprIoEof`

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:124:22
    |
124 |         self.hiVal = vec!([0x90, 0x43]);
    |                      ^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::vec::Vec`
    |
    = note: expected type `std::option::Option<std::vec::Vec<u8>>`
               found type `std::vec::Vec<[{integer}; 2]>`
error[E0609]: no field `stream` on type `&mut expr_io_eof::ExprIoEof`
  --> src/expr_io_eof.rs:44:37
   |
44 |         self._raw_substream2 = self.stream.read_bytes(8)?;
   |                                     ^^^^^^

    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:125:16
    |
125 |         return self.hiVal;
    |                ^^^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
    |
    = note: expected type `std::vec::Vec<_>`
               found type `std::option::Option<std::vec::Vec<_>>`

error[E0609]: no field `stream` on type `&mut expr_io_eof::ExprIoEof`
  --> src/expr_io_eof.rs:46:66
   |
46 |         self.substream2 = Box::new(ExprIoEof__OneOrTwo::new(self.stream, self, _root)?);
   |                                                                  ^^^^^^

error[E0308]: mismatched types
  --> src/expr_io_eof.rs:46:74
   |
46 |         self.substream2 = Box::new(ExprIoEof__OneOrTwo::new(self.stream, self, _root)?);
   |                                                                          ^^^^ expected enum `std::option::Option`, found struct `expr_io_eof::ExprIoEof`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut expr_io_eof::ExprIoEof`

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:132:21
    |
132 |         self.isNe = self.two != self.ack;
    |                     ^^^^^^^^^^^^^^^^^^^^
    |                     |
    |                     expected enum `std::option::Option`, found bool
    |                     help: try using a variant of the expected type: `Some(self.two != self.ack)`
    |
    = note: expected type `std::option::Option<bool>`
               found type `bool`

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:133:16
    |
133 |         return self.isNe;
    |                ^^^^^^^^^ expected bool, found enum `std::option::Option`
    |
    = note: expected type `bool`
               found type `std::option::Option<bool>`

error[E0308]: mismatched types
  --> src/expr_io_eof.rs:40:27
   |
40 |           where Self: Sized {
   |  ___________________________^
41 | |         self._raw_substream1 = self.stream.read_bytes(4)?;
42 | |         let mut io = Cursor::new(self._raw_substream1);
43 | |         self.substream1 = Box::new(ExprIoEof__OneOrTwo::new(self.stream, self, _root)?);
...  |
46 | |         self.substream2 = Box::new(ExprIoEof__OneOrTwo::new(self.stream, self, _root)?);
47 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0277]: the trait bound `std::vec::Vec<u8>: std::cmp::PartialEq<std::option::Option<std::vec::Vec<u8>>>` is not satisfied
   --> src/expr_bytes_cmp.rs:132:30
    |
132 |         self.isNe = self.two != self.ack;
    |                              ^^ can't compare `std::vec::Vec<u8>` with `std::option::Option<std::vec::Vec<u8>>`
    |
    = help: the trait `std::cmp::PartialEq<std::option::Option<std::vec::Vec<u8>>>` is not implemented for `std::vec::Vec<u8>`

error[E0609]: no field `stream` on type `expr_io_eof::ExprIoEof__OneOrTwo`
  --> src/expr_io_eof.rs:67:11
   |
67 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`, `reflectEof`

error[E0609]: no field `stream` on type `&mut expr_io_eof::ExprIoEof__OneOrTwo`
  --> src/expr_io_eof.rs:80:25
   |
80 |         self.one = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0609]: no field `_io` on type `&mut expr_io_eof::ExprIoEof__OneOrTwo`
  --> src/expr_io_eof.rs:81:19
   |
81 |         if !(self._io.is_eof) {
   |                   ^^^

error[E0609]: no field `stream` on type `&mut expr_io_eof::ExprIoEof__OneOrTwo`
  --> src/expr_io_eof.rs:82:29
   |
82 |             self.two = self.stream.read_u4le()?;
   |                             ^^^^^^

error[E0308]: mismatched types
  --> src/expr_io_eof.rs:81:31
   |
81 |           if !(self._io.is_eof) {
   |  _______________________________^
82 | |             self.two = self.stream.read_u4le()?;
83 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `_io` on type `&mut expr_io_eof::ExprIoEof__OneOrTwo`
  --> src/expr_io_eof.rs:93:32
   |
93 |         self.reflectEof = self._io.is_eof;
   |                                ^^^

error[E0308]: mismatched types
  --> src/expr_io_eof.rs:94:16
   |
94 |         return self.reflectEof;
   |                ^^^^^^^^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0609]: no field `stream` on type `expr_io_pos::ExprIoPos`
  --> src/expr_io_pos.rs:28:11
   |
28 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `substream1`, `substream2`, `_raw_substream1`, `_raw_substream2`

error[E0609]: no field `stream` on type `&mut expr_io_pos::ExprIoPos`
  --> src/expr_io_pos.rs:41:37
   |
41 |         self._raw_substream1 = self.stream.read_bytes(16)?;
   |                                     ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_io_pos::ExprIoPos`
  --> src/expr_io_pos.rs:43:71
   |
43 |         self.substream1 = Box::new(ExprIoPos__AllPlusNumber::new(self.stream, self, _root)?);
   |                                                                       ^^^^^^

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:140:32
    |
140 |         self.isLt = self.two < self.ack2;
    |                                ^^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
    |
    = note: expected type `std::vec::Vec<_>`
               found type `std::option::Option<std::vec::Vec<_>>`

error[E0308]: mismatched types
  --> src/expr_io_pos.rs:43:79
   |
43 |         self.substream1 = Box::new(ExprIoPos__AllPlusNumber::new(self.stream, self, _root)?);
   |                                                                               ^^^^ expected enum `std::option::Option`, found struct `expr_io_pos::ExprIoPos`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut expr_io_pos::ExprIoPos`

error[E0609]: no field `stream` on type `&mut expr_io_pos::ExprIoPos`
  --> src/expr_io_pos.rs:44:37
   |
44 |         self._raw_substream2 = self.stream.read_bytes(14)?;
   |                                     ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_io_pos::ExprIoPos`
  --> src/expr_io_pos.rs:46:71
   |
46 |         self.substream2 = Box::new(ExprIoPos__AllPlusNumber::new(self.stream, self, _root)?);
   |                                                                       ^^^^^^

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:140:21
    |
140 |         self.isLt = self.two < self.ack2;
    |                     ^^^^^^^^^^^^^^^^^^^^
    |                     |
    |                     expected enum `std::option::Option`, found bool
    |                     help: try using a variant of the expected type: `Some(self.two < self.ack2)`
    |
    = note: expected type `std::option::Option<bool>`
               found type `bool`

error[E0308]: mismatched types
   --> src/expr_bytes_cmp.rs:141:16
    |
141 |         return self.isLt;
    |                ^^^^^^^^^ expected bool, found enum `std::option::Option`
    |
    = note: expected type `bool`
               found type `std::option::Option<bool>`

error[E0609]: no field `stream` on type `expr_enum::ExprEnum`
  --> src/expr_enum.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `constDog`, `derivedBoom`, `derivedDog`

error[E0609]: no field `stream` on type `&mut expr_enum::ExprEnum`
  --> src/expr_enum.rs:40:25
   |
40 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/expr_enum.rs:39:27
   |
39 |           where Self: Sized {
   |  ___________________________^
40 | |         self.one = self.stream.read_u1()?;
41 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/expr_io_pos.rs:46:79
   |
46 |         self.substream2 = Box::new(ExprIoPos__AllPlusNumber::new(self.stream, self, _root)?);
   |                                                                               ^^^^ expected enum `std::option::Option`, found struct `expr_io_pos::ExprIoPos`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut expr_io_pos::ExprIoPos`

error[E0308]: mismatched types
  --> src/expr_io_pos.rs:40:27
   |
40 |           where Self: Sized {
   |  ___________________________^
41 | |         self._raw_substream1 = self.stream.read_bytes(16)?;
42 | |         let mut io = Cursor::new(self._raw_substream1);
43 | |         self.substream1 = Box::new(ExprIoPos__AllPlusNumber::new(self.stream, self, _root)?);
...  |
46 | |         self.substream2 = Box::new(ExprIoPos__AllPlusNumber::new(self.stream, self, _root)?);
47 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `expr_io_pos::ExprIoPos__AllPlusNumber`
  --> src/expr_io_pos.rs:67:11
   |
67 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `myStr`, `body`, `number`

warning: unreachable expression
  --> src/expr_io_pos.rs:80:9
   |
80 |         self.myStr = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut expr_io_pos::ExprIoPos__AllPlusNumber`
  --> src/expr_io_pos.rs:81:26
   |
81 |         self.body = self.stream.read_bytes(((self._io.size - self._io.pos) - 2))?;
   |                          ^^^^^^

error[E0609]: no field `_io` on type `&mut expr_io_pos::ExprIoPos__AllPlusNumber`
  --> src/expr_io_pos.rs:81:51
   |
81 |         self.body = self.stream.read_bytes(((self._io.size - self._io.pos) - 2))?;
   |                                                   ^^^

error[E0609]: no field `_io` on type `&mut expr_io_pos::ExprIoPos__AllPlusNumber`
  --> src/expr_io_pos.rs:81:67
   |
81 |         self.body = self.stream.read_bytes(((self._io.size - self._io.pos) - 2))?;
   |                                                                   ^^^

error[E0609]: no field `stream` on type `&mut expr_io_pos::ExprIoPos__AllPlusNumber`
  --> src/expr_io_pos.rs:82:28
   |
82 |         self.number = self.stream.read_u2le()?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `expr_mod::ExprMod`
  --> src/expr_mod.rs:29:11
   |
29 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `intU`, `intS`, `modPosConst`, `modNegConst`, `modPosSeq`, `modNegSeq`

error[E0609]: no field `stream` on type `&mut expr_mod::ExprMod`
  --> src/expr_mod.rs:42:26
   |
42 |         self.intU = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_mod::ExprMod`
  --> src/expr_mod.rs:43:26
   |
43 |         self.intS = self.stream.read_s4le()?;
   |                          ^^^^^^

error[E0308]: mismatched types
  --> src/expr_mod.rs:41:27
   |
41 |           where Self: Sized {
   |  ___________________________^
42 | |         self.intU = self.stream.read_u4le()?;
43 | |         self.intS = self.stream.read_s4le()?;
44 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/expr_enum.rs:50:25
   |
50 |         self.constDog = 4;
   |                         ^ expected enum `std::option::Option`, found integral variable
   |
   = note: expected type `std::option::Option<std::boxed::Box<expr_enum::ExprEnum__Animal>>`
              found type `{integer}`

error[E0308]: mismatched types
  --> src/expr_enum.rs:51:16
   |
51 |         return self.constDog;
   |                ^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0308]: mismatched types
  --> src/expr_mod.rs:53:28
   |
53 |         self.modPosConst = 9837 % 13;
   |                            ^^^^^^^^^
   |                            |
   |                            expected enum `std::option::Option`, found integral variable
   |                            help: try using a variant of the expected type: `Some(9837 % 13)`
   |
   = note: expected type `std::option::Option<i32>`
              found type `{integer}`

error[E0308]: mismatched types
  --> src/expr_mod.rs:54:16
   |
54 |         return self.modPosConst;
   |                ^^^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0308]: mismatched types
  --> src/expr_enum.rs:58:28
   |
58 |         self.derivedBoom = self.one;
   |                            ^^^^^^^^ expected enum `std::option::Option`, found u8
   |
   = note: expected type `std::option::Option<std::boxed::Box<expr_enum::ExprEnum__Animal>>`
              found type `u8`

error[E0308]: mismatched types
  --> src/expr_enum.rs:59:16
   |
59 |         return self.derivedBoom;
   |                ^^^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0308]: mismatched types
  --> src/expr_mod.rs:61:28
   |
61 |         self.modNegConst = -9837 % 13;
   |                            ^^^^^^^^^^
   |                            |
   |                            expected enum `std::option::Option`, found integral variable
   |                            help: try using a variant of the expected type: `Some(-9837 % 13)`
   |
   = note: expected type `std::option::Option<i32>`
              found type `{integer}`

error[E0308]: mismatched types
  --> src/expr_mod.rs:62:16
   |
62 |         return self.modNegConst;
   |                ^^^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0609]: no field `int_u` on type `&mut expr_mod::ExprMod`
  --> src/expr_mod.rs:69:31
   |
69 |         self.modPosSeq = self.int_u % 13;
   |                               ^^^^^

error[E0308]: mismatched types
  --> src/expr_mod.rs:70:16
   |
70 |         return self.modPosSeq;
   |                ^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0609]: no field `int_s` on type `&mut expr_mod::ExprMod`
  --> src/expr_mod.rs:77:31
   |
77 |         self.modNegSeq = self.int_s % 13;
   |                               ^^^^^

error[E0308]: mismatched types
  --> src/expr_mod.rs:78:16
   |
78 |         return self.modNegSeq;
   |                ^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `fixed_contents::FixedContents`
  --> src/fixed_contents.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `normal`, `highBit8`

error[E0609]: no field `stream` on type `&mut fixed_contents::FixedContents`
  --> src/fixed_contents.rs:38:28
   |
38 |         self.normal = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x31]));
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_contents::FixedContents`
  --> src/fixed_contents.rs:39:30
   |
39 |         self.highBit8 = self.stream.ensureFixedContents(vec!([0xff, 0xff]));
   |                              ^^^^^^

error[E0308]: mismatched types
  --> src/fixed_contents.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.normal = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x31]));
39 | |         self.highBit8 = self.stream.ensureFixedContents(vec!([0xff, 0xff]));
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `fixed_struct::FixedStruct`
  --> src/fixed_struct.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `hdr`

error[E0308]: mismatched types
  --> src/fixed_struct.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct`
  --> src/fixed_struct.rs:46:25
   |
46 |         let _pos = self.stream.pos();
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct`
  --> src/fixed_struct.rs:47:14
   |
47 |         self.stream.seek(0);
   |              ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct`
  --> src/fixed_struct.rs:48:59
   |
48 |         self.hdr = Box::new(FixedStruct__Header::new(self.stream, self, _root)?);
   |                                                           ^^^^^^

error[E0308]: mismatched types
  --> src/expr_enum.rs:66:27
   |
66 |         self.derivedDog = (self.one - 98);
   |                           ^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
   |
   = note: expected type `std::option::Option<std::boxed::Box<expr_enum::ExprEnum__Animal>>`
              found type `u8`

error[E0308]: mismatched types
  --> src/expr_enum.rs:67:16
   |
67 |         return self.derivedDog;
   |                ^^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `expr_io_eof::ExprIoEof`
  --> src/expr_io_eof.rs:28:11
   |
28 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `substream1`, `substream2`, `_raw_substream1`, `_raw_substream2`

error[E0609]: no field `stream` on type `&mut expr_io_eof::ExprIoEof`
  --> src/expr_io_eof.rs:41:37
   |
41 |         self._raw_substream1 = self.stream.read_bytes(4)?;
   |                                     ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_io_eof::ExprIoEof`
  --> src/expr_io_eof.rs:43:66
   |
43 |         self.substream1 = Box::new(ExprIoEof__OneOrTwo::new(self.stream, self, _root)?);
   |                                                                  ^^^^^^

error[E0308]: mismatched types
  --> src/fixed_struct.rs:48:67
   |
48 |         self.hdr = Box::new(FixedStruct__Header::new(self.stream, self, _root)?);
   |                                                                   ^^^^ expected enum `std::option::Option`, found struct `fixed_struct::FixedStruct`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut fixed_struct::FixedStruct`

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/fixed_struct.rs:48:29
   |
48 |         self.hdr = Box::new(FixedStruct__Header::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::boxed::Box<fixed_struct::FixedStruct__Header>`
   |
   = help: the trait `std::ops::Try` is not implemented for `std::boxed::Box<fixed_struct::FixedStruct__Header>`
   = note: required by `std::ops::Try::from_error`

error[E0308]: mismatched types
  --> src/expr_io_eof.rs:43:74
   |
43 |         self.substream1 = Box::new(ExprIoEof__OneOrTwo::new(self.stream, self, _root)?);
   |                                                                          ^^^^ expected enum `std::option::Option`, found struct `expr_io_eof::ExprIoEof`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut expr_io_eof::ExprIoEof`

error[E0609]: no field `stream` on type `&mut expr_io_eof::ExprIoEof`
  --> src/expr_io_eof.rs:44:37
   |
44 |         self._raw_substream2 = self.stream.read_bytes(8)?;
   |                                     ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_io_eof::ExprIoEof`
  --> src/expr_io_eof.rs:46:66
   |
46 |         self.substream2 = Box::new(ExprIoEof__OneOrTwo::new(self.stream, self, _root)?);
   |                                                                  ^^^^^^

error[E0308]: mismatched types
  --> src/fixed_struct.rs:48:20
   |
48 |         self.hdr = Box::new(FixedStruct__Header::new(self.stream, self, _root)?);
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<_>>`
              found type `std::boxed::Box<_>`
help: try using a variant of the expected type
   |
48 |         self.hdr = Some(<Box>::new(match ::std::ops::Try::into_result(<FixedStruct__Header>::new(self.stream,
49 |                                                                          self,
50 |                                                                          _root))
51 |                {
52 |                ::std::result::Result::Err(err) =>
53 |                    #[allow(unreachable_code)]
 ...

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct`
  --> src/fixed_struct.rs:49:14
   |
49 |         self.stream.seek(_pos);
   |              ^^^^^^

error[E0308]: mismatched types
  --> src/fixed_struct.rs:50:16
   |
50 |         return self.hdr;
   |                ^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `fixed_struct::FixedStruct__Header`
  --> src/fixed_struct.rs:92:11
   |
92 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `magic1`, `uint8`, `sint8`, `magicUint`, `uint16` ... and 22 others

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:105:28
    |
105 |         self.magic1 = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x31]));
    |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:106:27
    |
106 |         self.uint8 = self.stream.read_u1()?;
    |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:107:27
    |
107 |         self.sint8 = self.stream.read_s1()?;
    |                           ^^^^^^

error[E0308]: mismatched types
  --> src/expr_io_eof.rs:46:74
   |
46 |         self.substream2 = Box::new(ExprIoEof__OneOrTwo::new(self.stream, self, _root)?);
   |                                                                          ^^^^ expected enum `std::option::Option`, found struct `expr_io_eof::ExprIoEof`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut expr_io_eof::ExprIoEof`

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:108:31
    |
108 |         self.magicUint = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x55, 0x2d, 0x44, 0x45, 0x46]));
    |                               ^^^^^^

error[E0308]: mismatched types
  --> src/expr_io_eof.rs:40:27
   |
40 |           where Self: Sized {
   |  ___________________________^
41 | |         self._raw_substream1 = self.stream.read_bytes(4)?;
42 | |         let mut io = Cursor::new(self._raw_substream1);
43 | |         self.substream1 = Box::new(ExprIoEof__OneOrTwo::new(self.stream, self, _root)?);
...  |
46 | |         self.substream2 = Box::new(ExprIoEof__OneOrTwo::new(self.stream, self, _root)?);
47 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:109:28
    |
109 |         self.uint16 = self.stream.read_u2le()?;
    |                            ^^^^^^

error[E0609]: no field `stream` on type `expr_io_eof::ExprIoEof__OneOrTwo`
  --> src/expr_io_eof.rs:67:11
   |
67 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`, `reflectEof`

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:110:28
    |
110 |         self.uint32 = self.stream.read_u4le()?;
    |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:111:28
    |
111 |         self.uint64 = self.stream.read_u8le()?;
    |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:112:31
    |
112 |         self.magicSint = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x53, 0x2d, 0x44, 0x45, 0x46]));
    |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_io_eof::ExprIoEof__OneOrTwo`
  --> src/expr_io_eof.rs:80:25
   |
80 |         self.one = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:113:28
    |
113 |         self.sint16 = self.stream.read_s2le()?;
    |                            ^^^^^^

error[E0609]: no field `_io` on type `&mut expr_io_eof::ExprIoEof__OneOrTwo`
  --> src/expr_io_eof.rs:81:19
   |
81 |         if !(self._io.is_eof) {
   |                   ^^^

error[E0609]: no field `stream` on type `&mut expr_io_eof::ExprIoEof__OneOrTwo`
  --> src/expr_io_eof.rs:82:29
   |
82 |             self.two = self.stream.read_u4le()?;
   |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:114:28
    |
114 |         self.sint32 = self.stream.read_s4le()?;
    |                            ^^^^^^

error[E0308]: mismatched types
  --> src/expr_io_eof.rs:81:31
   |
81 |           if !(self._io.is_eof) {
   |  _______________________________^
82 | |             self.two = self.stream.read_u4le()?;
83 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:115:28
    |
115 |         self.sint64 = self.stream.read_s8le()?;
    |                            ^^^^^^

error[E0609]: no field `_io` on type `&mut expr_io_eof::ExprIoEof__OneOrTwo`
  --> src/expr_io_eof.rs:93:32
   |
93 |         self.reflectEof = self._io.is_eof;
   |                                ^^^

error[E0308]: mismatched types
  --> src/expr_io_eof.rs:94:16
   |
94 |         return self.reflectEof;
   |                ^^^^^^^^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:116:33
    |
116 |         self.magicUintLe = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x55, 0x2d, 0x4c, 0x45]));
    |                                 ^^^^^^

error[E0609]: no field `stream` on type `expr_io_pos::ExprIoPos`
  --> src/expr_io_pos.rs:28:11
   |
28 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `substream1`, `substream2`, `_raw_substream1`, `_raw_substream2`

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:117:30
    |
117 |         self.uint16le = self.stream.read_u2le()?;
    |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:118:30
    |
118 |         self.uint32le = self.stream.read_u4le()?;
    |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:119:30
    |
119 |         self.uint64le = self.stream.read_u8le()?;
    |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_io_pos::ExprIoPos`
  --> src/expr_io_pos.rs:41:37
   |
41 |         self._raw_substream1 = self.stream.read_bytes(16)?;
   |                                     ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:120:33
    |
120 |         self.magicSintLe = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x53, 0x2d, 0x4c, 0x45]));
    |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_io_pos::ExprIoPos`
  --> src/expr_io_pos.rs:43:71
   |
43 |         self.substream1 = Box::new(ExprIoPos__AllPlusNumber::new(self.stream, self, _root)?);
   |                                                                       ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:121:30
    |
121 |         self.sint16le = self.stream.read_s2le()?;
    |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:122:30
    |
122 |         self.sint32le = self.stream.read_s4le()?;
    |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:123:30
    |
123 |         self.sint64le = self.stream.read_s8le()?;
    |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:124:33
    |
124 |         self.magicUintBe = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x55, 0x2d, 0x42, 0x45]));
    |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:125:30
    |
125 |         self.uint16be = self.stream.read_u2be()?;
    |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:126:30
    |
126 |         self.uint32be = self.stream.read_u4be()?;
    |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:127:30
    |
127 |         self.uint64be = self.stream.read_u8be()?;
    |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:128:33
    |
128 |         self.magicSintBe = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x53, 0x2d, 0x42, 0x45]));
    |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:129:30
    |
129 |         self.sint16be = self.stream.read_s2be()?;
    |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:130:30
    |
130 |         self.sint32be = self.stream.read_s4be()?;
    |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:131:30
    |
131 |         self.sint64be = self.stream.read_s8be()?;
    |                              ^^^^^^

error[E0308]: mismatched types
   --> src/fixed_struct.rs:104:27
    |
104 |           where Self: Sized {
    |  ___________________________^
105 | |         self.magic1 = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x31]));
106 | |         self.uint8 = self.stream.read_u1()?;
107 | |         self.sint8 = self.stream.read_s1()?;
...   |
131 | |         self.sint64be = self.stream.read_s8be()?;
132 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `floating_points::FloatingPoints`
  --> src/floating_points.rs:31:11
   |
31 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `singleValue`, `doubleValue`, `singleValueBe`, `doubleValueBe`, `approximateValue` ... and 3 others

error[E0609]: no field `stream` on type `&mut floating_points::FloatingPoints`
  --> src/floating_points.rs:44:33
   |
44 |         self.singleValue = self.stream.read_f4le()?;
   |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut floating_points::FloatingPoints`
  --> src/floating_points.rs:45:33
   |
45 |         self.doubleValue = self.stream.read_f8le()?;
   |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut floating_points::FloatingPoints`
  --> src/floating_points.rs:46:35
   |
46 |         self.singleValueBe = self.stream.read_f4be()?;
   |                                   ^^^^^^

error[E0609]: no field `stream` on type `&mut floating_points::FloatingPoints`
  --> src/floating_points.rs:47:35
   |
47 |         self.doubleValueBe = self.stream.read_f8be()?;
   |                                   ^^^^^^

error[E0609]: no field `stream` on type `&mut floating_points::FloatingPoints`
  --> src/floating_points.rs:48:38
   |
48 |         self.approximateValue = self.stream.read_f4le()?;
   |                                      ^^^^^^

error[E0308]: mismatched types
  --> src/floating_points.rs:43:27
   |
43 |           where Self: Sized {
   |  ___________________________^
44 | |         self.singleValue = self.stream.read_f4le()?;
45 | |         self.doubleValue = self.stream.read_f8le()?;
46 | |         self.singleValueBe = self.stream.read_f4be()?;
47 | |         self.doubleValueBe = self.stream.read_f8be()?;
48 | |         self.approximateValue = self.stream.read_f4le()?;
49 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `single_value` on type `&mut floating_points::FloatingPoints`
  --> src/floating_points.rs:58:41
   |
58 |         self.singleValuePlusInt = (self.single_value + 1);
   |                                         ^^^^^^^^^^^^

error[E0308]: mismatched types
  --> src/floating_points.rs:59:16
   |
59 |         return self.singleValuePlusInt;
   |                ^^^^^^^^^^^^^^^^^^^^^^^ expected f64, found enum `std::option::Option`
   |
   = note: expected type `f64`
              found type `std::option::Option<f64>`

error[E0609]: no field `single_value` on type `&mut floating_points::FloatingPoints`
  --> src/floating_points.rs:66:43
   |
66 |         self.singleValuePlusFloat = (self.single_value + 0.5);
   |                                           ^^^^^^^^^^^^

error[E0308]: mismatched types
  --> src/floating_points.rs:67:16
   |
67 |         return self.singleValuePlusFloat;
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^ expected f64, found enum `std::option::Option`
   |
   = note: expected type `f64`
              found type `std::option::Option<f64>`

error[E0609]: no field `double_value` on type `&mut floating_points::FloatingPoints`
  --> src/floating_points.rs:74:43
   |
74 |         self.doubleValuePlusFloat = (self.double_value + 0.05);
   |                                           ^^^^^^^^^^^^

error[E0308]: mismatched types
  --> src/floating_points.rs:75:16
   |
75 |         return self.doubleValuePlusFloat;
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^ expected f64, found enum `std::option::Option`
   |
   = note: expected type `f64`
              found type `std::option::Option<f64>`

error[E0609]: no field `stream` on type `float_to_i::FloatToI`
  --> src/float_to_i.rs:35:11
   |
35 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `singleValue`, `doubleValue`, `float2I`, `calcFloat1`, `float4I` ... and 7 others

error[E0609]: no field `stream` on type `&mut float_to_i::FloatToI`
  --> src/float_to_i.rs:48:33
   |
48 |         self.singleValue = self.stream.read_f4le()?;
   |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut float_to_i::FloatToI`
  --> src/float_to_i.rs:49:33
   |
49 |         self.doubleValue = self.stream.read_f8le()?;
   |                                 ^^^^^^

error[E0308]: mismatched types
  --> src/float_to_i.rs:47:27
   |
47 |           where Self: Sized {
   |  ___________________________^
48 | |         self.singleValue = self.stream.read_f4le()?;
49 | |         self.doubleValue = self.stream.read_f8le()?;
50 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `calc_float2` on type `&mut float_to_i::FloatToI`
  --> src/float_to_i.rs:59:29
   |
59 |         self.float2I = self.calc_float2 as i32;
   |                             ^^^^^^^^^^^

error[E0308]: mismatched types
  --> src/float_to_i.rs:60:16
   |
60 |         return self.float2I;
   |                ^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0308]: mismatched types
  --> src/expr_io_pos.rs:43:79
   |
43 |         self.substream1 = Box::new(ExprIoPos__AllPlusNumber::new(self.stream, self, _root)?);
   |                                                                               ^^^^ expected enum `std::option::Option`, found struct `expr_io_pos::ExprIoPos`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut expr_io_pos::ExprIoPos`

error[E0609]: no field `stream` on type `&mut expr_io_pos::ExprIoPos`
  --> src/expr_io_pos.rs:44:37
   |
44 |         self._raw_substream2 = self.stream.read_bytes(14)?;
   |                                     ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_io_pos::ExprIoPos`
  --> src/expr_io_pos.rs:46:71
   |
46 |         self.substream2 = Box::new(ExprIoPos__AllPlusNumber::new(self.stream, self, _root)?);
   |                                                                       ^^^^^^

error[E0308]: mismatched types
  --> src/float_to_i.rs:67:27
   |
67 |         self.calcFloat1 = 1.234;
   |                           ^^^^^
   |                           |
   |                           expected enum `std::option::Option`, found floating-point variable
   |                           help: try using a variant of the expected type: `Some(1.234)`
   |
   = note: expected type `std::option::Option<f64>`
              found type `{float}`

error[E0308]: mismatched types
  --> src/float_to_i.rs:68:16
   |
68 |         return self.calcFloat1;
   |                ^^^^^^^^^^^^^^^ expected f64, found enum `std::option::Option`
   |
   = note: expected type `f64`
              found type `std::option::Option<f64>`

error[E0609]: no field `calc_float4` on type `&mut float_to_i::FloatToI`
  --> src/float_to_i.rs:75:29
   |
75 |         self.float4I = self.calc_float4 as i32;
   |                             ^^^^^^^^^^^

error[E0308]: mismatched types
  --> src/float_to_i.rs:76:16
   |
76 |         return self.float4I;
   |                ^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0308]: mismatched types
  --> src/expr_io_pos.rs:46:79
   |
46 |         self.substream2 = Box::new(ExprIoPos__AllPlusNumber::new(self.stream, self, _root)?);
   |                                                                               ^^^^ expected enum `std::option::Option`, found struct `expr_io_pos::ExprIoPos`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut expr_io_pos::ExprIoPos`

error[E0308]: mismatched types
  --> src/expr_io_pos.rs:40:27
   |
40 |           where Self: Sized {
   |  ___________________________^
41 | |         self._raw_substream1 = self.stream.read_bytes(16)?;
42 | |         let mut io = Cursor::new(self._raw_substream1);
43 | |         self.substream1 = Box::new(ExprIoPos__AllPlusNumber::new(self.stream, self, _root)?);
...  |
46 | |         self.substream2 = Box::new(ExprIoPos__AllPlusNumber::new(self.stream, self, _root)?);
47 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `expr_io_pos::ExprIoPos__AllPlusNumber`
  --> src/expr_io_pos.rs:67:11
   |
67 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `myStr`, `body`, `number`

warning: unreachable expression
  --> src/expr_io_pos.rs:80:9
   |
80 |         self.myStr = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut expr_io_pos::ExprIoPos__AllPlusNumber`
  --> src/expr_io_pos.rs:81:26
   |
81 |         self.body = self.stream.read_bytes(((self._io.size - self._io.pos) - 2))?;
   |                          ^^^^^^

error[E0609]: no field `_io` on type `&mut expr_io_pos::ExprIoPos__AllPlusNumber`
  --> src/expr_io_pos.rs:81:51
   |
81 |         self.body = self.stream.read_bytes(((self._io.size - self._io.pos) - 2))?;
   |                                                   ^^^

error[E0609]: no field `_io` on type `&mut expr_io_pos::ExprIoPos__AllPlusNumber`
  --> src/expr_io_pos.rs:81:67
   |
81 |         self.body = self.stream.read_bytes(((self._io.size - self._io.pos) - 2))?;
   |                                                                   ^^^

error[E0609]: no field `stream` on type `&mut expr_io_pos::ExprIoPos__AllPlusNumber`
  --> src/expr_io_pos.rs:82:28
   |
82 |         self.number = self.stream.read_u2le()?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `expr_mod::ExprMod`
  --> src/expr_mod.rs:29:11
   |
29 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `intU`, `intS`, `modPosConst`, `modNegConst`, `modPosSeq`, `modNegSeq`

error[E0609]: no field `stream` on type `&mut expr_mod::ExprMod`
  --> src/expr_mod.rs:42:26
   |
42 |         self.intU = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut expr_mod::ExprMod`
  --> src/expr_mod.rs:43:26
   |
43 |         self.intS = self.stream.read_s4le()?;
   |                          ^^^^^^

error[E0308]: mismatched types
  --> src/expr_mod.rs:41:27
   |
41 |           where Self: Sized {
   |  ___________________________^
42 | |         self.intU = self.stream.read_u4le()?;
43 | |         self.intS = self.stream.read_s4le()?;
44 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/float_to_i.rs:83:27
   |
83 |         self.calcFloat3 = 1.9;
   |                           ^^^
   |                           |
   |                           expected enum `std::option::Option`, found floating-point variable
   |                           help: try using a variant of the expected type: `Some(1.9)`
   |
   = note: expected type `std::option::Option<f64>`
              found type `{float}`

error[E0308]: mismatched types
  --> src/float_to_i.rs:84:16
   |
84 |         return self.calcFloat3;
   |                ^^^^^^^^^^^^^^^ expected f64, found enum `std::option::Option`
   |
   = note: expected type `f64`
              found type `std::option::Option<f64>`

error[E0308]: mismatched types
  --> src/expr_mod.rs:53:28
   |
53 |         self.modPosConst = 9837 % 13;
   |                            ^^^^^^^^^
   |                            |
   |                            expected enum `std::option::Option`, found integral variable
   |                            help: try using a variant of the expected type: `Some(9837 % 13)`
   |
   = note: expected type `std::option::Option<i32>`
              found type `{integer}`

error[E0308]: mismatched types
  --> src/expr_mod.rs:54:16
   |
54 |         return self.modPosConst;
   |                ^^^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0308]: mismatched types
  --> src/float_to_i.rs:91:27
   |
91 |         self.calcFloat2 = 1.5;
   |                           ^^^
   |                           |
   |                           expected enum `std::option::Option`, found floating-point variable
   |                           help: try using a variant of the expected type: `Some(1.5)`
   |
   = note: expected type `std::option::Option<f64>`
              found type `{float}`

error[E0308]: mismatched types
  --> src/float_to_i.rs:92:16
   |
92 |         return self.calcFloat2;
   |                ^^^^^^^^^^^^^^^ expected f64, found enum `std::option::Option`
   |
   = note: expected type `f64`
              found type `std::option::Option<f64>`

error[E0609]: no field `calc_float1` on type `&mut float_to_i::FloatToI`
  --> src/float_to_i.rs:99:29
   |
99 |         self.float1I = self.calc_float1 as i32;
   |                             ^^^^^^^^^^^

error[E0308]: mismatched types
   --> src/float_to_i.rs:100:16
    |
100 |         return self.float1I;
    |                ^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0609]: no field `double_value` on type `&mut float_to_i::FloatToI`
   --> src/float_to_i.rs:107:29
    |
107 |         self.doubleI = self.double_value as i32;
    |                             ^^^^^^^^^^^^

error[E0308]: mismatched types
   --> src/float_to_i.rs:108:16
    |
108 |         return self.doubleI;
    |                ^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0609]: no field `calc_float3` on type `&mut float_to_i::FloatToI`
   --> src/float_to_i.rs:115:29
    |
115 |         self.float3I = self.calc_float3 as i32;
    |                             ^^^^^^^^^^^

error[E0308]: mismatched types
   --> src/float_to_i.rs:116:16
    |
116 |         return self.float3I;
    |                ^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0609]: no field `single_value` on type `&mut float_to_i::FloatToI`
   --> src/float_to_i.rs:123:29
    |
123 |         self.singleI = self.single_value as i32;
    |                             ^^^^^^^^^^^^

error[E0308]: mismatched types
   --> src/float_to_i.rs:124:16
    |
124 |         return self.singleI;
    |                ^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
  --> src/expr_mod.rs:61:28
   |
61 |         self.modNegConst = -9837 % 13;
   |                            ^^^^^^^^^^
   |                            |
   |                            expected enum `std::option::Option`, found integral variable
   |                            help: try using a variant of the expected type: `Some(-9837 % 13)`
   |
   = note: expected type `std::option::Option<i32>`
              found type `{integer}`

error[E0308]: mismatched types
  --> src/expr_mod.rs:62:16
   |
62 |         return self.modNegConst;
   |                ^^^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0609]: no field `int_u` on type `&mut expr_mod::ExprMod`
  --> src/expr_mod.rs:69:31
   |
69 |         self.modPosSeq = self.int_u % 13;
   |                               ^^^^^

error[E0308]: mismatched types
  --> src/expr_mod.rs:70:16
   |
70 |         return self.modPosSeq;
   |                ^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0609]: no field `int_s` on type `&mut expr_mod::ExprMod`
  --> src/expr_mod.rs:77:31
   |
77 |         self.modNegSeq = self.int_s % 13;
   |                               ^^^^^

error[E0308]: mismatched types
  --> src/expr_mod.rs:78:16
   |
78 |         return self.modNegSeq;
   |                ^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `fixed_contents::FixedContents`
  --> src/fixed_contents.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `normal`, `highBit8`

error[E0609]: no field `stream` on type `&mut fixed_contents::FixedContents`
  --> src/fixed_contents.rs:38:28
   |
38 |         self.normal = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x31]));
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_contents::FixedContents`
  --> src/fixed_contents.rs:39:30
   |
39 |         self.highBit8 = self.stream.ensureFixedContents(vec!([0xff, 0xff]));
   |                              ^^^^^^

error[E0308]: mismatched types
  --> src/fixed_contents.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.normal = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x31]));
39 | |         self.highBit8 = self.stream.ensureFixedContents(vec!([0xff, 0xff]));
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `fixed_struct::FixedStruct`
  --> src/fixed_struct.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `hdr`

error[E0308]: mismatched types
  --> src/fixed_struct.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct`
  --> src/fixed_struct.rs:46:25
   |
46 |         let _pos = self.stream.pos();
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct`
  --> src/fixed_struct.rs:47:14
   |
47 |         self.stream.seek(0);
   |              ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct`
  --> src/fixed_struct.rs:48:59
   |
48 |         self.hdr = Box::new(FixedStruct__Header::new(self.stream, self, _root)?);
   |                                                           ^^^^^^

error[E0308]: mismatched types
   --> src/float_to_i.rs:131:27
    |
131 |         self.calcFloat4 = -2.7;
    |                           ^^^^
    |                           |
    |                           expected enum `std::option::Option`, found floating-point variable
    |                           help: try using a variant of the expected type: `Some(-2.7)`
    |
    = note: expected type `std::option::Option<f64>`
               found type `{float}`

error[E0308]: mismatched types
   --> src/float_to_i.rs:132:16
    |
132 |         return self.calcFloat4;
    |                ^^^^^^^^^^^^^^^ expected f64, found enum `std::option::Option`
    |
    = note: expected type `f64`
               found type `std::option::Option<f64>`

error[E0609]: no field `stream` on type `if_instances::IfInstances`
  --> src/if_instances.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `neverHappens`

error[E0308]: mismatched types
  --> src/if_instances.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut if_instances::IfInstances`
  --> src/if_instances.rs:47:29
   |
47 |             let _pos = self.stream.pos();
   |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut if_instances::IfInstances`
  --> src/if_instances.rs:48:18
   |
48 |             self.stream.seek(100500);
   |                  ^^^^^^

error[E0609]: no field `stream` on type `&mut if_instances::IfInstances`
  --> src/if_instances.rs:49:38
   |
49 |             self.neverHappens = self.stream.read_u1()?;
   |                                      ^^^^^^

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/if_instances.rs:49:33
   |
49 |             self.neverHappens = self.stream.read_u1()?;
   |                                 ^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `u8`
   |
   = help: the trait `std::ops::Try` is not implemented for `u8`
   = note: required by `std::ops::Try::from_error`

error[E0609]: no field `stream` on type `&mut if_instances::IfInstances`
  --> src/if_instances.rs:50:18
   |
50 |             self.stream.seek(_pos);
   |                  ^^^^^^

error[E0308]: mismatched types
  --> src/if_instances.rs:52:16
   |
52 |         return self.neverHappens;
   |                ^^^^^^^^^^^^^^^^^ expected u8, found enum `std::option::Option`
   |
   = note: expected type `u8`
              found type `std::option::Option<u8>`

error[E0609]: no field `stream` on type `if_struct::IfStruct`
  --> src/if_struct.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `op1`, `op2`, `op3`

error[E0609]: no field `stream` on type `&mut if_struct::IfStruct`
  --> src/if_struct.rs:39:59
   |
39 |         self.op1 = Box::new(IfStruct__Operation::new(self.stream, self, _root)?);
   |                                                           ^^^^^^

error[E0308]: mismatched types
  --> src/fixed_struct.rs:48:67
   |
48 |         self.hdr = Box::new(FixedStruct__Header::new(self.stream, self, _root)?);
   |                                                                   ^^^^ expected enum `std::option::Option`, found struct `fixed_struct::FixedStruct`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut fixed_struct::FixedStruct`

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/fixed_struct.rs:48:29
   |
48 |         self.hdr = Box::new(FixedStruct__Header::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::boxed::Box<fixed_struct::FixedStruct__Header>`
   |
   = help: the trait `std::ops::Try` is not implemented for `std::boxed::Box<fixed_struct::FixedStruct__Header>`
   = note: required by `std::ops::Try::from_error`

error[E0308]: mismatched types
  --> src/if_struct.rs:39:67
   |
39 |         self.op1 = Box::new(IfStruct__Operation::new(self.stream, self, _root)?);
   |                                                                   ^^^^ expected enum `std::option::Option`, found struct `if_struct::IfStruct`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut if_struct::IfStruct`

error[E0609]: no field `stream` on type `&mut if_struct::IfStruct`
  --> src/if_struct.rs:40:59
   |
40 |         self.op2 = Box::new(IfStruct__Operation::new(self.stream, self, _root)?);
   |                                                           ^^^^^^

error[E0308]: mismatched types
  --> src/fixed_struct.rs:48:20
   |
48 |         self.hdr = Box::new(FixedStruct__Header::new(self.stream, self, _root)?);
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<_>>`
              found type `std::boxed::Box<_>`
help: try using a variant of the expected type
   |
48 |         self.hdr = Some(<Box>::new(match ::std::ops::Try::into_result(<FixedStruct__Header>::new(self.stream,
49 |                                                                          self,
50 |                                                                          _root))
51 |                {
52 |                ::std::result::Result::Err(err) =>
53 |                    #[allow(unreachable_code)]
 ...

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct`
  --> src/fixed_struct.rs:49:14
   |
49 |         self.stream.seek(_pos);
   |              ^^^^^^

error[E0308]: mismatched types
  --> src/fixed_struct.rs:50:16
   |
50 |         return self.hdr;
   |                ^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `fixed_struct::FixedStruct__Header`
  --> src/fixed_struct.rs:92:11
   |
92 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `magic1`, `uint8`, `sint8`, `magicUint`, `uint16` ... and 22 others

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:105:28
    |
105 |         self.magic1 = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x31]));
    |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:106:27
    |
106 |         self.uint8 = self.stream.read_u1()?;
    |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:107:27
    |
107 |         self.sint8 = self.stream.read_s1()?;
    |                           ^^^^^^

error[E0308]: mismatched types
  --> src/if_struct.rs:40:67
   |
40 |         self.op2 = Box::new(IfStruct__Operation::new(self.stream, self, _root)?);
   |                                                                   ^^^^ expected enum `std::option::Option`, found struct `if_struct::IfStruct`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut if_struct::IfStruct`

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:108:31
    |
108 |         self.magicUint = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x55, 0x2d, 0x44, 0x45, 0x46]));
    |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:109:28
    |
109 |         self.uint16 = self.stream.read_u2le()?;
    |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut if_struct::IfStruct`
  --> src/if_struct.rs:41:59
   |
41 |         self.op3 = Box::new(IfStruct__Operation::new(self.stream, self, _root)?);
   |                                                           ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:110:28
    |
110 |         self.uint32 = self.stream.read_u4le()?;
    |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:111:28
    |
111 |         self.uint64 = self.stream.read_u8le()?;
    |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:112:31
    |
112 |         self.magicSint = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x53, 0x2d, 0x44, 0x45, 0x46]));
    |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:113:28
    |
113 |         self.sint16 = self.stream.read_s2le()?;
    |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:114:28
    |
114 |         self.sint32 = self.stream.read_s4le()?;
    |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:115:28
    |
115 |         self.sint64 = self.stream.read_s8le()?;
    |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:116:33
    |
116 |         self.magicUintLe = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x55, 0x2d, 0x4c, 0x45]));
    |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:117:30
    |
117 |         self.uint16le = self.stream.read_u2le()?;
    |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:118:30
    |
118 |         self.uint32le = self.stream.read_u4le()?;
    |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:119:30
    |
119 |         self.uint64le = self.stream.read_u8le()?;
    |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:120:33
    |
120 |         self.magicSintLe = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x53, 0x2d, 0x4c, 0x45]));
    |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:121:30
    |
121 |         self.sint16le = self.stream.read_s2le()?;
    |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:122:30
    |
122 |         self.sint32le = self.stream.read_s4le()?;
    |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:123:30
    |
123 |         self.sint64le = self.stream.read_s8le()?;
    |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:124:33
    |
124 |         self.magicUintBe = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x55, 0x2d, 0x42, 0x45]));
    |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:125:30
    |
125 |         self.uint16be = self.stream.read_u2be()?;
    |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:126:30
    |
126 |         self.uint32be = self.stream.read_u4be()?;
    |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:127:30
    |
127 |         self.uint64be = self.stream.read_u8be()?;
    |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:128:33
    |
128 |         self.magicSintBe = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x53, 0x2d, 0x42, 0x45]));
    |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:129:30
    |
129 |         self.sint16be = self.stream.read_s2be()?;
    |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:130:30
    |
130 |         self.sint32be = self.stream.read_s4be()?;
    |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut fixed_struct::FixedStruct__Header`
   --> src/fixed_struct.rs:131:30
    |
131 |         self.sint64be = self.stream.read_s8be()?;
    |                              ^^^^^^

error[E0308]: mismatched types
   --> src/fixed_struct.rs:104:27
    |
104 |           where Self: Sized {
    |  ___________________________^
105 | |         self.magic1 = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x31]));
106 | |         self.uint8 = self.stream.read_u1()?;
107 | |         self.sint8 = self.stream.read_s1()?;
...   |
131 | |         self.sint64be = self.stream.read_s8be()?;
132 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `floating_points::FloatingPoints`
  --> src/floating_points.rs:31:11
   |
31 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `singleValue`, `doubleValue`, `singleValueBe`, `doubleValueBe`, `approximateValue` ... and 3 others

error[E0609]: no field `stream` on type `&mut floating_points::FloatingPoints`
  --> src/floating_points.rs:44:33
   |
44 |         self.singleValue = self.stream.read_f4le()?;
   |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut floating_points::FloatingPoints`
  --> src/floating_points.rs:45:33
   |
45 |         self.doubleValue = self.stream.read_f8le()?;
   |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut floating_points::FloatingPoints`
  --> src/floating_points.rs:46:35
   |
46 |         self.singleValueBe = self.stream.read_f4be()?;
   |                                   ^^^^^^

error[E0609]: no field `stream` on type `&mut floating_points::FloatingPoints`
  --> src/floating_points.rs:47:35
   |
47 |         self.doubleValueBe = self.stream.read_f8be()?;
   |                                   ^^^^^^

error[E0609]: no field `stream` on type `&mut floating_points::FloatingPoints`
  --> src/floating_points.rs:48:38
   |
48 |         self.approximateValue = self.stream.read_f4le()?;
   |                                      ^^^^^^

error[E0308]: mismatched types
  --> src/floating_points.rs:43:27
   |
43 |           where Self: Sized {
   |  ___________________________^
44 | |         self.singleValue = self.stream.read_f4le()?;
45 | |         self.doubleValue = self.stream.read_f8le()?;
46 | |         self.singleValueBe = self.stream.read_f4be()?;
47 | |         self.doubleValueBe = self.stream.read_f8be()?;
48 | |         self.approximateValue = self.stream.read_f4le()?;
49 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `single_value` on type `&mut floating_points::FloatingPoints`
  --> src/floating_points.rs:58:41
   |
58 |         self.singleValuePlusInt = (self.single_value + 1);
   |                                         ^^^^^^^^^^^^

error[E0308]: mismatched types
  --> src/floating_points.rs:59:16
   |
59 |         return self.singleValuePlusInt;
   |                ^^^^^^^^^^^^^^^^^^^^^^^ expected f64, found enum `std::option::Option`
   |
   = note: expected type `f64`
              found type `std::option::Option<f64>`

error[E0609]: no field `single_value` on type `&mut floating_points::FloatingPoints`
  --> src/floating_points.rs:66:43
   |
66 |         self.singleValuePlusFloat = (self.single_value + 0.5);
   |                                           ^^^^^^^^^^^^

error[E0308]: mismatched types
  --> src/floating_points.rs:67:16
   |
67 |         return self.singleValuePlusFloat;
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^ expected f64, found enum `std::option::Option`
   |
   = note: expected type `f64`
              found type `std::option::Option<f64>`

error[E0609]: no field `double_value` on type `&mut floating_points::FloatingPoints`
  --> src/floating_points.rs:74:43
   |
74 |         self.doubleValuePlusFloat = (self.double_value + 0.05);
   |                                           ^^^^^^^^^^^^

error[E0308]: mismatched types
  --> src/floating_points.rs:75:16
   |
75 |         return self.doubleValuePlusFloat;
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^ expected f64, found enum `std::option::Option`
   |
   = note: expected type `f64`
              found type `std::option::Option<f64>`

error[E0609]: no field `stream` on type `float_to_i::FloatToI`
  --> src/float_to_i.rs:35:11
   |
35 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `singleValue`, `doubleValue`, `float2I`, `calcFloat1`, `float4I` ... and 7 others

error[E0609]: no field `stream` on type `&mut float_to_i::FloatToI`
  --> src/float_to_i.rs:48:33
   |
48 |         self.singleValue = self.stream.read_f4le()?;
   |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut float_to_i::FloatToI`
  --> src/float_to_i.rs:49:33
   |
49 |         self.doubleValue = self.stream.read_f8le()?;
   |                                 ^^^^^^

error[E0308]: mismatched types
  --> src/float_to_i.rs:47:27
   |
47 |           where Self: Sized {
   |  ___________________________^
48 | |         self.singleValue = self.stream.read_f4le()?;
49 | |         self.doubleValue = self.stream.read_f8le()?;
50 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/if_struct.rs:41:67
   |
41 |         self.op3 = Box::new(IfStruct__Operation::new(self.stream, self, _root)?);
   |                                                                   ^^^^ expected enum `std::option::Option`, found struct `if_struct::IfStruct`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut if_struct::IfStruct`

error[E0308]: mismatched types
  --> src/if_struct.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.op1 = Box::new(IfStruct__Operation::new(self.stream, self, _root)?);
40 | |         self.op2 = Box::new(IfStruct__Operation::new(self.stream, self, _root)?);
41 | |         self.op3 = Box::new(IfStruct__Operation::new(self.stream, self, _root)?);
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `calc_float2` on type `&mut float_to_i::FloatToI`
  --> src/float_to_i.rs:59:29
   |
59 |         self.float2I = self.calc_float2 as i32;
   |                             ^^^^^^^^^^^

error[E0308]: mismatched types
  --> src/float_to_i.rs:60:16
   |
60 |         return self.float2I;
   |                ^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `if_struct::IfStruct__Operation`
  --> src/if_struct.rs:62:11
   |
62 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `opcode`, `argTuple`, `argStr`

error[E0609]: no field `stream` on type `&mut if_struct::IfStruct__Operation`
  --> src/if_struct.rs:75:28
   |
75 |         self.opcode = self.stream.read_u1()?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut if_struct::IfStruct__Operation`
  --> src/if_struct.rs:77:67
   |
77 |             self.argTuple = Box::new(IfStruct__ArgTuple::new(self.stream, self, _root)?);
   |                                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/if_struct.rs:77:75
   |
77 |             self.argTuple = Box::new(IfStruct__ArgTuple::new(self.stream, self, _root)?);
   |                                                                           ^^^^ expected enum `std::option::Option`, found struct `if_struct::IfStruct__Operation`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut if_struct::IfStruct__Operation`

error[E0609]: no field `stream` on type `&mut if_struct::IfStruct__Operation`
  --> src/if_struct.rs:80:63
   |
80 |             self.argStr = Box::new(IfStruct__ArgStr::new(self.stream, self, _root)?);
   |                                                               ^^^^^^

error[E0308]: mismatched types
  --> src/float_to_i.rs:67:27
   |
67 |         self.calcFloat1 = 1.234;
   |                           ^^^^^
   |                           |
   |                           expected enum `std::option::Option`, found floating-point variable
   |                           help: try using a variant of the expected type: `Some(1.234)`
   |
   = note: expected type `std::option::Option<f64>`
              found type `{float}`

error[E0308]: mismatched types
  --> src/float_to_i.rs:68:16
   |
68 |         return self.calcFloat1;
   |                ^^^^^^^^^^^^^^^ expected f64, found enum `std::option::Option`
   |
   = note: expected type `f64`
              found type `std::option::Option<f64>`

error[E0609]: no field `calc_float4` on type `&mut float_to_i::FloatToI`
  --> src/float_to_i.rs:75:29
   |
75 |         self.float4I = self.calc_float4 as i32;
   |                             ^^^^^^^^^^^

error[E0308]: mismatched types
  --> src/float_to_i.rs:76:16
   |
76 |         return self.float4I;
   |                ^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0308]: mismatched types
  --> src/if_struct.rs:80:71
   |
80 |             self.argStr = Box::new(IfStruct__ArgStr::new(self.stream, self, _root)?);
   |                                                                       ^^^^ expected enum `std::option::Option`, found struct `if_struct::IfStruct__Operation`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut if_struct::IfStruct__Operation`

error[E0308]: mismatched types
  --> src/if_struct.rs:79:30
   |
79 |           if self.opcode == 83 {
   |  ______________________________^
80 | |             self.argStr = Box::new(IfStruct__ArgStr::new(self.stream, self, _root)?);
81 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `if_struct::IfStruct__ArgTuple`
   --> src/if_struct.rs:101:11
    |
101 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `num1`, `num2`

error[E0308]: mismatched types
  --> src/float_to_i.rs:83:27
   |
83 |         self.calcFloat3 = 1.9;
   |                           ^^^
   |                           |
   |                           expected enum `std::option::Option`, found floating-point variable
   |                           help: try using a variant of the expected type: `Some(1.9)`
   |
   = note: expected type `std::option::Option<f64>`
              found type `{float}`

error[E0308]: mismatched types
  --> src/float_to_i.rs:84:16
   |
84 |         return self.calcFloat3;
   |                ^^^^^^^^^^^^^^^ expected f64, found enum `std::option::Option`
   |
   = note: expected type `f64`
              found type `std::option::Option<f64>`

error[E0609]: no field `stream` on type `&mut if_struct::IfStruct__ArgTuple`
   --> src/if_struct.rs:114:26
    |
114 |         self.num1 = self.stream.read_u1()?;
    |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut if_struct::IfStruct__ArgTuple`
   --> src/if_struct.rs:115:26
    |
115 |         self.num2 = self.stream.read_u1()?;
    |                          ^^^^^^

error[E0308]: mismatched types
   --> src/if_struct.rs:113:27
    |
113 |           where Self: Sized {
    |  ___________________________^
114 | |         self.num1 = self.stream.read_u1()?;
115 | |         self.num2 = self.stream.read_u1()?;
116 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `if_struct::IfStruct__ArgStr`
   --> src/if_struct.rs:135:11
    |
135 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `len`, `str`

error[E0609]: no field `stream` on type `&mut if_struct::IfStruct__ArgStr`
   --> src/if_struct.rs:148:25
    |
148 |         self.len = self.stream.read_u1()?;
    |                         ^^^^^^

warning: unreachable expression
   --> src/if_struct.rs:149:9
    |
149 |         self.str = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `if_values::IfValues`
  --> src/if_values.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `codes`

error[E0609]: no field `stream` on type `&mut if_values::IfValues`
  --> src/if_values.rs:40:63
   |
40 |             self.codes.push(Box::new(IfValues__Code::new(self.stream, self, _root)?));
   |                                                               ^^^^^^

error[E0308]: mismatched types
  --> src/float_to_i.rs:91:27
   |
91 |         self.calcFloat2 = 1.5;
   |                           ^^^
   |                           |
   |                           expected enum `std::option::Option`, found floating-point variable
   |                           help: try using a variant of the expected type: `Some(1.5)`
   |
   = note: expected type `std::option::Option<f64>`
              found type `{float}`

error[E0308]: mismatched types
  --> src/float_to_i.rs:92:16
   |
92 |         return self.calcFloat2;
   |                ^^^^^^^^^^^^^^^ expected f64, found enum `std::option::Option`
   |
   = note: expected type `f64`
              found type `std::option::Option<f64>`

error[E0609]: no field `calc_float1` on type `&mut float_to_i::FloatToI`
  --> src/float_to_i.rs:99:29
   |
99 |         self.float1I = self.calc_float1 as i32;
   |                             ^^^^^^^^^^^

error[E0308]: mismatched types
   --> src/float_to_i.rs:100:16
    |
100 |         return self.float1I;
    |                ^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0609]: no field `double_value` on type `&mut float_to_i::FloatToI`
   --> src/float_to_i.rs:107:29
    |
107 |         self.doubleI = self.double_value as i32;
    |                             ^^^^^^^^^^^^

error[E0308]: mismatched types
   --> src/float_to_i.rs:108:16
    |
108 |         return self.doubleI;
    |                ^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0609]: no field `calc_float3` on type `&mut float_to_i::FloatToI`
   --> src/float_to_i.rs:115:29
    |
115 |         self.float3I = self.calc_float3 as i32;
    |                             ^^^^^^^^^^^

error[E0308]: mismatched types
   --> src/float_to_i.rs:116:16
    |
116 |         return self.float3I;
    |                ^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0609]: no field `single_value` on type `&mut float_to_i::FloatToI`
   --> src/float_to_i.rs:123:29
    |
123 |         self.singleI = self.single_value as i32;
    |                             ^^^^^^^^^^^^

error[E0308]: mismatched types
   --> src/float_to_i.rs:124:16
    |
124 |         return self.singleI;
    |                ^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
    |
    = note: expected type `i32`
               found type `std::option::Option<i32>`

error[E0308]: mismatched types
  --> src/if_values.rs:40:71
   |
40 |             self.codes.push(Box::new(IfValues__Code::new(self.stream, self, _root)?));
   |                                                                       ^^^^ expected enum `std::option::Option`, found struct `if_values::IfValues`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut if_values::IfValues`

error[E0308]: mismatched types
  --> src/if_values.rs:39:9
   |
36 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
39 | /         for i in 0..3 {
40 | |             self.codes.push(Box::new(IfValues__Code::new(self.stream, self, _root)?));
41 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `if_values::IfValues__Code`
  --> src/if_values.rs:61:11
   |
61 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `opcode`, `halfOpcode`

error[E0609]: no field `stream` on type `&mut if_values::IfValues__Code`
  --> src/if_values.rs:74:28
   |
74 |         self.opcode = self.stream.read_u1()?;
   |                            ^^^^^^

error[E0308]: mismatched types
  --> src/if_values.rs:73:27
   |
73 |           where Self: Sized {
   |  ___________________________^
74 | |         self.opcode = self.stream.read_u1()?;
75 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
   --> src/float_to_i.rs:131:27
    |
131 |         self.calcFloat4 = -2.7;
    |                           ^^^^
    |                           |
    |                           expected enum `std::option::Option`, found floating-point variable
    |                           help: try using a variant of the expected type: `Some(-2.7)`
    |
    = note: expected type `std::option::Option<f64>`
               found type `{float}`

error[E0308]: mismatched types
   --> src/float_to_i.rs:132:16
    |
132 |         return self.calcFloat4;
    |                ^^^^^^^^^^^^^^^ expected f64, found enum `std::option::Option`
    |
    = note: expected type `f64`
               found type `std::option::Option<f64>`

error[E0609]: no field `stream` on type `if_instances::IfInstances`
  --> src/if_instances.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `neverHappens`

error[E0308]: mismatched types
  --> src/if_instances.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut if_instances::IfInstances`
  --> src/if_instances.rs:47:29
   |
47 |             let _pos = self.stream.pos();
   |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut if_instances::IfInstances`
  --> src/if_instances.rs:48:18
   |
48 |             self.stream.seek(100500);
   |                  ^^^^^^

error[E0609]: no field `stream` on type `&mut if_instances::IfInstances`
  --> src/if_instances.rs:49:38
   |
49 |             self.neverHappens = self.stream.read_u1()?;
   |                                      ^^^^^^

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/if_instances.rs:49:33
   |
49 |             self.neverHappens = self.stream.read_u1()?;
   |                                 ^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `u8`
   |
   = help: the trait `std::ops::Try` is not implemented for `u8`
   = note: required by `std::ops::Try::from_error`

error[E0609]: no field `stream` on type `&mut if_instances::IfInstances`
  --> src/if_instances.rs:50:18
   |
50 |             self.stream.seek(_pos);
   |                  ^^^^^^

error[E0308]: mismatched types
  --> src/if_instances.rs:52:16
   |
52 |         return self.neverHappens;
   |                ^^^^^^^^^^^^^^^^^ expected u8, found enum `std::option::Option`
   |
   = note: expected type `u8`
              found type `std::option::Option<u8>`

error[E0609]: no field `stream` on type `if_struct::IfStruct`
  --> src/if_struct.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `op1`, `op2`, `op3`

error[E0609]: no field `stream` on type `&mut if_struct::IfStruct`
  --> src/if_struct.rs:39:59
   |
39 |         self.op1 = Box::new(IfStruct__Operation::new(self.stream, self, _root)?);
   |                                                           ^^^^^^

error[E0308]: mismatched types
  --> src/if_values.rs:85:31
   |
85 |             self.halfOpcode = self.opcode / 2;
   |                               ^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
   |
   = note: expected type `std::option::Option<i32>`
              found type `u8`

error[E0308]: mismatched types
  --> src/if_values.rs:87:16
   |
87 |         return self.halfOpcode;
   |                ^^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `imports0::Imports0`
  --> src/imports0.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `two`, `hw`, `hwOne`

error[E0609]: no field `stream` on type `&mut imports0::Imports0`
  --> src/imports0.rs:40:25
   |
40 |         self.two = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut imports0::Imports0`
  --> src/imports0.rs:41:49
   |
41 |         self.hw = Box::new(HelloWorld::new(self.stream, self, _root)?);
   |                                                 ^^^^^^

error[E0308]: mismatched types
  --> src/if_struct.rs:39:67
   |
39 |         self.op1 = Box::new(IfStruct__Operation::new(self.stream, self, _root)?);
   |                                                                   ^^^^ expected enum `std::option::Option`, found struct `if_struct::IfStruct`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut if_struct::IfStruct`

error[E0609]: no field `stream` on type `&mut if_struct::IfStruct`
  --> src/if_struct.rs:40:59
   |
40 |         self.op2 = Box::new(IfStruct__Operation::new(self.stream, self, _root)?);
   |                                                           ^^^^^^

error[E0308]: mismatched types
  --> src/imports0.rs:41:57
   |
41 |         self.hw = Box::new(HelloWorld::new(self.stream, self, _root)?);
   |                                                         ^^^^ expected enum `std::option::Option`, found struct `imports0::Imports0`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut imports0::Imports0`

error[E0308]: mismatched types
  --> src/imports0.rs:39:27
   |
39 |           where Self: Sized {
   |  ___________________________^
40 | |         self.two = self.stream.read_u1()?;
41 | |         self.hw = Box::new(HelloWorld::new(self.stream, self, _root)?);
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/imports0.rs:51:22
   |
51 |         self.hwOne = self.hw.one;
   |                      ^^^^^^^^^^^
   |                      |
   |                      expected enum `std::option::Option`, found u8
   |                      help: try using a variant of the expected type: `Some(self.hw.one)`
   |
   = note: expected type `std::option::Option<u8>`
              found type `u8`

error[E0308]: mismatched types
  --> src/imports0.rs:52:16
   |
52 |         return self.hwOne;
   |                ^^^^^^^^^^ expected u8, found enum `std::option::Option`
   |
   = note: expected type `u8`
              found type `std::option::Option<u8>`

error[E0308]: mismatched types
  --> src/if_struct.rs:40:67
   |
40 |         self.op2 = Box::new(IfStruct__Operation::new(self.stream, self, _root)?);
   |                                                                   ^^^^ expected enum `std::option::Option`, found struct `if_struct::IfStruct`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut if_struct::IfStruct`

error[E0609]: no field `stream` on type `imported_and_abs::ImportedAndAbs`
  --> src/imported_and_abs.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`

error[E0609]: no field `stream` on type `&mut if_struct::IfStruct`
  --> src/if_struct.rs:41:59
   |
41 |         self.op3 = Box::new(IfStruct__Operation::new(self.stream, self, _root)?);
   |                                                           ^^^^^^

error[E0609]: no field `stream` on type `&mut imported_and_abs::ImportedAndAbs`
  --> src/imported_and_abs.rs:39:25
   |
39 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut imported_and_abs::ImportedAndAbs`
  --> src/imported_and_abs.rs:40:52
   |
40 |         self.two = Box::new(ImportedRoot::new(self.stream, self, _root)?);
   |                                                    ^^^^^^

error[E0308]: mismatched types
  --> src/if_struct.rs:41:67
   |
41 |         self.op3 = Box::new(IfStruct__Operation::new(self.stream, self, _root)?);
   |                                                                   ^^^^ expected enum `std::option::Option`, found struct `if_struct::IfStruct`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut if_struct::IfStruct`

error[E0308]: mismatched types
  --> src/if_struct.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.op1 = Box::new(IfStruct__Operation::new(self.stream, self, _root)?);
40 | |         self.op2 = Box::new(IfStruct__Operation::new(self.stream, self, _root)?);
41 | |         self.op3 = Box::new(IfStruct__Operation::new(self.stream, self, _root)?);
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `if_struct::IfStruct__Operation`
  --> src/if_struct.rs:62:11
   |
62 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `opcode`, `argTuple`, `argStr`

error[E0609]: no field `stream` on type `&mut if_struct::IfStruct__Operation`
  --> src/if_struct.rs:75:28
   |
75 |         self.opcode = self.stream.read_u1()?;
   |                            ^^^^^^

error[E0308]: mismatched types
  --> src/imported_and_abs.rs:40:60
   |
40 |         self.two = Box::new(ImportedRoot::new(self.stream, self, _root)?);
   |                                                            ^^^^ expected enum `std::option::Option`, found struct `imported_and_abs::ImportedAndAbs`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut imported_and_abs::ImportedAndAbs`

error[E0308]: mismatched types
  --> src/imported_and_abs.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.one = self.stream.read_u1()?;
40 | |         self.two = Box::new(ImportedRoot::new(self.stream, self, _root)?);
41 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut if_struct::IfStruct__Operation`
  --> src/if_struct.rs:77:67
   |
77 |             self.argTuple = Box::new(IfStruct__ArgTuple::new(self.stream, self, _root)?);
   |                                                                   ^^^^^^

error[E0609]: no field `stream` on type `imported_root::ImportedRoot`
  --> src/imported_root.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`

error[E0609]: no field `stream` on type `&mut imported_root::ImportedRoot`
  --> src/imported_root.rs:37:25
   |
37 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/imported_root.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |         self.one = self.stream.read_u1()?;
38 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `imports_abs_abs::ImportsAbsAbs`
  --> src/imports_abs_abs.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`

error[E0609]: no field `stream` on type `&mut imports_abs_abs::ImportsAbsAbs`
  --> src/imports_abs_abs.rs:39:25
   |
39 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut imports_abs_abs::ImportsAbsAbs`
  --> src/imports_abs_abs.rs:40:54
   |
40 |         self.two = Box::new(ImportedAndAbs::new(self.stream, self, _root)?);
   |                                                      ^^^^^^

error[E0308]: mismatched types
  --> src/if_struct.rs:77:75
   |
77 |             self.argTuple = Box::new(IfStruct__ArgTuple::new(self.stream, self, _root)?);
   |                                                                           ^^^^ expected enum `std::option::Option`, found struct `if_struct::IfStruct__Operation`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut if_struct::IfStruct__Operation`

error[E0609]: no field `stream` on type `&mut if_struct::IfStruct__Operation`
  --> src/if_struct.rs:80:63
   |
80 |             self.argStr = Box::new(IfStruct__ArgStr::new(self.stream, self, _root)?);
   |                                                               ^^^^^^

error[E0308]: mismatched types
  --> src/imports_abs_abs.rs:40:62
   |
40 |         self.two = Box::new(ImportedAndAbs::new(self.stream, self, _root)?);
   |                                                              ^^^^ expected enum `std::option::Option`, found struct `imports_abs_abs::ImportsAbsAbs`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut imports_abs_abs::ImportsAbsAbs`

error[E0308]: mismatched types
  --> src/imports_abs_abs.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.one = self.stream.read_u1()?;
40 | |         self.two = Box::new(ImportedAndAbs::new(self.stream, self, _root)?);
41 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `imported_and_rel::ImportedAndRel`
  --> src/imported_and_rel.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`

error[E0609]: no field `stream` on type `&mut imported_and_rel::ImportedAndRel`
  --> src/imported_and_rel.rs:39:25
   |
39 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut imported_and_rel::ImportedAndRel`
  --> src/imported_and_rel.rs:40:52
   |
40 |         self.two = Box::new(ImportedRoot::new(self.stream, self, _root)?);
   |                                                    ^^^^^^

error[E0308]: mismatched types
  --> src/if_struct.rs:80:71
   |
80 |             self.argStr = Box::new(IfStruct__ArgStr::new(self.stream, self, _root)?);
   |                                                                       ^^^^ expected enum `std::option::Option`, found struct `if_struct::IfStruct__Operation`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut if_struct::IfStruct__Operation`

error[E0308]: mismatched types
  --> src/if_struct.rs:79:30
   |
79 |           if self.opcode == 83 {
   |  ______________________________^
80 | |             self.argStr = Box::new(IfStruct__ArgStr::new(self.stream, self, _root)?);
81 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `if_struct::IfStruct__ArgTuple`
   --> src/if_struct.rs:101:11
    |
101 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `num1`, `num2`

error[E0609]: no field `stream` on type `&mut if_struct::IfStruct__ArgTuple`
   --> src/if_struct.rs:114:26
    |
114 |         self.num1 = self.stream.read_u1()?;
    |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut if_struct::IfStruct__ArgTuple`
   --> src/if_struct.rs:115:26
    |
115 |         self.num2 = self.stream.read_u1()?;
    |                          ^^^^^^

error[E0308]: mismatched types
   --> src/if_struct.rs:113:27
    |
113 |           where Self: Sized {
    |  ___________________________^
114 | |         self.num1 = self.stream.read_u1()?;
115 | |         self.num2 = self.stream.read_u1()?;
116 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `if_struct::IfStruct__ArgStr`
   --> src/if_struct.rs:135:11
    |
135 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `len`, `str`

error[E0609]: no field `stream` on type `&mut if_struct::IfStruct__ArgStr`
   --> src/if_struct.rs:148:25
    |
148 |         self.len = self.stream.read_u1()?;
    |                         ^^^^^^

warning: unreachable expression
   --> src/if_struct.rs:149:9
    |
149 |         self.str = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `if_values::IfValues`
  --> src/if_values.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `codes`

error[E0308]: mismatched types
  --> src/imported_and_rel.rs:40:60
   |
40 |         self.two = Box::new(ImportedRoot::new(self.stream, self, _root)?);
   |                                                            ^^^^ expected enum `std::option::Option`, found struct `imported_and_rel::ImportedAndRel`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut imported_and_rel::ImportedAndRel`

error[E0308]: mismatched types
  --> src/imported_and_rel.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.one = self.stream.read_u1()?;
40 | |         self.two = Box::new(ImportedRoot::new(self.stream, self, _root)?);
41 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `imports_abs_rel::ImportsAbsRel`
  --> src/imports_abs_rel.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`

error[E0609]: no field `stream` on type `&mut if_values::IfValues`
  --> src/if_values.rs:40:63
   |
40 |             self.codes.push(Box::new(IfValues__Code::new(self.stream, self, _root)?));
   |                                                               ^^^^^^

error[E0609]: no field `stream` on type `&mut imports_abs_rel::ImportsAbsRel`
  --> src/imports_abs_rel.rs:39:25
   |
39 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut imports_abs_rel::ImportsAbsRel`
  --> src/imports_abs_rel.rs:40:54
   |
40 |         self.two = Box::new(ImportedAndRel::new(self.stream, self, _root)?);
   |                                                      ^^^^^^

error[E0308]: mismatched types
  --> src/if_values.rs:40:71
   |
40 |             self.codes.push(Box::new(IfValues__Code::new(self.stream, self, _root)?));
   |                                                                       ^^^^ expected enum `std::option::Option`, found struct `if_values::IfValues`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut if_values::IfValues`

error[E0308]: mismatched types
  --> src/if_values.rs:39:9
   |
36 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
39 | /         for i in 0..3 {
40 | |             self.codes.push(Box::new(IfValues__Code::new(self.stream, self, _root)?));
41 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/imports_abs_rel.rs:40:62
   |
40 |         self.two = Box::new(ImportedAndRel::new(self.stream, self, _root)?);
   |                                                              ^^^^ expected enum `std::option::Option`, found struct `imports_abs_rel::ImportsAbsRel`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut imports_abs_rel::ImportsAbsRel`

error[E0308]: mismatched types
  --> src/imports_abs_rel.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.one = self.stream.read_u1()?;
40 | |         self.two = Box::new(ImportedAndRel::new(self.stream, self, _root)?);
41 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `if_values::IfValues__Code`
  --> src/if_values.rs:61:11
   |
61 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `opcode`, `halfOpcode`

error[E0609]: no field `stream` on type `imports_circular_b::ImportsCircularB`
  --> src/imports_circular_b.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `initial`, `backRef`

error[E0609]: no field `stream` on type `&mut if_values::IfValues__Code`
  --> src/if_values.rs:74:28
   |
74 |         self.opcode = self.stream.read_u1()?;
   |                            ^^^^^^

error[E0308]: mismatched types
  --> src/if_values.rs:73:27
   |
73 |           where Self: Sized {
   |  ___________________________^
74 | |         self.opcode = self.stream.read_u1()?;
75 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut imports_circular_b::ImportsCircularB`
  --> src/imports_circular_b.rs:39:29
   |
39 |         self.initial = self.stream.read_u1()?;
   |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut imports_circular_b::ImportsCircularB`
  --> src/imports_circular_b.rs:41:64
   |
41 |             self.backRef = Box::new(ImportsCircularA::new(self.stream, self, _root)?);
   |                                                                ^^^^^^

error[E0308]: mismatched types
  --> src/if_values.rs:85:31
   |
85 |             self.halfOpcode = self.opcode / 2;
   |                               ^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found u8
   |
   = note: expected type `std::option::Option<i32>`
              found type `u8`

error[E0308]: mismatched types
  --> src/if_values.rs:87:16
   |
87 |         return self.halfOpcode;
   |                ^^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `imports0::Imports0`
  --> src/imports0.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `two`, `hw`, `hwOne`

error[E0609]: no field `stream` on type `&mut imports0::Imports0`
  --> src/imports0.rs:40:25
   |
40 |         self.two = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut imports0::Imports0`
  --> src/imports0.rs:41:49
   |
41 |         self.hw = Box::new(HelloWorld::new(self.stream, self, _root)?);
   |                                                 ^^^^^^

error[E0308]: mismatched types
  --> src/imports_circular_b.rs:41:72
   |
41 |             self.backRef = Box::new(ImportsCircularA::new(self.stream, self, _root)?);
   |                                                                        ^^^^ expected enum `std::option::Option`, found struct `imports_circular_b::ImportsCircularB`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut imports_circular_b::ImportsCircularB`

error[E0308]: mismatched types
  --> src/imports_circular_b.rs:40:31
   |
40 |           if self.initial == 65 {
   |  _______________________________^
41 | |             self.backRef = Box::new(ImportsCircularA::new(self.stream, self, _root)?);
42 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `imports_circular_a::ImportsCircularA`
  --> src/imports_circular_a.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `code`, `two`

error[E0609]: no field `stream` on type `&mut imports_circular_a::ImportsCircularA`
  --> src/imports_circular_a.rs:39:26
   |
39 |         self.code = self.stream.read_u1()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut imports_circular_a::ImportsCircularA`
  --> src/imports_circular_a.rs:40:56
   |
40 |         self.two = Box::new(ImportsCircularB::new(self.stream, self, _root)?);
   |                                                        ^^^^^^

error[E0308]: mismatched types
  --> src/imports0.rs:41:57
   |
41 |         self.hw = Box::new(HelloWorld::new(self.stream, self, _root)?);
   |                                                         ^^^^ expected enum `std::option::Option`, found struct `imports0::Imports0`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut imports0::Imports0`

error[E0308]: mismatched types
  --> src/imports0.rs:39:27
   |
39 |           where Self: Sized {
   |  ___________________________^
40 | |         self.two = self.stream.read_u1()?;
41 | |         self.hw = Box::new(HelloWorld::new(self.stream, self, _root)?);
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/imports_circular_a.rs:40:64
   |
40 |         self.two = Box::new(ImportsCircularB::new(self.stream, self, _root)?);
   |                                                                ^^^^ expected enum `std::option::Option`, found struct `imports_circular_a::ImportsCircularA`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut imports_circular_a::ImportsCircularA`

error[E0308]: mismatched types
  --> src/imports_circular_a.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.code = self.stream.read_u1()?;
40 | |         self.two = Box::new(ImportsCircularB::new(self.stream, self, _root)?);
41 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `imported_2::Imported2`
  --> src/imported_2.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`

error[E0609]: no field `stream` on type `&mut imported_2::Imported2`
  --> src/imported_2.rs:37:25
   |
37 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/imported_2.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |         self.one = self.stream.read_u1()?;
38 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `imports_rel_1::ImportsRel1`
  --> src/imports_rel_1.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`

error[E0609]: no field `stream` on type `&mut imports_rel_1::ImportsRel1`
  --> src/imports_rel_1.rs:39:25
   |
39 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut imports_rel_1::ImportsRel1`
  --> src/imports_rel_1.rs:40:49
   |
40 |         self.two = Box::new(Imported1::new(self.stream, self, _root)?);
   |                                                 ^^^^^^

error[E0308]: mismatched types
  --> src/imports0.rs:51:22
   |
51 |         self.hwOne = self.hw.one;
   |                      ^^^^^^^^^^^
   |                      |
   |                      expected enum `std::option::Option`, found u8
   |                      help: try using a variant of the expected type: `Some(self.hw.one)`
   |
   = note: expected type `std::option::Option<u8>`
              found type `u8`

error[E0308]: mismatched types
  --> src/imports0.rs:52:16
   |
52 |         return self.hwOne;
   |                ^^^^^^^^^^ expected u8, found enum `std::option::Option`
   |
   = note: expected type `u8`
              found type `std::option::Option<u8>`

error[E0609]: no field `stream` on type `imported_and_abs::ImportedAndAbs`
  --> src/imported_and_abs.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`

error[E0609]: no field `stream` on type `&mut imported_and_abs::ImportedAndAbs`
  --> src/imported_and_abs.rs:39:25
   |
39 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut imported_and_abs::ImportedAndAbs`
  --> src/imported_and_abs.rs:40:52
   |
40 |         self.two = Box::new(ImportedRoot::new(self.stream, self, _root)?);
   |                                                    ^^^^^^

error[E0308]: mismatched types
  --> src/imports_rel_1.rs:40:57
   |
40 |         self.two = Box::new(Imported1::new(self.stream, self, _root)?);
   |                                                         ^^^^ expected enum `std::option::Option`, found struct `imports_rel_1::ImportsRel1`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut imports_rel_1::ImportsRel1`

error[E0308]: mismatched types
  --> src/imports_rel_1.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.one = self.stream.read_u1()?;
40 | |         self.two = Box::new(Imported1::new(self.stream, self, _root)?);
41 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `imported_1::Imported1`
  --> src/imported_1.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`

error[E0609]: no field `stream` on type `&mut imported_1::Imported1`
  --> src/imported_1.rs:39:25
   |
39 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut imported_1::Imported1`
  --> src/imported_1.rs:40:49
   |
40 |         self.two = Box::new(Imported2::new(self.stream, self, _root)?);
   |                                                 ^^^^^^

error[E0308]: mismatched types
  --> src/imported_and_abs.rs:40:60
   |
40 |         self.two = Box::new(ImportedRoot::new(self.stream, self, _root)?);
   |                                                            ^^^^ expected enum `std::option::Option`, found struct `imported_and_abs::ImportedAndAbs`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut imported_and_abs::ImportedAndAbs`

error[E0308]: mismatched types
  --> src/imported_and_abs.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.one = self.stream.read_u1()?;
40 | |         self.two = Box::new(ImportedRoot::new(self.stream, self, _root)?);
41 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `imported_root::ImportedRoot`
  --> src/imported_root.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`

error[E0609]: no field `stream` on type `&mut imported_root::ImportedRoot`
  --> src/imported_root.rs:37:25
   |
37 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/imported_root.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |         self.one = self.stream.read_u1()?;
38 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `imports_abs_abs::ImportsAbsAbs`
  --> src/imports_abs_abs.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`

error[E0609]: no field `stream` on type `&mut imports_abs_abs::ImportsAbsAbs`
  --> src/imports_abs_abs.rs:39:25
   |
39 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut imports_abs_abs::ImportsAbsAbs`
  --> src/imports_abs_abs.rs:40:54
   |
40 |         self.two = Box::new(ImportedAndAbs::new(self.stream, self, _root)?);
   |                                                      ^^^^^^

error[E0308]: mismatched types
  --> src/imported_1.rs:40:57
   |
40 |         self.two = Box::new(Imported2::new(self.stream, self, _root)?);
   |                                                         ^^^^ expected enum `std::option::Option`, found struct `imported_1::Imported1`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut imported_1::Imported1`

error[E0308]: mismatched types
  --> src/imported_1.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.one = self.stream.read_u1()?;
40 | |         self.two = Box::new(Imported2::new(self.stream, self, _root)?);
41 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `index_sizes::IndexSizes`
  --> src/index_sizes.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `qty`, `sizes`, `bufs`

error[E0609]: no field `stream` on type `&mut index_sizes::IndexSizes`
  --> src/index_sizes.rs:40:25
   |
40 |         self.qty = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut index_sizes::IndexSizes`
  --> src/index_sizes.rs:43:34
   |
43 |             self.sizes.push(self.stream.read_u4le()?);
   |                                  ^^^^^^

error[E0609]: no field `stream` on type `&mut index_sizes::IndexSizes`
  --> src/index_sizes.rs:47:57
   |
47 |             self.bufs.push(String::from_utf8_lossy(self.stream.read_bytes(self.sizes[i])?));
   |                                                         ^^^^^^

error[E0277]: the trait bound `u32: std::slice::SliceIndex<[u32]>` is not satisfied
  --> src/index_sizes.rs:47:75
   |
47 |             self.bufs.push(String::from_utf8_lossy(self.stream.read_bytes(self.sizes[i])?));
   |                                                                           ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`
   |
   = help: the trait `std::slice::SliceIndex<[u32]>` is not implemented for `u32`
   = note: required because of the requirements on the impl of `std::ops::Index<u32>` for `std::vec::Vec<u32>`

error[E0308]: mismatched types
  --> src/imports_abs_abs.rs:40:62
   |
40 |         self.two = Box::new(ImportedAndAbs::new(self.stream, self, _root)?);
   |                                                              ^^^^ expected enum `std::option::Option`, found struct `imports_abs_abs::ImportsAbsAbs`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut imports_abs_abs::ImportsAbsAbs`

error[E0308]: mismatched types
  --> src/imports_abs_abs.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.one = self.stream.read_u1()?;
40 | |         self.two = Box::new(ImportedAndAbs::new(self.stream, self, _root)?);
41 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `imported_and_rel::ImportedAndRel`
  --> src/imported_and_rel.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`

error[E0609]: no field `stream` on type `&mut imported_and_rel::ImportedAndRel`
  --> src/imported_and_rel.rs:39:25
   |
39 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut imported_and_rel::ImportedAndRel`
  --> src/imported_and_rel.rs:40:52
   |
40 |         self.two = Box::new(ImportedRoot::new(self.stream, self, _root)?);
   |                                                    ^^^^^^

error[E0308]: mismatched types
  --> src/index_sizes.rs:47:28
   |
47 |             self.bufs.push(String::from_utf8_lossy(self.stream.read_bytes(self.sizes[i])?));
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                            |
   |                            expected struct `std::string::String`, found enum `std::borrow::Cow`
   |                            help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes(self.sizes[i])?).to_string()`
   |
   = note: expected type `std::string::String`
              found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
  --> src/index_sizes.rs:46:9
   |
38 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
46 | /         for i in 0..self.qty {
47 | |             self.bufs.push(String::from_utf8_lossy(self.stream.read_bytes(self.sizes[i])?));
48 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `index_to_param_eos::IndexToParamEos`
  --> src/index_to_param_eos.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `qty`, `sizes`, `blocks`

error[E0609]: no field `stream` on type `&mut index_to_param_eos::IndexToParamEos`
  --> src/index_to_param_eos.rs:40:25
   |
40 |         self.qty = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut index_to_param_eos::IndexToParamEos`
  --> src/index_to_param_eos.rs:43:34
   |
43 |             self.sizes.push(self.stream.read_u4le()?);
   |                                  ^^^^^^

error[E0308]: mismatched types
  --> src/imported_and_rel.rs:40:60
   |
40 |         self.two = Box::new(ImportedRoot::new(self.stream, self, _root)?);
   |                                                            ^^^^ expected enum `std::option::Option`, found struct `imported_and_rel::ImportedAndRel`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut imported_and_rel::ImportedAndRel`

error[E0308]: mismatched types
  --> src/imported_and_rel.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.one = self.stream.read_u1()?;
40 | |         self.two = Box::new(ImportedRoot::new(self.stream, self, _root)?);
41 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `imports_abs_rel::ImportsAbsRel`
  --> src/imports_abs_rel.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`

error[E0609]: no field `stream` on type `&mut imports_abs_rel::ImportsAbsRel`
  --> src/imports_abs_rel.rs:39:25
   |
39 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut imports_abs_rel::ImportsAbsRel`
  --> src/imports_abs_rel.rs:40:54
   |
40 |         self.two = Box::new(ImportedAndRel::new(self.stream, self, _root)?);
   |                                                      ^^^^^^

error[E0308]: mismatched types
  --> src/index_to_param_eos.rs:45:23
   |
45 |         self.blocks = [];
   |                       ^^
   |                       |
   |                       expected struct `std::vec::Vec`, found array of 0 elements
   |                       help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<index_to_param_eos::IndexToParamEos__Block>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut index_to_param_eos::IndexToParamEos`
  --> src/index_to_param_eos.rs:46:21
   |
46 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut index_to_param_eos::IndexToParamEos`
  --> src/index_to_param_eos.rs:47:72
   |
47 |             self.blocks.push(Box::new(IndexToParamEos__Block::new(self.stream, self, _root)?));
   |                                                                        ^^^^^^

error[E0308]: mismatched types
  --> src/imports_abs_rel.rs:40:62
   |
40 |         self.two = Box::new(ImportedAndRel::new(self.stream, self, _root)?);
   |                                                              ^^^^ expected enum `std::option::Option`, found struct `imports_abs_rel::ImportsAbsRel`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut imports_abs_rel::ImportsAbsRel`

error[E0308]: mismatched types
  --> src/imports_abs_rel.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.one = self.stream.read_u1()?;
40 | |         self.two = Box::new(ImportedAndRel::new(self.stream, self, _root)?);
41 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `imports_circular_b::ImportsCircularB`
  --> src/imports_circular_b.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `initial`, `backRef`

error[E0609]: no field `stream` on type `&mut imports_circular_b::ImportsCircularB`
  --> src/imports_circular_b.rs:39:29
   |
39 |         self.initial = self.stream.read_u1()?;
   |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut imports_circular_b::ImportsCircularB`
  --> src/imports_circular_b.rs:41:64
   |
41 |             self.backRef = Box::new(ImportsCircularA::new(self.stream, self, _root)?);
   |                                                                ^^^^^^

error[E0308]: mismatched types
  --> src/index_to_param_eos.rs:47:80
   |
47 |             self.blocks.push(Box::new(IndexToParamEos__Block::new(self.stream, self, _root)?));
   |                                                                                ^^^^ expected enum `std::option::Option`, found struct `index_to_param_eos::IndexToParamEos`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut index_to_param_eos::IndexToParamEos`

error[E0308]: mismatched types
  --> src/index_to_param_eos.rs:46:9
   |
38 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
46 | /         while !self.stream.isEof() {
47 | |             self.blocks.push(Box::new(IndexToParamEos__Block::new(self.stream, self, _root)?));
48 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `index_to_param_eos::IndexToParamEos__Block`
  --> src/index_to_param_eos.rs:67:11
   |
67 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `buf`

error[E0609]: no field `stream` on type `&mut index_to_param_eos::IndexToParamEos__Block`
  --> src/index_to_param_eos.rs:80:49
   |
80 |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
   |                                                 ^^^^^^

error[E0609]: no field `_root` on type `&mut index_to_param_eos::IndexToParamEos__Block`
  --> src/index_to_param_eos.rs:80:72
   |
80 |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
   |                                                                        ^^^^^

error[E0609]: no field `idx` on type `&mut index_to_param_eos::IndexToParamEos__Block`
  --> src/index_to_param_eos.rs:80:89
   |
80 |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
   |                                                                                         ^^^

error[E0308]: mismatched types
  --> src/imports_circular_b.rs:41:72
   |
41 |             self.backRef = Box::new(ImportsCircularA::new(self.stream, self, _root)?);
   |                                                                        ^^^^ expected enum `std::option::Option`, found struct `imports_circular_b::ImportsCircularB`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut imports_circular_b::ImportsCircularB`

error[E0308]: mismatched types
  --> src/imports_circular_b.rs:40:31
   |
40 |           if self.initial == 65 {
   |  _______________________________^
41 | |             self.backRef = Box::new(ImportsCircularA::new(self.stream, self, _root)?);
42 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `imports_circular_a::ImportsCircularA`
  --> src/imports_circular_a.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `code`, `two`

error[E0609]: no field `stream` on type `&mut imports_circular_a::ImportsCircularA`
  --> src/imports_circular_a.rs:39:26
   |
39 |         self.code = self.stream.read_u1()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut imports_circular_a::ImportsCircularA`
  --> src/imports_circular_a.rs:40:56
   |
40 |         self.two = Box::new(ImportsCircularB::new(self.stream, self, _root)?);
   |                                                        ^^^^^^

error[E0308]: mismatched types
  --> src/index_to_param_eos.rs:80:20
   |
80 |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                    |
   |                    expected struct `std::string::String`, found enum `std::borrow::Cow`
   |                    help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?).to_string()`
   |
   = note: expected type `std::string::String`
              found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
  --> src/index_to_param_eos.rs:79:27
   |
79 |           where Self: Sized {
   |  ___________________________^
80 | |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
81 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `index_to_param_expr::IndexToParamExpr`
  --> src/index_to_param_expr.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `qty`, `sizes`, `blocks`

error[E0609]: no field `stream` on type `&mut index_to_param_expr::IndexToParamExpr`
  --> src/index_to_param_expr.rs:40:25
   |
40 |         self.qty = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut index_to_param_expr::IndexToParamExpr`
  --> src/index_to_param_expr.rs:43:34
   |
43 |             self.sizes.push(self.stream.read_u4le()?);
   |                                  ^^^^^^

error[E0609]: no field `stream` on type `&mut index_to_param_expr::IndexToParamExpr`
  --> src/index_to_param_expr.rs:47:73
   |
47 |             self.blocks.push(Box::new(IndexToParamExpr__Block::new(self.stream, self, _root)?));
   |                                                                         ^^^^^^

error[E0308]: mismatched types
  --> src/imports_circular_a.rs:40:64
   |
40 |         self.two = Box::new(ImportsCircularB::new(self.stream, self, _root)?);
   |                                                                ^^^^ expected enum `std::option::Option`, found struct `imports_circular_a::ImportsCircularA`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut imports_circular_a::ImportsCircularA`

error[E0308]: mismatched types
  --> src/imports_circular_a.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.code = self.stream.read_u1()?;
40 | |         self.two = Box::new(ImportsCircularB::new(self.stream, self, _root)?);
41 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/index_to_param_expr.rs:47:81
   |
47 |             self.blocks.push(Box::new(IndexToParamExpr__Block::new(self.stream, self, _root)?));
   |                                                                                 ^^^^ expected enum `std::option::Option`, found struct `index_to_param_expr::IndexToParamExpr`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut index_to_param_expr::IndexToParamExpr`

error[E0308]: mismatched types
  --> src/index_to_param_expr.rs:46:9
   |
38 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
46 | /         for i in 0..self.qty {
47 | |             self.blocks.push(Box::new(IndexToParamExpr__Block::new(self.stream, self, _root)?));
48 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `imported_2::Imported2`
  --> src/imported_2.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`

error[E0609]: no field `stream` on type `index_to_param_expr::IndexToParamExpr__Block`
  --> src/index_to_param_expr.rs:67:11
   |
67 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `buf`

error[E0609]: no field `stream` on type `&mut imported_2::Imported2`
  --> src/imported_2.rs:37:25
   |
37 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/imported_2.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |         self.one = self.stream.read_u1()?;
38 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut index_to_param_expr::IndexToParamExpr__Block`
  --> src/index_to_param_expr.rs:80:49
   |
80 |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
   |                                                 ^^^^^^

error[E0609]: no field `_root` on type `&mut index_to_param_expr::IndexToParamExpr__Block`
  --> src/index_to_param_expr.rs:80:72
   |
80 |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
   |                                                                        ^^^^^

error[E0609]: no field `stream` on type `imports_rel_1::ImportsRel1`
  --> src/imports_rel_1.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`

error[E0609]: no field `idx` on type `&mut index_to_param_expr::IndexToParamExpr__Block`
  --> src/index_to_param_expr.rs:80:89
   |
80 |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
   |                                                                                         ^^^

error[E0609]: no field `stream` on type `&mut imports_rel_1::ImportsRel1`
  --> src/imports_rel_1.rs:39:25
   |
39 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut imports_rel_1::ImportsRel1`
  --> src/imports_rel_1.rs:40:49
   |
40 |         self.two = Box::new(Imported1::new(self.stream, self, _root)?);
   |                                                 ^^^^^^

error[E0308]: mismatched types
  --> src/index_to_param_expr.rs:80:20
   |
80 |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                    |
   |                    expected struct `std::string::String`, found enum `std::borrow::Cow`
   |                    help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?).to_string()`
   |
   = note: expected type `std::string::String`
              found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
  --> src/index_to_param_expr.rs:79:27
   |
79 |           where Self: Sized {
   |  ___________________________^
80 | |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
81 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/imports_rel_1.rs:40:57
   |
40 |         self.two = Box::new(Imported1::new(self.stream, self, _root)?);
   |                                                         ^^^^ expected enum `std::option::Option`, found struct `imports_rel_1::ImportsRel1`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut imports_rel_1::ImportsRel1`

error[E0308]: mismatched types
  --> src/imports_rel_1.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.one = self.stream.read_u1()?;
40 | |         self.two = Box::new(Imported1::new(self.stream, self, _root)?);
41 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `index_to_param_until::IndexToParamUntil`
  --> src/index_to_param_until.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `qty`, `sizes`, `blocks`

error[E0609]: no field `stream` on type `imported_1::Imported1`
  --> src/imported_1.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`

error[E0609]: no field `stream` on type `&mut index_to_param_until::IndexToParamUntil`
  --> src/index_to_param_until.rs:40:25
   |
40 |         self.qty = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut imported_1::Imported1`
  --> src/imported_1.rs:39:25
   |
39 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut imported_1::Imported1`
  --> src/imported_1.rs:40:49
   |
40 |         self.two = Box::new(Imported2::new(self.stream, self, _root)?);
   |                                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut index_to_param_until::IndexToParamUntil`
  --> src/index_to_param_until.rs:43:34
   |
43 |             self.sizes.push(self.stream.read_u4le()?);
   |                                  ^^^^^^

error[E0609]: no field `stream` on type `&mut index_to_param_until::IndexToParamUntil`
  --> src/index_to_param_until.rs:47:68
   |
47 |             let tmpa = Box::new(IndexToParamUntil__Block::new(self.stream, self, _root)?);
   |                                                                    ^^^^^^

error[E0308]: mismatched types
  --> src/index_to_param_until.rs:47:76
   |
47 |             let tmpa = Box::new(IndexToParamUntil__Block::new(self.stream, self, _root)?);
   |                                                                            ^^^^ expected enum `std::option::Option`, found struct `index_to_param_until::IndexToParamUntil`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut index_to_param_until::IndexToParamUntil`

error[E0609]: no field `stream` on type `&mut index_to_param_until::IndexToParamUntil`
  --> src/index_to_param_until.rs:48:76
   |
48 |             self.blocks.append(Box::new(IndexToParamUntil__Block::new(self.stream, self, _root)?));
   |                                                                            ^^^^^^

error[E0308]: mismatched types
  --> src/imported_1.rs:40:57
   |
40 |         self.two = Box::new(Imported2::new(self.stream, self, _root)?);
   |                                                         ^^^^ expected enum `std::option::Option`, found struct `imported_1::Imported1`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut imported_1::Imported1`

error[E0308]: mismatched types
  --> src/imported_1.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.one = self.stream.read_u1()?;
40 | |         self.two = Box::new(Imported2::new(self.stream, self, _root)?);
41 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `index_sizes::IndexSizes`
  --> src/index_sizes.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `qty`, `sizes`, `bufs`

error[E0609]: no field `stream` on type `&mut index_sizes::IndexSizes`
  --> src/index_sizes.rs:40:25
   |
40 |         self.qty = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut index_sizes::IndexSizes`
  --> src/index_sizes.rs:43:34
   |
43 |             self.sizes.push(self.stream.read_u4le()?);
   |                                  ^^^^^^

error[E0609]: no field `stream` on type `&mut index_sizes::IndexSizes`
  --> src/index_sizes.rs:47:57
   |
47 |             self.bufs.push(String::from_utf8_lossy(self.stream.read_bytes(self.sizes[i])?));
   |                                                         ^^^^^^

error[E0277]: the trait bound `u32: std::slice::SliceIndex<[u32]>` is not satisfied
  --> src/index_sizes.rs:47:75
   |
47 |             self.bufs.push(String::from_utf8_lossy(self.stream.read_bytes(self.sizes[i])?));
   |                                                                           ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`
   |
   = help: the trait `std::slice::SliceIndex<[u32]>` is not implemented for `u32`
   = note: required because of the requirements on the impl of `std::ops::Index<u32>` for `std::vec::Vec<u32>`

error[E0308]: mismatched types
  --> src/index_to_param_until.rs:48:84
   |
48 |             self.blocks.append(Box::new(IndexToParamUntil__Block::new(self.stream, self, _root)?));
   |                                                                                    ^^^^ expected enum `std::option::Option`, found struct `index_to_param_until::IndexToParamUntil`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut index_to_param_until::IndexToParamUntil`

error[E0308]: mismatched types
  --> src/index_sizes.rs:47:28
   |
47 |             self.bufs.push(String::from_utf8_lossy(self.stream.read_bytes(self.sizes[i])?));
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                            |
   |                            expected struct `std::string::String`, found enum `std::borrow::Cow`
   |                            help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes(self.sizes[i])?).to_string()`
   |
   = note: expected type `std::string::String`
              found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
  --> src/index_sizes.rs:46:9
   |
38 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
46 | /         for i in 0..self.qty {
47 | |             self.bufs.push(String::from_utf8_lossy(self.stream.read_bytes(self.sizes[i])?));
48 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `index_to_param_eos::IndexToParamEos`
  --> src/index_to_param_eos.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `qty`, `sizes`, `blocks`

error[E0609]: no field `stream` on type `&mut index_to_param_eos::IndexToParamEos`
  --> src/index_to_param_eos.rs:40:25
   |
40 |         self.qty = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut index_to_param_eos::IndexToParamEos`
  --> src/index_to_param_eos.rs:43:34
   |
43 |             self.sizes.push(self.stream.read_u4le()?);
   |                                  ^^^^^^

error[E0308]: mismatched types
  --> src/index_to_param_until.rs:48:32
   |
48 |             self.blocks.append(Box::new(IndexToParamUntil__Block::new(self.stream, self, _root)?));
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected mutable reference, found struct `std::boxed::Box`
   |
   = note: expected type `&mut std::vec::Vec<std::boxed::Box<index_to_param_until::IndexToParamUntil__Block>>`
              found type `std::boxed::Box<index_to_param_until::IndexToParamUntil__Block>`

error[E0609]: no field `_io` on type `&mut index_to_param_until::IndexToParamUntil`
  --> src/index_to_param_until.rs:49:20
   |
49 |             !(self._io.is_eof)
   |                    ^^^

error[E0308]: mismatched types
  --> src/index_to_param_until.rs:46:9
   |
38 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
46 | /         while {
47 | |             let tmpa = Box::new(IndexToParamUntil__Block::new(self.stream, self, _root)?);
48 | |             self.blocks.append(Box::new(IndexToParamUntil__Block::new(self.stream, self, _root)?));
49 | |             !(self._io.is_eof)
50 | |         } { }
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `index_to_param_until::IndexToParamUntil__Block`
  --> src/index_to_param_until.rs:69:11
   |
69 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `buf`

error[E0609]: no field `stream` on type `&mut index_to_param_until::IndexToParamUntil__Block`
  --> src/index_to_param_until.rs:82:49
   |
82 |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
   |                                                 ^^^^^^

error[E0609]: no field `_root` on type `&mut index_to_param_until::IndexToParamUntil__Block`
  --> src/index_to_param_until.rs:82:72
   |
82 |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
   |                                                                        ^^^^^

error[E0609]: no field `idx` on type `&mut index_to_param_until::IndexToParamUntil__Block`
  --> src/index_to_param_until.rs:82:89
   |
82 |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
   |                                                                                         ^^^

error[E0308]: mismatched types
  --> src/index_to_param_until.rs:82:20
   |
82 |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                    |
   |                    expected struct `std::string::String`, found enum `std::borrow::Cow`
   |                    help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?).to_string()`
   |
   = note: expected type `std::string::String`
              found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
  --> src/index_to_param_until.rs:81:27
   |
81 |           where Self: Sized {
   |  ___________________________^
82 | |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
83 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `instance_io_user::InstanceIoUser`
  --> src/instance_io_user.rs:29:11
   |
29 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `qtyEntries`, `entries`, `strings`, `_raw_strings`

error[E0609]: no field `stream` on type `&mut instance_io_user::InstanceIoUser`
  --> src/instance_io_user.rs:42:32
   |
42 |         self.qtyEntries = self.stream.read_u4le()?;
   |                                ^^^^^^

error[E0308]: mismatched types
  --> src/index_to_param_eos.rs:45:23
   |
45 |         self.blocks = [];
   |                       ^^
   |                       |
   |                       expected struct `std::vec::Vec`, found array of 0 elements
   |                       help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<index_to_param_eos::IndexToParamEos__Block>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut index_to_param_eos::IndexToParamEos`
  --> src/index_to_param_eos.rs:46:21
   |
46 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `qty_entries` on type `&mut instance_io_user::InstanceIoUser`
  --> src/instance_io_user.rs:44:26
   |
44 |         for i in 0..self.qty_entries {
   |                          ^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut index_to_param_eos::IndexToParamEos`
  --> src/index_to_param_eos.rs:47:72
   |
47 |             self.blocks.push(Box::new(IndexToParamEos__Block::new(self.stream, self, _root)?));
   |                                                                        ^^^^^^

error[E0609]: no field `stream` on type `&mut instance_io_user::InstanceIoUser`
  --> src/instance_io_user.rs:45:72
   |
45 |             self.entries.push(Box::new(InstanceIoUser__Entry::new(self.stream, self, _root)?));
   |                                                                        ^^^^^^

error[E0308]: mismatched types
  --> src/instance_io_user.rs:45:80
   |
45 |             self.entries.push(Box::new(InstanceIoUser__Entry::new(self.stream, self, _root)?));
   |                                                                                ^^^^ expected enum `std::option::Option`, found struct `instance_io_user::InstanceIoUser`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut instance_io_user::InstanceIoUser`

error[E0609]: no field `stream` on type `&mut instance_io_user::InstanceIoUser`
  --> src/instance_io_user.rs:47:34
   |
47 |         self._raw_strings = self.stream.read_bytes_full()?;
   |                                  ^^^^^^

error[E0609]: no field `stream` on type `&mut instance_io_user::InstanceIoUser`
  --> src/instance_io_user.rs:49:70
   |
49 |         self.strings = Box::new(InstanceIoUser__StringsObj::new(self.stream, self, _root)?);
   |                                                                      ^^^^^^

error[E0308]: mismatched types
  --> src/index_to_param_eos.rs:47:80
   |
47 |             self.blocks.push(Box::new(IndexToParamEos__Block::new(self.stream, self, _root)?));
   |                                                                                ^^^^ expected enum `std::option::Option`, found struct `index_to_param_eos::IndexToParamEos`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut index_to_param_eos::IndexToParamEos`

error[E0308]: mismatched types
  --> src/index_to_param_eos.rs:46:9
   |
38 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
46 | /         while !self.stream.isEof() {
47 | |             self.blocks.push(Box::new(IndexToParamEos__Block::new(self.stream, self, _root)?));
48 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `index_to_param_eos::IndexToParamEos__Block`
  --> src/index_to_param_eos.rs:67:11
   |
67 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `buf`

error[E0609]: no field `stream` on type `&mut index_to_param_eos::IndexToParamEos__Block`
  --> src/index_to_param_eos.rs:80:49
   |
80 |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
   |                                                 ^^^^^^

error[E0609]: no field `_root` on type `&mut index_to_param_eos::IndexToParamEos__Block`
  --> src/index_to_param_eos.rs:80:72
   |
80 |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
   |                                                                        ^^^^^

error[E0609]: no field `idx` on type `&mut index_to_param_eos::IndexToParamEos__Block`
  --> src/index_to_param_eos.rs:80:89
   |
80 |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
   |                                                                                         ^^^

error[E0308]: mismatched types
  --> src/instance_io_user.rs:49:78
   |
49 |         self.strings = Box::new(InstanceIoUser__StringsObj::new(self.stream, self, _root)?);
   |                                                                              ^^^^ expected enum `std::option::Option`, found struct `instance_io_user::InstanceIoUser`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut instance_io_user::InstanceIoUser`

error[E0308]: mismatched types
  --> src/instance_io_user.rs:41:27
   |
41 |           where Self: Sized {
   |  ___________________________^
42 | |         self.qtyEntries = self.stream.read_u4le()?;
43 | |         self.entries = vec!();
44 | |         for i in 0..self.qty_entries {
...  |
49 | |         self.strings = Box::new(InstanceIoUser__StringsObj::new(self.stream, self, _root)?);
50 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `instance_io_user::InstanceIoUser__Entry`
  --> src/instance_io_user.rs:70:11
   |
70 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `nameOfs`, `value`, `name`

error[E0609]: no field `stream` on type `&mut instance_io_user::InstanceIoUser__Entry`
  --> src/instance_io_user.rs:83:29
   |
83 |         self.nameOfs = self.stream.read_u4le()?;
   |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut instance_io_user::InstanceIoUser__Entry`
  --> src/instance_io_user.rs:84:27
   |
84 |         self.value = self.stream.read_u4le()?;
   |                           ^^^^^^

error[E0308]: mismatched types
  --> src/instance_io_user.rs:82:27
   |
82 |           where Self: Sized {
   |  ___________________________^
83 | |         self.nameOfs = self.stream.read_u4le()?;
84 | |         self.value = self.stream.read_u4le()?;
85 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `_root` on type `&mut instance_io_user::InstanceIoUser__Entry`
  --> src/instance_io_user.rs:94:27
   |
94 |         let mut io = self._root.strings._io;
   |                           ^^^^^

error[E0609]: no field `name_ofs` on type `&mut instance_io_user::InstanceIoUser__Entry`
  --> src/instance_io_user.rs:96:22
   |
96 |         io.seek(self.name_ofs);
   |                      ^^^^^^^^

warning: unreachable expression
  --> src/instance_io_user.rs:97:9
   |
97 |         self.name = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> src/instance_io_user.rs:99:16
   |
99 |         return self.name;
   |                ^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0609]: no field `stream` on type `instance_io_user::InstanceIoUser__StringsObj`
   --> src/instance_io_user.rs:115:11
    |
115 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `str`

error[E0308]: mismatched types
  --> src/index_to_param_eos.rs:80:20
   |
80 |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                    |
   |                    expected struct `std::string::String`, found enum `std::borrow::Cow`
   |                    help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?).to_string()`
   |
   = note: expected type `std::string::String`
              found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
  --> src/index_to_param_eos.rs:79:27
   |
79 |           where Self: Sized {
   |  ___________________________^
80 | |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
81 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `index_to_param_expr::IndexToParamExpr`
  --> src/index_to_param_expr.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `qty`, `sizes`, `blocks`

error[E0609]: no field `stream` on type `&mut index_to_param_expr::IndexToParamExpr`
  --> src/index_to_param_expr.rs:40:25
   |
40 |         self.qty = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut index_to_param_expr::IndexToParamExpr`
  --> src/index_to_param_expr.rs:43:34
   |
43 |             self.sizes.push(self.stream.read_u4le()?);
   |                                  ^^^^^^

error[E0609]: no field `stream` on type `&mut index_to_param_expr::IndexToParamExpr`
  --> src/index_to_param_expr.rs:47:73
   |
47 |             self.blocks.push(Box::new(IndexToParamExpr__Block::new(self.stream, self, _root)?));
   |                                                                         ^^^^^^

error[E0308]: mismatched types
   --> src/instance_io_user.rs:128:20
    |
128 |         self.str = [];
    |                    ^^
    |                    |
    |                    expected struct `std::vec::Vec`, found array of 0 elements
    |                    help: try using a conversion method: `[].to_vec()`
    |
    = note: expected type `std::vec::Vec<std::string::String>`
               found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut instance_io_user::InstanceIoUser__StringsObj`
   --> src/instance_io_user.rs:129:21
    |
129 |         while !self.stream.isEof() {
    |                     ^^^^^^

warning: unreachable expression
   --> src/instance_io_user.rs:130:13
    |
130 |             self.str.push(panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8"));
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> src/instance_io_user.rs:129:9
    |
126 |                                -> Result<()>
    |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
129 | /         while !self.stream.isEof() {
130 | |             self.str.push(panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8"));
131 | |         }
    | |_________^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `instance_std_array::InstanceStdArray`
  --> src/instance_std_array.rs:28:11
   |
28 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `ofs`, `entrySize`, `qtyEntries`, `entries`

error[E0609]: no field `stream` on type `&mut instance_std_array::InstanceStdArray`
  --> src/instance_std_array.rs:41:25
   |
41 |         self.ofs = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut instance_std_array::InstanceStdArray`
  --> src/instance_std_array.rs:42:31
   |
42 |         self.entrySize = self.stream.read_u4le()?;
   |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut instance_std_array::InstanceStdArray`
  --> src/instance_std_array.rs:43:32
   |
43 |         self.qtyEntries = self.stream.read_u4le()?;
   |                                ^^^^^^

error[E0308]: mismatched types
  --> src/instance_std_array.rs:40:27
   |
40 |           where Self: Sized {
   |  ___________________________^
41 | |         self.ofs = self.stream.read_u4le()?;
42 | |         self.entrySize = self.stream.read_u4le()?;
43 | |         self.qtyEntries = self.stream.read_u4le()?;
44 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut instance_std_array::InstanceStdArray`
  --> src/instance_std_array.rs:53:25
   |
53 |         let _pos = self.stream.pos();
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut instance_std_array::InstanceStdArray`
  --> src/instance_std_array.rs:54:14
   |
54 |         self.stream.seek(self.ofs);
   |              ^^^^^^

error[E0308]: mismatched types
  --> src/index_to_param_expr.rs:47:81
   |
47 |             self.blocks.push(Box::new(IndexToParamExpr__Block::new(self.stream, self, _root)?));
   |                                                                                 ^^^^ expected enum `std::option::Option`, found struct `index_to_param_expr::IndexToParamExpr`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut index_to_param_expr::IndexToParamExpr`

error[E0308]: mismatched types
  --> src/index_to_param_expr.rs:46:9
   |
38 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
46 | /         for i in 0..self.qty {
47 | |             self.blocks.push(Box::new(IndexToParamExpr__Block::new(self.stream, self, _root)?));
48 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `index_to_param_expr::IndexToParamExpr__Block`
  --> src/index_to_param_expr.rs:67:11
   |
67 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `buf`

error[E0609]: no field `stream` on type `&mut index_to_param_expr::IndexToParamExpr__Block`
  --> src/index_to_param_expr.rs:80:49
   |
80 |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
   |                                                 ^^^^^^

error[E0609]: no field `_root` on type `&mut index_to_param_expr::IndexToParamExpr__Block`
  --> src/index_to_param_expr.rs:80:72
   |
80 |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
   |                                                                        ^^^^^

error[E0609]: no field `idx` on type `&mut index_to_param_expr::IndexToParamExpr__Block`
  --> src/index_to_param_expr.rs:80:89
   |
80 |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
   |                                                                                         ^^^

error[E0308]: mismatched types
  --> src/instance_std_array.rs:55:24
   |
55 |         self.entries = vec!();
   |                        ^^^^^^
   |                        |
   |                        expected enum `std::option::Option`, found struct `std::vec::Vec`
   |                        help: try using a variant of the expected type: `Some(<[_]>::into_vec(box []))`
   |
   = note: expected type `std::option::Option<std::vec::Vec<std::vec::Vec<u8>>>`
              found type `std::vec::Vec<_>`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error[E0609]: no field `qty_entries` on type `&mut instance_std_array::InstanceStdArray`
  --> src/instance_std_array.rs:56:26
   |
56 |         for i in 0..self.qty_entries {
   |                          ^^^^^^^^^^^

error[E0599]: no method named `push` found for type `std::option::Option<std::vec::Vec<std::vec::Vec<u8>>>` in the current scope
  --> src/instance_std_array.rs:57:26
   |
57 |             self.entries.push(self.stream.read_bytes(self.entry_size)?);
   |                          ^^^^

error[E0609]: no field `stream` on type `&mut instance_std_array::InstanceStdArray`
  --> src/instance_std_array.rs:57:36
   |
57 |             self.entries.push(self.stream.read_bytes(self.entry_size)?);
   |                                    ^^^^^^

error[E0609]: no field `entry_size` on type `&mut instance_std_array::InstanceStdArray`
  --> src/instance_std_array.rs:57:59
   |
57 |             self.entries.push(self.stream.read_bytes(self.entry_size)?);
   |                                                           ^^^^^^^^^^

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/instance_std_array.rs:57:31
   |
57 |             self.entries.push(self.stream.read_bytes(self.entry_size)?);
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::vec::Vec<std::vec::Vec<u8>>`
   |
   = help: the trait `std::ops::Try` is not implemented for `std::vec::Vec<std::vec::Vec<u8>>`
   = note: required by `std::ops::Try::from_error`

error[E0609]: no field `stream` on type `&mut instance_std_array::InstanceStdArray`
  --> src/instance_std_array.rs:59:14
   |
59 |         self.stream.seek(_pos);
   |              ^^^^^^

error[E0308]: mismatched types
  --> src/instance_std_array.rs:60:16
   |
60 |         return self.entries;
   |                ^^^^^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
   |
   = note: expected type `std::vec::Vec<_>`
              found type `std::option::Option<std::vec::Vec<_>>`

error[E0609]: no field `stream` on type `instance_std::InstanceStd`
  --> src/instance_std.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `header`

error[E0308]: mismatched types
  --> src/instance_std.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut instance_std::InstanceStd`
  --> src/instance_std.rs:46:25
   |
46 |         let _pos = self.stream.pos();
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut instance_std::InstanceStd`
  --> src/instance_std.rs:47:14
   |
47 |         self.stream.seek(2);
   |              ^^^^^^

error[E0609]: no field `stream` on type `&mut instance_std::InstanceStd`
  --> src/instance_std.rs:48:52
   |
48 |         self.header = String::from_utf8_lossy(self.stream.read_bytes(5)?);
   |                                                    ^^^^^^

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/instance_std.rs:48:47
   |
48 |         self.header = String::from_utf8_lossy(self.stream.read_bytes(5)?);
   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::string::String`
   |
   = help: the trait `std::ops::Try` is not implemented for `std::string::String`
   = note: required by `std::ops::Try::from_error`

error[E0308]: mismatched types
  --> src/index_to_param_expr.rs:80:20
   |
80 |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                    |
   |                    expected struct `std::string::String`, found enum `std::borrow::Cow`
   |                    help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?).to_string()`
   |
   = note: expected type `std::string::String`
              found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
  --> src/index_to_param_expr.rs:79:27
   |
79 |           where Self: Sized {
   |  ___________________________^
80 | |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
81 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `index_to_param_until::IndexToParamUntil`
  --> src/index_to_param_until.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `qty`, `sizes`, `blocks`

error[E0609]: no field `stream` on type `&mut index_to_param_until::IndexToParamUntil`
  --> src/index_to_param_until.rs:40:25
   |
40 |         self.qty = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut index_to_param_until::IndexToParamUntil`
  --> src/index_to_param_until.rs:43:34
   |
43 |             self.sizes.push(self.stream.read_u4le()?);
   |                                  ^^^^^^

error[E0609]: no field `stream` on type `&mut index_to_param_until::IndexToParamUntil`
  --> src/index_to_param_until.rs:47:68
   |
47 |             let tmpa = Box::new(IndexToParamUntil__Block::new(self.stream, self, _root)?);
   |                                                                    ^^^^^^

error[E0308]: mismatched types
  --> src/instance_std.rs:48:23
   |
48 |         self.header = String::from_utf8_lossy(self.stream.read_bytes(5)?);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found enum `std::borrow::Cow`
   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `std::borrow::Cow<'_, str>`

error[E0609]: no field `stream` on type `&mut instance_std::InstanceStd`
  --> src/instance_std.rs:49:14
   |
49 |         self.stream.seek(_pos);
   |              ^^^^^^

error[E0308]: mismatched types
  --> src/instance_std.rs:50:16
   |
50 |         return self.header;
   |                ^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0609]: no field `stream` on type `instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:29:11
   |
29 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `ofs`, `entrySize`, `qtyEntries`, `userEntries`

error[E0609]: no field `stream` on type `&mut instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:42:25
   |
42 |         self.ofs = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:43:31
   |
43 |         self.entrySize = self.stream.read_u4le()?;
   |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:44:32
   |
44 |         self.qtyEntries = self.stream.read_u4le()?;
   |                                ^^^^^^

error[E0308]: mismatched types
  --> src/instance_user_array.rs:41:27
   |
41 |           where Self: Sized {
   |  ___________________________^
42 | |         self.ofs = self.stream.read_u4le()?;
43 | |         self.entrySize = self.stream.read_u4le()?;
44 | |         self.qtyEntries = self.stream.read_u4le()?;
45 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:55:29
   |
55 |             let _pos = self.stream.pos();
   |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:56:18
   |
56 |             self.stream.seek(self.ofs);
   |                  ^^^^^^

error[E0609]: no field `_raw_userEntries` on type `&mut instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:57:18
   |
57 |             self._raw_userEntries = vec!();
   |                  ^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> src/index_to_param_until.rs:47:76
   |
47 |             let tmpa = Box::new(IndexToParamUntil__Block::new(self.stream, self, _root)?);
   |                                                                            ^^^^ expected enum `std::option::Option`, found struct `index_to_param_until::IndexToParamUntil`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut index_to_param_until::IndexToParamUntil`

error[E0609]: no field `stream` on type `&mut index_to_param_until::IndexToParamUntil`
  --> src/index_to_param_until.rs:48:76
   |
48 |             self.blocks.append(Box::new(IndexToParamUntil__Block::new(self.stream, self, _root)?));
   |                                                                            ^^^^^^

error[E0308]: mismatched types
  --> src/instance_user_array.rs:58:32
   |
58 |             self.userEntries = vec!();
   |                                ^^^^^^
   |                                |
   |                                expected enum `std::option::Option`, found struct `std::vec::Vec`
   |                                help: try using a variant of the expected type: `Some(<[_]>::into_vec(box []))`
   |
   = note: expected type `std::option::Option<std::vec::Vec<std::boxed::Box<instance_user_array::InstanceUserArray__Entry>>>`
              found type `std::vec::Vec<_>`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error[E0609]: no field `qty_entries` on type `&mut instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:59:30
   |
59 |             for i in 0..self.qty_entries {
   |                              ^^^^^^^^^^^

error[E0609]: no field `_raw_userEntries` on type `&mut instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:60:22
   |
60 |                 self._raw_userEntries.push(self.stream.read_bytes(self.entry_size)?);
   |                      ^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:60:49
   |
60 |                 self._raw_userEntries.push(self.stream.read_bytes(self.entry_size)?);
   |                                                 ^^^^^^

error[E0609]: no field `entry_size` on type `&mut instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:60:72
   |
60 |                 self._raw_userEntries.push(self.stream.read_bytes(self.entry_size)?);
   |                                                                        ^^^^^^^^^^

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/instance_user_array.rs:60:44
   |
60 |                 self._raw_userEntries.push(self.stream.read_bytes(self.entry_size)?);
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::vec::Vec<std::boxed::Box<instance_user_array::InstanceUserArray__Entry>>`
   |
   = help: the trait `std::ops::Try` is not implemented for `std::vec::Vec<std::boxed::Box<instance_user_array::InstanceUserArray__Entry>>`
   = note: required by `std::ops::Try::from_error`

error[E0609]: no field `_raw_userEntries` on type `&mut instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:61:47
   |
61 |                 let mut io = Cursor::new(self._raw_userEntries.last());
   |                                               ^^^^^^^^^^^^^^^^

error[E0599]: no method named `push` found for type `std::option::Option<std::vec::Vec<std::boxed::Box<instance_user_array::InstanceUserArray__Entry>>>` in the current scope
  --> src/instance_user_array.rs:62:34
   |
62 |                 self.userEntries.push(Box::new(InstanceUserArray__Entry::new(self.stream, self, _root)?));
   |                                  ^^^^

error[E0609]: no field `stream` on type `&mut instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:62:83
   |
62 |                 self.userEntries.push(Box::new(InstanceUserArray__Entry::new(self.stream, self, _root)?));
   |                                                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/index_to_param_until.rs:48:84
   |
48 |             self.blocks.append(Box::new(IndexToParamUntil__Block::new(self.stream, self, _root)?));
   |                                                                                    ^^^^ expected enum `std::option::Option`, found struct `index_to_param_until::IndexToParamUntil`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut index_to_param_until::IndexToParamUntil`

error[E0308]: mismatched types
  --> src/instance_user_array.rs:62:91
   |
62 |                 self.userEntries.push(Box::new(InstanceUserArray__Entry::new(self.stream, self, _root)?));
   |                                                                                           ^^^^ expected enum `std::option::Option`, found struct `instance_user_array::InstanceUserArray`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut instance_user_array::InstanceUserArray`

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/instance_user_array.rs:62:48
   |
62 |                 self.userEntries.push(Box::new(InstanceUserArray__Entry::new(self.stream, self, _root)?));
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::vec::Vec<std::boxed::Box<instance_user_array::InstanceUserArray__Entry>>`
   |
   = help: the trait `std::ops::Try` is not implemented for `std::vec::Vec<std::boxed::Box<instance_user_array::InstanceUserArray__Entry>>`
   = note: required by `std::ops::Try::from_error`

error[E0609]: no field `stream` on type `&mut instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:64:18
   |
64 |             self.stream.seek(_pos);
   |                  ^^^^^^

error[E0308]: mismatched types
  --> src/instance_user_array.rs:66:16
   |
66 |         return self.userEntries;
   |                ^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
   |
   = note: expected type `std::vec::Vec<_>`
              found type `std::option::Option<std::vec::Vec<_>>`

error[E0609]: no field `stream` on type `instance_user_array::InstanceUserArray__Entry`
  --> src/instance_user_array.rs:83:11
   |
83 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `word1`, `word2`

error[E0609]: no field `stream` on type `&mut instance_user_array::InstanceUserArray__Entry`
  --> src/instance_user_array.rs:96:27
   |
96 |         self.word1 = self.stream.read_u2le()?;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut instance_user_array::InstanceUserArray__Entry`
  --> src/instance_user_array.rs:97:27
   |
97 |         self.word2 = self.stream.read_u2le()?;
   |                           ^^^^^^

error[E0308]: mismatched types
  --> src/instance_user_array.rs:95:27
   |
95 |           where Self: Sized {
   |  ___________________________^
96 | |         self.word1 = self.stream.read_u2le()?;
97 | |         self.word2 = self.stream.read_u2le()?;
98 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `integers::Integers`
  --> src/integers.rs:50:11
   |
50 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `magic1`, `uint8`, `sint8`, `magicUint`, `uint16` ... and 22 others

error[E0308]: mismatched types
  --> src/index_to_param_until.rs:48:32
   |
48 |             self.blocks.append(Box::new(IndexToParamUntil__Block::new(self.stream, self, _root)?));
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected mutable reference, found struct `std::boxed::Box`
   |
   = note: expected type `&mut std::vec::Vec<std::boxed::Box<index_to_param_until::IndexToParamUntil__Block>>`
              found type `std::boxed::Box<index_to_param_until::IndexToParamUntil__Block>`

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:63:28
   |
63 |         self.magic1 = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x31]));
   |                            ^^^^^^

error[E0609]: no field `_io` on type `&mut index_to_param_until::IndexToParamUntil`
  --> src/index_to_param_until.rs:49:20
   |
49 |             !(self._io.is_eof)
   |                    ^^^

error[E0308]: mismatched types
  --> src/index_to_param_until.rs:46:9
   |
38 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
46 | /         while {
47 | |             let tmpa = Box::new(IndexToParamUntil__Block::new(self.stream, self, _root)?);
48 | |             self.blocks.append(Box::new(IndexToParamUntil__Block::new(self.stream, self, _root)?));
49 | |             !(self._io.is_eof)
50 | |         } { }
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:64:27
   |
64 |         self.uint8 = self.stream.read_u1()?;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `index_to_param_until::IndexToParamUntil__Block`
  --> src/index_to_param_until.rs:69:11
   |
69 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `buf`

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:65:27
   |
65 |         self.sint8 = self.stream.read_s1()?;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:66:31
   |
66 |         self.magicUint = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x55, 0x2d, 0x44, 0x45, 0x46]));
   |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut index_to_param_until::IndexToParamUntil__Block`
  --> src/index_to_param_until.rs:82:49
   |
82 |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
   |                                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:67:28
   |
67 |         self.uint16 = self.stream.read_u2le()?;
   |                            ^^^^^^

error[E0609]: no field `_root` on type `&mut index_to_param_until::IndexToParamUntil__Block`
  --> src/index_to_param_until.rs:82:72
   |
82 |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
   |                                                                        ^^^^^

error[E0609]: no field `idx` on type `&mut index_to_param_until::IndexToParamUntil__Block`
  --> src/index_to_param_until.rs:82:89
   |
82 |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
   |                                                                                         ^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:68:28
   |
68 |         self.uint32 = self.stream.read_u4le()?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:69:28
   |
69 |         self.uint64 = self.stream.read_u8le()?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:70:31
   |
70 |         self.magicSint = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x53, 0x2d, 0x44, 0x45, 0x46]));
   |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:71:28
   |
71 |         self.sint16 = self.stream.read_s2le()?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:72:28
   |
72 |         self.sint32 = self.stream.read_s4le()?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:73:28
   |
73 |         self.sint64 = self.stream.read_s8le()?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:74:33
   |
74 |         self.magicUintLe = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x55, 0x2d, 0x4c, 0x45]));
   |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:75:30
   |
75 |         self.uint16le = self.stream.read_u2le()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:76:30
   |
76 |         self.uint32le = self.stream.read_u4le()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:77:30
   |
77 |         self.uint64le = self.stream.read_u8le()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:78:33
   |
78 |         self.magicSintLe = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x53, 0x2d, 0x4c, 0x45]));
   |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:79:30
   |
79 |         self.sint16le = self.stream.read_s2le()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:80:30
   |
80 |         self.sint32le = self.stream.read_s4le()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:81:30
   |
81 |         self.sint64le = self.stream.read_s8le()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:82:33
   |
82 |         self.magicUintBe = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x55, 0x2d, 0x42, 0x45]));
   |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:83:30
   |
83 |         self.uint16be = self.stream.read_u2be()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:84:30
   |
84 |         self.uint32be = self.stream.read_u4be()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:85:30
   |
85 |         self.uint64be = self.stream.read_u8be()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:86:33
   |
86 |         self.magicSintBe = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x53, 0x2d, 0x42, 0x45]));
   |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:87:30
   |
87 |         self.sint16be = self.stream.read_s2be()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:88:30
   |
88 |         self.sint32be = self.stream.read_s4be()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:89:30
   |
89 |         self.sint64be = self.stream.read_s8be()?;
   |                              ^^^^^^

error[E0308]: mismatched types
  --> src/integers.rs:62:27
   |
62 |           where Self: Sized {
   |  ___________________________^
63 | |         self.magic1 = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x31]));
64 | |         self.uint8 = self.stream.read_u1()?;
65 | |         self.sint8 = self.stream.read_s1()?;
...  |
89 | |         self.sint64be = self.stream.read_s8be()?;
90 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `js_signed_right_shift::JsSignedRightShift`
  --> src/js_signed_right_shift.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `shouldBe40000000`, `shouldBeA00000`

error[E0308]: mismatched types
  --> src/js_signed_right_shift.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/index_to_param_until.rs:82:20
   |
82 |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                    |
   |                    expected struct `std::string::String`, found enum `std::borrow::Cow`
   |                    help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?).to_string()`
   |
   = note: expected type `std::string::String`
              found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
  --> src/index_to_param_until.rs:81:27
   |
81 |           where Self: Sized {
   |  ___________________________^
82 | |         self.buf = String::from_utf8_lossy(self.stream.read_bytes(self._root.sizes[self.idx])?);
83 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `instance_io_user::InstanceIoUser`
  --> src/instance_io_user.rs:29:11
   |
29 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `qtyEntries`, `entries`, `strings`, `_raw_strings`

error[E0609]: no field `stream` on type `&mut instance_io_user::InstanceIoUser`
  --> src/instance_io_user.rs:42:32
   |
42 |         self.qtyEntries = self.stream.read_u4le()?;
   |                                ^^^^^^

error[E0609]: no field `qty_entries` on type `&mut instance_io_user::InstanceIoUser`
  --> src/instance_io_user.rs:44:26
   |
44 |         for i in 0..self.qty_entries {
   |                          ^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut instance_io_user::InstanceIoUser`
  --> src/instance_io_user.rs:45:72
   |
45 |             self.entries.push(Box::new(InstanceIoUser__Entry::new(self.stream, self, _root)?));
   |                                                                        ^^^^^^

error[E0308]: mismatched types
  --> src/js_signed_right_shift.rs:47:33
   |
47 |         self.shouldBe40000000 = (2147483648 >> 1);
   |                                 ^^^^^^^^^^^^^^^^^
   |                                 |
   |                                 expected enum `std::option::Option`, found integral variable
   |                                 help: try using a variant of the expected type: `Some(2147483648 >> 1)`
   |
   = note: expected type `std::option::Option<i32>`
              found type `{integer}`

error[E0308]: mismatched types
  --> src/js_signed_right_shift.rs:48:16
   |
48 |         return self.shouldBe40000000;
   |                ^^^^^^^^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0308]: mismatched types
  --> src/instance_io_user.rs:45:80
   |
45 |             self.entries.push(Box::new(InstanceIoUser__Entry::new(self.stream, self, _root)?));
   |                                                                                ^^^^ expected enum `std::option::Option`, found struct `instance_io_user::InstanceIoUser`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut instance_io_user::InstanceIoUser`

error[E0609]: no field `stream` on type `&mut instance_io_user::InstanceIoUser`
  --> src/instance_io_user.rs:47:34
   |
47 |         self._raw_strings = self.stream.read_bytes_full()?;
   |                                  ^^^^^^

error[E0609]: no field `stream` on type `&mut instance_io_user::InstanceIoUser`
  --> src/instance_io_user.rs:49:70
   |
49 |         self.strings = Box::new(InstanceIoUser__StringsObj::new(self.stream, self, _root)?);
   |                                                                      ^^^^^^

error[E0308]: mismatched types
  --> src/js_signed_right_shift.rs:55:31
   |
55 |         self.shouldBeA00000 = (2684354560 >> 8);
   |                               ^^^^^^^^^^^^^^^^^
   |                               |
   |                               expected enum `std::option::Option`, found integral variable
   |                               help: try using a variant of the expected type: `Some(2684354560 >> 8)`
   |
   = note: expected type `std::option::Option<i32>`
              found type `{integer}`

error[E0308]: mismatched types
  --> src/js_signed_right_shift.rs:56:16
   |
56 |         return self.shouldBeA00000;
   |                ^^^^^^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `meta_xref::MetaXref`
  --> src/meta_xref.rs:23:11
   |
23 |         s.stream = stream;
   |           ^^^^^^ unknown field

error[E0308]: mismatched types
  --> src/meta_xref.rs:35:27
   |
35 |           where Self: Sized {
   |  ___________________________^
36 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `multiple_use::MultipleUse`
  --> src/multiple_use.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `t1`, `t2`

error[E0609]: no field `stream` on type `&mut multiple_use::MultipleUse`
  --> src/multiple_use.rs:38:57
   |
38 |         self.t1 = Box::new(MultipleUse__Type1::new(self.stream, self, _root)?);
   |                                                         ^^^^^^

error[E0308]: mismatched types
  --> src/instance_io_user.rs:49:78
   |
49 |         self.strings = Box::new(InstanceIoUser__StringsObj::new(self.stream, self, _root)?);
   |                                                                              ^^^^ expected enum `std::option::Option`, found struct `instance_io_user::InstanceIoUser`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut instance_io_user::InstanceIoUser`

error[E0308]: mismatched types
  --> src/instance_io_user.rs:41:27
   |
41 |           where Self: Sized {
   |  ___________________________^
42 | |         self.qtyEntries = self.stream.read_u4le()?;
43 | |         self.entries = vec!();
44 | |         for i in 0..self.qty_entries {
...  |
49 | |         self.strings = Box::new(InstanceIoUser__StringsObj::new(self.stream, self, _root)?);
50 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `instance_io_user::InstanceIoUser__Entry`
  --> src/instance_io_user.rs:70:11
   |
70 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `nameOfs`, `value`, `name`

error[E0609]: no field `stream` on type `&mut instance_io_user::InstanceIoUser__Entry`
  --> src/instance_io_user.rs:83:29
   |
83 |         self.nameOfs = self.stream.read_u4le()?;
   |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut instance_io_user::InstanceIoUser__Entry`
  --> src/instance_io_user.rs:84:27
   |
84 |         self.value = self.stream.read_u4le()?;
   |                           ^^^^^^

error[E0308]: mismatched types
  --> src/instance_io_user.rs:82:27
   |
82 |           where Self: Sized {
   |  ___________________________^
83 | |         self.nameOfs = self.stream.read_u4le()?;
84 | |         self.value = self.stream.read_u4le()?;
85 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `_root` on type `&mut instance_io_user::InstanceIoUser__Entry`
  --> src/instance_io_user.rs:94:27
   |
94 |         let mut io = self._root.strings._io;
   |                           ^^^^^

error[E0609]: no field `name_ofs` on type `&mut instance_io_user::InstanceIoUser__Entry`
  --> src/instance_io_user.rs:96:22
   |
96 |         io.seek(self.name_ofs);
   |                      ^^^^^^^^

warning: unreachable expression
  --> src/instance_io_user.rs:97:9
   |
97 |         self.name = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> src/instance_io_user.rs:99:16
   |
99 |         return self.name;
   |                ^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0609]: no field `stream` on type `instance_io_user::InstanceIoUser__StringsObj`
   --> src/instance_io_user.rs:115:11
    |
115 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `str`

error[E0308]: mismatched types
  --> src/multiple_use.rs:38:65
   |
38 |         self.t1 = Box::new(MultipleUse__Type1::new(self.stream, self, _root)?);
   |                                                                 ^^^^ expected enum `std::option::Option`, found struct `multiple_use::MultipleUse`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut multiple_use::MultipleUse`

error[E0609]: no field `stream` on type `&mut multiple_use::MultipleUse`
  --> src/multiple_use.rs:39:57
   |
39 |         self.t2 = Box::new(MultipleUse__Type2::new(self.stream, self, _root)?);
   |                                                         ^^^^^^

error[E0308]: mismatched types
   --> src/instance_io_user.rs:128:20
    |
128 |         self.str = [];
    |                    ^^
    |                    |
    |                    expected struct `std::vec::Vec`, found array of 0 elements
    |                    help: try using a conversion method: `[].to_vec()`
    |
    = note: expected type `std::vec::Vec<std::string::String>`
               found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut instance_io_user::InstanceIoUser__StringsObj`
   --> src/instance_io_user.rs:129:21
    |
129 |         while !self.stream.isEof() {
    |                     ^^^^^^

warning: unreachable expression
   --> src/instance_io_user.rs:130:13
    |
130 |             self.str.push(panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8"));
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> src/instance_io_user.rs:129:9
    |
126 |                                -> Result<()>
    |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
129 | /         while !self.stream.isEof() {
130 | |             self.str.push(panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8"));
131 | |         }
    | |_________^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `instance_std_array::InstanceStdArray`
  --> src/instance_std_array.rs:28:11
   |
28 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `ofs`, `entrySize`, `qtyEntries`, `entries`

error[E0308]: mismatched types
  --> src/multiple_use.rs:39:65
   |
39 |         self.t2 = Box::new(MultipleUse__Type2::new(self.stream, self, _root)?);
   |                                                                 ^^^^ expected enum `std::option::Option`, found struct `multiple_use::MultipleUse`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut multiple_use::MultipleUse`

error[E0308]: mismatched types
  --> src/multiple_use.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.t1 = Box::new(MultipleUse__Type1::new(self.stream, self, _root)?);
39 | |         self.t2 = Box::new(MultipleUse__Type2::new(self.stream, self, _root)?);
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `multiple_use::MultipleUse__Multi`
  --> src/multiple_use.rs:58:11
   |
58 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut instance_std_array::InstanceStdArray`
  --> src/instance_std_array.rs:41:25
   |
41 |         self.ofs = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut instance_std_array::InstanceStdArray`
  --> src/instance_std_array.rs:42:31
   |
42 |         self.entrySize = self.stream.read_u4le()?;
   |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut instance_std_array::InstanceStdArray`
  --> src/instance_std_array.rs:43:32
   |
43 |         self.qtyEntries = self.stream.read_u4le()?;
   |                                ^^^^^^

error[E0609]: no field `stream` on type `&mut multiple_use::MultipleUse__Multi`
  --> src/multiple_use.rs:71:27
   |
71 |         self.value = self.stream.read_s4le()?;
   |                           ^^^^^^

error[E0308]: mismatched types
  --> src/instance_std_array.rs:40:27
   |
40 |           where Self: Sized {
   |  ___________________________^
41 | |         self.ofs = self.stream.read_u4le()?;
42 | |         self.entrySize = self.stream.read_u4le()?;
43 | |         self.qtyEntries = self.stream.read_u4le()?;
44 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/multiple_use.rs:70:27
   |
70 |           where Self: Sized {
   |  ___________________________^
71 | |         self.value = self.stream.read_s4le()?;
72 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut instance_std_array::InstanceStdArray`
  --> src/instance_std_array.rs:53:25
   |
53 |         let _pos = self.stream.pos();
   |                         ^^^^^^

error[E0609]: no field `stream` on type `multiple_use::MultipleUse__Type1`
  --> src/multiple_use.rs:90:11
   |
90 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `firstUse`

error[E0609]: no field `stream` on type `&mut instance_std_array::InstanceStdArray`
  --> src/instance_std_array.rs:54:14
   |
54 |         self.stream.seek(self.ofs);
   |              ^^^^^^

error[E0609]: no field `stream` on type `&mut multiple_use::MultipleUse__Type1`
   --> src/multiple_use.rs:103:63
    |
103 |         self.firstUse = Box::new(MultipleUse__Multi::new(self.stream, self, _root)?);
    |                                                               ^^^^^^

error[E0308]: mismatched types
   --> src/multiple_use.rs:103:71
    |
103 |         self.firstUse = Box::new(MultipleUse__Multi::new(self.stream, self, _root)?);
    |                                                                       ^^^^ expected enum `std::option::Option`, found struct `multiple_use::MultipleUse__Type1`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut multiple_use::MultipleUse__Type1`

error[E0308]: mismatched types
   --> src/multiple_use.rs:102:27
    |
102 |           where Self: Sized {
    |  ___________________________^
103 | |         self.firstUse = Box::new(MultipleUse__Multi::new(self.stream, self, _root)?);
104 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `multiple_use::MultipleUse__Type2`
   --> src/multiple_use.rs:122:11
    |
122 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `secondUse`

error[E0308]: mismatched types
   --> src/multiple_use.rs:134:27
    |
134 |           where Self: Sized {
    |  ___________________________^
135 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `&mut multiple_use::MultipleUse__Type2`
   --> src/multiple_use.rs:144:25
    |
144 |         let _pos = self.stream.pos();
    |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut multiple_use::MultipleUse__Type2`
   --> src/multiple_use.rs:145:14
    |
145 |         self.stream.seek(0);
    |              ^^^^^^

error[E0609]: no field `stream` on type `&mut multiple_use::MultipleUse__Type2`
   --> src/multiple_use.rs:146:64
    |
146 |         self.secondUse = Box::new(MultipleUse__Multi::new(self.stream, self, _root)?);
    |                                                                ^^^^^^

error[E0308]: mismatched types
  --> src/instance_std_array.rs:55:24
   |
55 |         self.entries = vec!();
   |                        ^^^^^^
   |                        |
   |                        expected enum `std::option::Option`, found struct `std::vec::Vec`
   |                        help: try using a variant of the expected type: `Some(<[_]>::into_vec(box []))`
   |
   = note: expected type `std::option::Option<std::vec::Vec<std::vec::Vec<u8>>>`
              found type `std::vec::Vec<_>`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error[E0609]: no field `qty_entries` on type `&mut instance_std_array::InstanceStdArray`
  --> src/instance_std_array.rs:56:26
   |
56 |         for i in 0..self.qty_entries {
   |                          ^^^^^^^^^^^

error[E0599]: no method named `push` found for type `std::option::Option<std::vec::Vec<std::vec::Vec<u8>>>` in the current scope
  --> src/instance_std_array.rs:57:26
   |
57 |             self.entries.push(self.stream.read_bytes(self.entry_size)?);
   |                          ^^^^

error[E0609]: no field `stream` on type `&mut instance_std_array::InstanceStdArray`
  --> src/instance_std_array.rs:57:36
   |
57 |             self.entries.push(self.stream.read_bytes(self.entry_size)?);
   |                                    ^^^^^^

error[E0609]: no field `entry_size` on type `&mut instance_std_array::InstanceStdArray`
  --> src/instance_std_array.rs:57:59
   |
57 |             self.entries.push(self.stream.read_bytes(self.entry_size)?);
   |                                                           ^^^^^^^^^^

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/instance_std_array.rs:57:31
   |
57 |             self.entries.push(self.stream.read_bytes(self.entry_size)?);
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::vec::Vec<std::vec::Vec<u8>>`
   |
   = help: the trait `std::ops::Try` is not implemented for `std::vec::Vec<std::vec::Vec<u8>>`
   = note: required by `std::ops::Try::from_error`

error[E0609]: no field `stream` on type `&mut instance_std_array::InstanceStdArray`
  --> src/instance_std_array.rs:59:14
   |
59 |         self.stream.seek(_pos);
   |              ^^^^^^

error[E0308]: mismatched types
  --> src/instance_std_array.rs:60:16
   |
60 |         return self.entries;
   |                ^^^^^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
   |
   = note: expected type `std::vec::Vec<_>`
              found type `std::option::Option<std::vec::Vec<_>>`

error[E0609]: no field `stream` on type `instance_std::InstanceStd`
  --> src/instance_std.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `header`

error[E0308]: mismatched types
  --> src/instance_std.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut instance_std::InstanceStd`
  --> src/instance_std.rs:46:25
   |
46 |         let _pos = self.stream.pos();
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut instance_std::InstanceStd`
  --> src/instance_std.rs:47:14
   |
47 |         self.stream.seek(2);
   |              ^^^^^^

error[E0609]: no field `stream` on type `&mut instance_std::InstanceStd`
  --> src/instance_std.rs:48:52
   |
48 |         self.header = String::from_utf8_lossy(self.stream.read_bytes(5)?);
   |                                                    ^^^^^^

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/instance_std.rs:48:47
   |
48 |         self.header = String::from_utf8_lossy(self.stream.read_bytes(5)?);
   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::string::String`
   |
   = help: the trait `std::ops::Try` is not implemented for `std::string::String`
   = note: required by `std::ops::Try::from_error`

error[E0308]: mismatched types
   --> src/multiple_use.rs:146:72
    |
146 |         self.secondUse = Box::new(MultipleUse__Multi::new(self.stream, self, _root)?);
    |                                                                        ^^^^ expected enum `std::option::Option`, found struct `multiple_use::MultipleUse__Type2`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut multiple_use::MultipleUse__Type2`

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
   --> src/multiple_use.rs:146:35
    |
146 |         self.secondUse = Box::new(MultipleUse__Multi::new(self.stream, self, _root)?);
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::boxed::Box<multiple_use::MultipleUse__Multi>`
    |
    = help: the trait `std::ops::Try` is not implemented for `std::boxed::Box<multiple_use::MultipleUse__Multi>`
    = note: required by `std::ops::Try::from_error`

error[E0308]: mismatched types
  --> src/instance_std.rs:48:23
   |
48 |         self.header = String::from_utf8_lossy(self.stream.read_bytes(5)?);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found enum `std::borrow::Cow`
   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `std::borrow::Cow<'_, str>`

error[E0609]: no field `stream` on type `&mut instance_std::InstanceStd`
  --> src/instance_std.rs:49:14
   |
49 |         self.stream.seek(_pos);
   |              ^^^^^^

error[E0308]: mismatched types
  --> src/instance_std.rs:50:16
   |
50 |         return self.header;
   |                ^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0609]: no field `stream` on type `instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:29:11
   |
29 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `ofs`, `entrySize`, `qtyEntries`, `userEntries`

error[E0609]: no field `stream` on type `&mut instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:42:25
   |
42 |         self.ofs = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:43:31
   |
43 |         self.entrySize = self.stream.read_u4le()?;
   |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:44:32
   |
44 |         self.qtyEntries = self.stream.read_u4le()?;
   |                                ^^^^^^

error[E0308]: mismatched types
  --> src/instance_user_array.rs:41:27
   |
41 |           where Self: Sized {
   |  ___________________________^
42 | |         self.ofs = self.stream.read_u4le()?;
43 | |         self.entrySize = self.stream.read_u4le()?;
44 | |         self.qtyEntries = self.stream.read_u4le()?;
45 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:55:29
   |
55 |             let _pos = self.stream.pos();
   |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:56:18
   |
56 |             self.stream.seek(self.ofs);
   |                  ^^^^^^

error[E0609]: no field `_raw_userEntries` on type `&mut instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:57:18
   |
57 |             self._raw_userEntries = vec!();
   |                  ^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> src/multiple_use.rs:146:26
    |
146 |         self.secondUse = Box::new(MultipleUse__Multi::new(self.stream, self, _root)?);
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
    |
    = note: expected type `std::option::Option<std::boxed::Box<_>>`
               found type `std::boxed::Box<_>`
help: try using a variant of the expected type
    |
146 |         self.secondUse = Some(<Box>::new(match ::std::ops::Try::into_result(<MultipleUse__Multi>::new(self.stream,
147 |                                                                         self,
148 |                                                                         _root))
149 |                {
150 |                ::std::result::Result::Err(err) =>
151 |                    #[allow(unreachable_code)]
  ...

error[E0609]: no field `stream` on type `&mut multiple_use::MultipleUse__Type2`
   --> src/multiple_use.rs:147:14
    |
147 |         self.stream.seek(_pos);
    |              ^^^^^^

error[E0308]: mismatched types
   --> src/multiple_use.rs:148:16
    |
148 |         return self.secondUse;
    |                ^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
    |
    = note: expected type `std::boxed::Box<_>`
               found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `nav_parent2::NavParent2`
  --> src/nav_parent2.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `ofsTags`, `numTags`, `tags`

error[E0609]: no field `stream` on type `&mut nav_parent2::NavParent2`
  --> src/nav_parent2.rs:40:29
   |
40 |         self.ofsTags = self.stream.read_u4le()?;
   |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent2::NavParent2`
  --> src/nav_parent2.rs:41:29
   |
41 |         self.numTags = self.stream.read_u4le()?;
   |                             ^^^^^^

error[E0609]: no field `num_tags` on type `&mut nav_parent2::NavParent2`
  --> src/nav_parent2.rs:43:26
   |
43 |         for i in 0..self.num_tags {
   |                          ^^^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent2::NavParent2`
  --> src/nav_parent2.rs:44:63
   |
44 |             self.tags.push(Box::new(NavParent2__Tag::new(self.stream, self, _root)?));
   |                                                               ^^^^^^

error[E0308]: mismatched types
  --> src/instance_user_array.rs:58:32
   |
58 |             self.userEntries = vec!();
   |                                ^^^^^^
   |                                |
   |                                expected enum `std::option::Option`, found struct `std::vec::Vec`
   |                                help: try using a variant of the expected type: `Some(<[_]>::into_vec(box []))`
   |
   = note: expected type `std::option::Option<std::vec::Vec<std::boxed::Box<instance_user_array::InstanceUserArray__Entry>>>`
              found type `std::vec::Vec<_>`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error[E0609]: no field `qty_entries` on type `&mut instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:59:30
   |
59 |             for i in 0..self.qty_entries {
   |                              ^^^^^^^^^^^

error[E0609]: no field `_raw_userEntries` on type `&mut instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:60:22
   |
60 |                 self._raw_userEntries.push(self.stream.read_bytes(self.entry_size)?);
   |                      ^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:60:49
   |
60 |                 self._raw_userEntries.push(self.stream.read_bytes(self.entry_size)?);
   |                                                 ^^^^^^

error[E0609]: no field `entry_size` on type `&mut instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:60:72
   |
60 |                 self._raw_userEntries.push(self.stream.read_bytes(self.entry_size)?);
   |                                                                        ^^^^^^^^^^

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/instance_user_array.rs:60:44
   |
60 |                 self._raw_userEntries.push(self.stream.read_bytes(self.entry_size)?);
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::vec::Vec<std::boxed::Box<instance_user_array::InstanceUserArray__Entry>>`
   |
   = help: the trait `std::ops::Try` is not implemented for `std::vec::Vec<std::boxed::Box<instance_user_array::InstanceUserArray__Entry>>`
   = note: required by `std::ops::Try::from_error`

error[E0609]: no field `_raw_userEntries` on type `&mut instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:61:47
   |
61 |                 let mut io = Cursor::new(self._raw_userEntries.last());
   |                                               ^^^^^^^^^^^^^^^^

error[E0599]: no method named `push` found for type `std::option::Option<std::vec::Vec<std::boxed::Box<instance_user_array::InstanceUserArray__Entry>>>` in the current scope
  --> src/instance_user_array.rs:62:34
   |
62 |                 self.userEntries.push(Box::new(InstanceUserArray__Entry::new(self.stream, self, _root)?));
   |                                  ^^^^

error[E0609]: no field `stream` on type `&mut instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:62:83
   |
62 |                 self.userEntries.push(Box::new(InstanceUserArray__Entry::new(self.stream, self, _root)?));
   |                                                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent2.rs:44:71
   |
44 |             self.tags.push(Box::new(NavParent2__Tag::new(self.stream, self, _root)?));
   |                                                                       ^^^^ expected enum `std::option::Option`, found struct `nav_parent2::NavParent2`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent2::NavParent2`

error[E0308]: mismatched types
  --> src/nav_parent2.rs:43:9
   |
38 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
43 | /         for i in 0..self.num_tags {
44 | |             self.tags.push(Box::new(NavParent2__Tag::new(self.stream, self, _root)?));
45 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nav_parent2::NavParent2__Tag`
  --> src/nav_parent2.rs:67:11
   |
67 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `name`, `ofs`, `numItems`, `tagContent`

error[E0609]: no field `stream` on type `&mut nav_parent2::NavParent2__Tag`
  --> src/nav_parent2.rs:80:50
   |
80 |         self.name = String::from_utf8_lossy(self.stream.read_bytes(4)?);
   |                                                  ^^^^^^

error[E0308]: mismatched types
  --> src/instance_user_array.rs:62:91
   |
62 |                 self.userEntries.push(Box::new(InstanceUserArray__Entry::new(self.stream, self, _root)?));
   |                                                                                           ^^^^ expected enum `std::option::Option`, found struct `instance_user_array::InstanceUserArray`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut instance_user_array::InstanceUserArray`

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/instance_user_array.rs:62:48
   |
62 |                 self.userEntries.push(Box::new(InstanceUserArray__Entry::new(self.stream, self, _root)?));
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::vec::Vec<std::boxed::Box<instance_user_array::InstanceUserArray__Entry>>`
   |
   = help: the trait `std::ops::Try` is not implemented for `std::vec::Vec<std::boxed::Box<instance_user_array::InstanceUserArray__Entry>>`
   = note: required by `std::ops::Try::from_error`

error[E0609]: no field `stream` on type `&mut instance_user_array::InstanceUserArray`
  --> src/instance_user_array.rs:64:18
   |
64 |             self.stream.seek(_pos);
   |                  ^^^^^^

error[E0308]: mismatched types
  --> src/instance_user_array.rs:66:16
   |
66 |         return self.userEntries;
   |                ^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
   |
   = note: expected type `std::vec::Vec<_>`
              found type `std::option::Option<std::vec::Vec<_>>`

error[E0609]: no field `stream` on type `instance_user_array::InstanceUserArray__Entry`
  --> src/instance_user_array.rs:83:11
   |
83 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `word1`, `word2`

error[E0609]: no field `stream` on type `&mut instance_user_array::InstanceUserArray__Entry`
  --> src/instance_user_array.rs:96:27
   |
96 |         self.word1 = self.stream.read_u2le()?;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut instance_user_array::InstanceUserArray__Entry`
  --> src/instance_user_array.rs:97:27
   |
97 |         self.word2 = self.stream.read_u2le()?;
   |                           ^^^^^^

error[E0308]: mismatched types
  --> src/instance_user_array.rs:95:27
   |
95 |           where Self: Sized {
   |  ___________________________^
96 | |         self.word1 = self.stream.read_u2le()?;
97 | |         self.word2 = self.stream.read_u2le()?;
98 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `integers::Integers`
  --> src/integers.rs:50:11
   |
50 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `magic1`, `uint8`, `sint8`, `magicUint`, `uint16` ... and 22 others

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:63:28
   |
63 |         self.magic1 = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x31]));
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:64:27
   |
64 |         self.uint8 = self.stream.read_u1()?;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:65:27
   |
65 |         self.sint8 = self.stream.read_s1()?;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:66:31
   |
66 |         self.magicUint = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x55, 0x2d, 0x44, 0x45, 0x46]));
   |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:67:28
   |
67 |         self.uint16 = self.stream.read_u2le()?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:68:28
   |
68 |         self.uint32 = self.stream.read_u4le()?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:69:28
   |
69 |         self.uint64 = self.stream.read_u8le()?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:70:31
   |
70 |         self.magicSint = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x53, 0x2d, 0x44, 0x45, 0x46]));
   |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:71:28
   |
71 |         self.sint16 = self.stream.read_s2le()?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:72:28
   |
72 |         self.sint32 = self.stream.read_s4le()?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:73:28
   |
73 |         self.sint64 = self.stream.read_s8le()?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:74:33
   |
74 |         self.magicUintLe = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x55, 0x2d, 0x4c, 0x45]));
   |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:75:30
   |
75 |         self.uint16le = self.stream.read_u2le()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:76:30
   |
76 |         self.uint32le = self.stream.read_u4le()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:77:30
   |
77 |         self.uint64le = self.stream.read_u8le()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:78:33
   |
78 |         self.magicSintLe = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x53, 0x2d, 0x4c, 0x45]));
   |                                 ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent2.rs:80:21
   |
80 |         self.name = String::from_utf8_lossy(self.stream.read_bytes(4)?);
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                     |
   |                     expected struct `std::string::String`, found enum `std::borrow::Cow`
   |                     help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes(4)?).to_string()`
   |
   = note: expected type `std::string::String`
              found type `std::borrow::Cow<'_, str>`

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:79:30
   |
79 |         self.sint16le = self.stream.read_s2le()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent2::NavParent2__Tag`
  --> src/nav_parent2.rs:81:25
   |
81 |         self.ofs = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:80:30
   |
80 |         self.sint32le = self.stream.read_s4le()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent2::NavParent2__Tag`
  --> src/nav_parent2.rs:82:30
   |
82 |         self.numItems = self.stream.read_u4le()?;
   |                              ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent2.rs:79:27
   |
79 |           where Self: Sized {
   |  ___________________________^
80 | |         self.name = String::from_utf8_lossy(self.stream.read_bytes(4)?);
81 | |         self.ofs = self.stream.read_u4le()?;
82 | |         self.numItems = self.stream.read_u4le()?;
83 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:81:30
   |
81 |         self.sint64le = self.stream.read_s8le()?;
   |                              ^^^^^^

error[E0609]: no field `_root` on type `&mut nav_parent2::NavParent2__Tag`
  --> src/nav_parent2.rs:92:27
   |
92 |         let mut io = self._root._io;
   |                           ^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:82:33
   |
82 |         self.magicUintBe = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x55, 0x2d, 0x42, 0x45]));
   |                                 ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent2.rs:96:13
   |
96 |             "RAHC" => {
   |             ^^^^^^ expected struct `std::string::String`, found reference
   |
   = note: expected type `std::string::String`
              found type `&'static str`

error[E0609]: no field `stream` on type `&mut nav_parent2::NavParent2__Tag`
  --> src/nav_parent2.rs:97:79
   |
97 |                 self.tagContent = Box::new(NavParent2__Tag__TagChar::new(self.stream, self, _root)?);
   |                                                                               ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:83:30
   |
83 |         self.uint16be = self.stream.read_u2be()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:84:30
   |
84 |         self.uint32be = self.stream.read_u4be()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:85:30
   |
85 |         self.uint64be = self.stream.read_u8be()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:86:33
   |
86 |         self.magicSintBe = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x53, 0x2d, 0x42, 0x45]));
   |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:87:30
   |
87 |         self.sint16be = self.stream.read_s2be()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:88:30
   |
88 |         self.sint32be = self.stream.read_s4be()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut integers::Integers`
  --> src/integers.rs:89:30
   |
89 |         self.sint64be = self.stream.read_s8be()?;
   |                              ^^^^^^

error[E0308]: mismatched types
  --> src/integers.rs:62:27
   |
62 |           where Self: Sized {
   |  ___________________________^
63 | |         self.magic1 = self.stream.ensureFixedContents(vec!([0x50, 0x41, 0x43, 0x4b, 0x2d, 0x31]));
64 | |         self.uint8 = self.stream.read_u1()?;
65 | |         self.sint8 = self.stream.read_s1()?;
...  |
89 | |         self.sint64be = self.stream.read_s8be()?;
90 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `js_signed_right_shift::JsSignedRightShift`
  --> src/js_signed_right_shift.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `shouldBe40000000`, `shouldBeA00000`

error[E0308]: mismatched types
  --> src/js_signed_right_shift.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/nav_parent2.rs:97:87
   |
97 |                 self.tagContent = Box::new(NavParent2__Tag__TagChar::new(self.stream, self, _root)?);
   |                                                                                       ^^^^ expected enum `std::option::Option`, found struct `nav_parent2::NavParent2__Tag`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent2::NavParent2__Tag`

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/nav_parent2.rs:97:44
   |
97 |                 self.tagContent = Box::new(NavParent2__Tag__TagChar::new(self.stream, self, _root)?);
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::boxed::Box<nav_parent2::NavParent2__Tag__TagChar>`
   |
   = help: the trait `std::ops::Try` is not implemented for `std::boxed::Box<nav_parent2::NavParent2__Tag__TagChar>`
   = note: required by `std::ops::Try::from_error`

error[E0308]: mismatched types
  --> src/js_signed_right_shift.rs:47:33
   |
47 |         self.shouldBe40000000 = (2147483648 >> 1);
   |                                 ^^^^^^^^^^^^^^^^^
   |                                 |
   |                                 expected enum `std::option::Option`, found integral variable
   |                                 help: try using a variant of the expected type: `Some(2147483648 >> 1)`
   |
   = note: expected type `std::option::Option<i32>`
              found type `{integer}`

error[E0308]: mismatched types
  --> src/js_signed_right_shift.rs:48:16
   |
48 |         return self.shouldBe40000000;
   |                ^^^^^^^^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0308]: mismatched types
  --> src/nav_parent2.rs:97:35
   |
97 |                 self.tagContent = Box::new(NavParent2__Tag__TagChar::new(self.stream, self, _root)?);
   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<_>>`
              found type `std::boxed::Box<_>`
help: try using a variant of the expected type
   |
97 |                 self.tagContent = Some(<Box>::new(match ::std::ops::Try::into_result(<NavParent2__Tag__TagChar>::new(self.stream,
98 |                                                                               self,
99 |                                                                               _root))
100|                {
101|                ::std::result::Result::Err(err) =>
102|                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
   --> src/nav_parent2.rs:101:16
    |
101 |         return self.tagContent;
    |                ^^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
    |
    = note: expected type `std::boxed::Box<_>`
               found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `nav_parent2::NavParent2__Tag__TagChar`
   --> src/nav_parent2.rs:117:11
    |
117 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `content`

error[E0609]: no field `stream` on type `&mut nav_parent2::NavParent2__Tag__TagChar`
   --> src/nav_parent2.rs:130:53
    |
130 |         self.content = String::from_utf8_lossy(self.stream.read_bytes(self._parent.num_items)?);
    |                                                     ^^^^^^

error[E0609]: no field `_parent` on type `&mut nav_parent2::NavParent2__Tag__TagChar`
   --> src/nav_parent2.rs:130:76
    |
130 |         self.content = String::from_utf8_lossy(self.stream.read_bytes(self._parent.num_items)?);
    |                                                                            ^^^^^^^

error[E0308]: mismatched types
  --> src/js_signed_right_shift.rs:55:31
   |
55 |         self.shouldBeA00000 = (2684354560 >> 8);
   |                               ^^^^^^^^^^^^^^^^^
   |                               |
   |                               expected enum `std::option::Option`, found integral variable
   |                               help: try using a variant of the expected type: `Some(2684354560 >> 8)`
   |
   = note: expected type `std::option::Option<i32>`
              found type `{integer}`

error[E0308]: mismatched types
  --> src/js_signed_right_shift.rs:56:16
   |
56 |         return self.shouldBeA00000;
   |                ^^^^^^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `meta_xref::MetaXref`
  --> src/meta_xref.rs:23:11
   |
23 |         s.stream = stream;
   |           ^^^^^^ unknown field

error[E0308]: mismatched types
  --> src/meta_xref.rs:35:27
   |
35 |           where Self: Sized {
   |  ___________________________^
36 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `multiple_use::MultipleUse`
  --> src/multiple_use.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `t1`, `t2`

error[E0609]: no field `stream` on type `&mut multiple_use::MultipleUse`
  --> src/multiple_use.rs:38:57
   |
38 |         self.t1 = Box::new(MultipleUse__Type1::new(self.stream, self, _root)?);
   |                                                         ^^^^^^

error[E0308]: mismatched types
   --> src/nav_parent2.rs:130:24
    |
130 |         self.content = String::from_utf8_lossy(self.stream.read_bytes(self._parent.num_items)?);
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                        |
    |                        expected struct `std::string::String`, found enum `std::borrow::Cow`
    |                        help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes(self._parent.num_items)?).to_string()`
    |
    = note: expected type `std::string::String`
               found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
   --> src/nav_parent2.rs:129:27
    |
129 |           where Self: Sized {
    |  ___________________________^
130 | |         self.content = String::from_utf8_lossy(self.stream.read_bytes(self._parent.num_items)?);
131 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nav_parent3::NavParent3`
  --> src/nav_parent3.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `ofsTags`, `numTags`, `tags`

error[E0609]: no field `stream` on type `&mut nav_parent3::NavParent3`
  --> src/nav_parent3.rs:40:29
   |
40 |         self.ofsTags = self.stream.read_u4le()?;
   |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent3::NavParent3`
  --> src/nav_parent3.rs:41:29
   |
41 |         self.numTags = self.stream.read_u4le()?;
   |                             ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent3.rs:39:27
   |
39 |           where Self: Sized {
   |  ___________________________^
40 | |         self.ofsTags = self.stream.read_u4le()?;
41 | |         self.numTags = self.stream.read_u4le()?;
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut nav_parent3::NavParent3`
  --> src/nav_parent3.rs:51:25
   |
51 |         let _pos = self.stream.pos();
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent3::NavParent3`
  --> src/nav_parent3.rs:52:14
   |
52 |         self.stream.seek(self.ofs_tags);
   |              ^^^^^^

error[E0609]: no field `ofs_tags` on type `&mut nav_parent3::NavParent3`
  --> src/nav_parent3.rs:52:31
   |
52 |         self.stream.seek(self.ofs_tags);
   |                               ^^^^^^^^

error[E0308]: mismatched types
  --> src/multiple_use.rs:38:65
   |
38 |         self.t1 = Box::new(MultipleUse__Type1::new(self.stream, self, _root)?);
   |                                                                 ^^^^ expected enum `std::option::Option`, found struct `multiple_use::MultipleUse`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut multiple_use::MultipleUse`

error[E0609]: no field `stream` on type `&mut multiple_use::MultipleUse`
  --> src/multiple_use.rs:39:57
   |
39 |         self.t2 = Box::new(MultipleUse__Type2::new(self.stream, self, _root)?);
   |                                                         ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent3.rs:53:21
   |
53 |         self.tags = vec!();
   |                     ^^^^^^
   |                     |
   |                     expected enum `std::option::Option`, found struct `std::vec::Vec`
   |                     help: try using a variant of the expected type: `Some(<[_]>::into_vec(box []))`
   |
   = note: expected type `std::option::Option<std::vec::Vec<std::boxed::Box<nav_parent3::NavParent3__Tag>>>`
              found type `std::vec::Vec<_>`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error[E0609]: no field `num_tags` on type `&mut nav_parent3::NavParent3`
  --> src/nav_parent3.rs:54:26
   |
54 |         for i in 0..self.num_tags {
   |                          ^^^^^^^^

error[E0599]: no method named `push` found for type `std::option::Option<std::vec::Vec<std::boxed::Box<nav_parent3::NavParent3__Tag>>>` in the current scope
  --> src/nav_parent3.rs:55:23
   |
55 |             self.tags.push(Box::new(NavParent3__Tag::new(self.stream, self, _root)?));
   |                       ^^^^

error[E0609]: no field `stream` on type `&mut nav_parent3::NavParent3`
  --> src/nav_parent3.rs:55:63
   |
55 |             self.tags.push(Box::new(NavParent3__Tag::new(self.stream, self, _root)?));
   |                                                               ^^^^^^

error[E0308]: mismatched types
  --> src/multiple_use.rs:39:65
   |
39 |         self.t2 = Box::new(MultipleUse__Type2::new(self.stream, self, _root)?);
   |                                                                 ^^^^ expected enum `std::option::Option`, found struct `multiple_use::MultipleUse`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut multiple_use::MultipleUse`

error[E0308]: mismatched types
  --> src/multiple_use.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.t1 = Box::new(MultipleUse__Type1::new(self.stream, self, _root)?);
39 | |         self.t2 = Box::new(MultipleUse__Type2::new(self.stream, self, _root)?);
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `multiple_use::MultipleUse__Multi`
  --> src/multiple_use.rs:58:11
   |
58 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut multiple_use::MultipleUse__Multi`
  --> src/multiple_use.rs:71:27
   |
71 |         self.value = self.stream.read_s4le()?;
   |                           ^^^^^^

error[E0308]: mismatched types
  --> src/multiple_use.rs:70:27
   |
70 |           where Self: Sized {
   |  ___________________________^
71 | |         self.value = self.stream.read_s4le()?;
72 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `multiple_use::MultipleUse__Type1`
  --> src/multiple_use.rs:90:11
   |
90 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `firstUse`

error[E0609]: no field `stream` on type `&mut multiple_use::MultipleUse__Type1`
   --> src/multiple_use.rs:103:63
    |
103 |         self.firstUse = Box::new(MultipleUse__Multi::new(self.stream, self, _root)?);
    |                                                               ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent3.rs:55:71
   |
55 |             self.tags.push(Box::new(NavParent3__Tag::new(self.stream, self, _root)?));
   |                                                                       ^^^^ expected enum `std::option::Option`, found struct `nav_parent3::NavParent3`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent3::NavParent3`

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/nav_parent3.rs:55:37
   |
55 |             self.tags.push(Box::new(NavParent3__Tag::new(self.stream, self, _root)?));
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::vec::Vec<std::boxed::Box<nav_parent3::NavParent3__Tag>>`
   |
   = help: the trait `std::ops::Try` is not implemented for `std::vec::Vec<std::boxed::Box<nav_parent3::NavParent3__Tag>>`
   = note: required by `std::ops::Try::from_error`

error[E0609]: no field `stream` on type `&mut nav_parent3::NavParent3`
  --> src/nav_parent3.rs:57:14
   |
57 |         self.stream.seek(_pos);
   |              ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent3.rs:58:16
   |
58 |         return self.tags;
   |                ^^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
   |
   = note: expected type `std::vec::Vec<_>`
              found type `std::option::Option<std::vec::Vec<_>>`

error[E0609]: no field `stream` on type `nav_parent3::NavParent3__Tag`
  --> src/nav_parent3.rs:77:11
   |
77 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `name`, `ofs`, `numItems`, `tagContent`

error[E0609]: no field `stream` on type `&mut nav_parent3::NavParent3__Tag`
  --> src/nav_parent3.rs:90:50
   |
90 |         self.name = String::from_utf8_lossy(self.stream.read_bytes(4)?);
   |                                                  ^^^^^^

error[E0308]: mismatched types
   --> src/multiple_use.rs:103:71
    |
103 |         self.firstUse = Box::new(MultipleUse__Multi::new(self.stream, self, _root)?);
    |                                                                       ^^^^ expected enum `std::option::Option`, found struct `multiple_use::MultipleUse__Type1`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut multiple_use::MultipleUse__Type1`

error[E0308]: mismatched types
   --> src/multiple_use.rs:102:27
    |
102 |           where Self: Sized {
    |  ___________________________^
103 | |         self.firstUse = Box::new(MultipleUse__Multi::new(self.stream, self, _root)?);
104 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `multiple_use::MultipleUse__Type2`
   --> src/multiple_use.rs:122:11
    |
122 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `secondUse`

error[E0308]: mismatched types
   --> src/multiple_use.rs:134:27
    |
134 |           where Self: Sized {
    |  ___________________________^
135 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `&mut multiple_use::MultipleUse__Type2`
   --> src/multiple_use.rs:144:25
    |
144 |         let _pos = self.stream.pos();
    |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut multiple_use::MultipleUse__Type2`
   --> src/multiple_use.rs:145:14
    |
145 |         self.stream.seek(0);
    |              ^^^^^^

error[E0609]: no field `stream` on type `&mut multiple_use::MultipleUse__Type2`
   --> src/multiple_use.rs:146:64
    |
146 |         self.secondUse = Box::new(MultipleUse__Multi::new(self.stream, self, _root)?);
    |                                                                ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent3.rs:90:21
   |
90 |         self.name = String::from_utf8_lossy(self.stream.read_bytes(4)?);
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                     |
   |                     expected struct `std::string::String`, found enum `std::borrow::Cow`
   |                     help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes(4)?).to_string()`
   |
   = note: expected type `std::string::String`
              found type `std::borrow::Cow<'_, str>`

error[E0609]: no field `stream` on type `&mut nav_parent3::NavParent3__Tag`
  --> src/nav_parent3.rs:91:25
   |
91 |         self.ofs = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent3::NavParent3__Tag`
  --> src/nav_parent3.rs:92:30
   |
92 |         self.numItems = self.stream.read_u4le()?;
   |                              ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent3.rs:89:27
   |
89 |           where Self: Sized {
   |  ___________________________^
90 | |         self.name = String::from_utf8_lossy(self.stream.read_bytes(4)?);
91 | |         self.ofs = self.stream.read_u4le()?;
92 | |         self.numItems = self.stream.read_u4le()?;
93 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `_root` on type `&mut nav_parent3::NavParent3__Tag`
   --> src/nav_parent3.rs:102:27
    |
102 |         let mut io = self._root._io;
    |                           ^^^^^

error[E0308]: mismatched types
   --> src/nav_parent3.rs:106:13
    |
106 |             "RAHC" => {
    |             ^^^^^^ expected struct `std::string::String`, found reference
    |
    = note: expected type `std::string::String`
               found type `&'static str`

error[E0308]: mismatched types
   --> src/multiple_use.rs:146:72
    |
146 |         self.secondUse = Box::new(MultipleUse__Multi::new(self.stream, self, _root)?);
    |                                                                        ^^^^ expected enum `std::option::Option`, found struct `multiple_use::MultipleUse__Type2`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut multiple_use::MultipleUse__Type2`

error[E0609]: no field `stream` on type `&mut nav_parent3::NavParent3__Tag`
   --> src/nav_parent3.rs:107:79
    |
107 |                 self.tagContent = Box::new(NavParent3__Tag__TagChar::new(self.stream, self, _root)?);
    |                                                                               ^^^^^^

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
   --> src/multiple_use.rs:146:35
    |
146 |         self.secondUse = Box::new(MultipleUse__Multi::new(self.stream, self, _root)?);
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::boxed::Box<multiple_use::MultipleUse__Multi>`
    |
    = help: the trait `std::ops::Try` is not implemented for `std::boxed::Box<multiple_use::MultipleUse__Multi>`
    = note: required by `std::ops::Try::from_error`

error[E0308]: mismatched types
   --> src/nav_parent3.rs:107:87
    |
107 |                 self.tagContent = Box::new(NavParent3__Tag__TagChar::new(self.stream, self, _root)?);
    |                                                                                       ^^^^ expected enum `std::option::Option`, found struct `nav_parent3::NavParent3__Tag`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut nav_parent3::NavParent3__Tag`

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
   --> src/nav_parent3.rs:107:44
    |
107 |                 self.tagContent = Box::new(NavParent3__Tag__TagChar::new(self.stream, self, _root)?);
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::boxed::Box<nav_parent3::NavParent3__Tag__TagChar>`
    |
    = help: the trait `std::ops::Try` is not implemented for `std::boxed::Box<nav_parent3::NavParent3__Tag__TagChar>`
    = note: required by `std::ops::Try::from_error`

error[E0308]: mismatched types
   --> src/multiple_use.rs:146:26
    |
146 |         self.secondUse = Box::new(MultipleUse__Multi::new(self.stream, self, _root)?);
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
    |
    = note: expected type `std::option::Option<std::boxed::Box<_>>`
               found type `std::boxed::Box<_>`
help: try using a variant of the expected type
    |
146 |         self.secondUse = Some(<Box>::new(match ::std::ops::Try::into_result(<MultipleUse__Multi>::new(self.stream,
147 |                                                                         self,
148 |                                                                         _root))
149 |                {
150 |                ::std::result::Result::Err(err) =>
151 |                    #[allow(unreachable_code)]
  ...

error[E0609]: no field `stream` on type `&mut multiple_use::MultipleUse__Type2`
   --> src/multiple_use.rs:147:14
    |
147 |         self.stream.seek(_pos);
    |              ^^^^^^

error[E0308]: mismatched types
   --> src/multiple_use.rs:148:16
    |
148 |         return self.secondUse;
    |                ^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
    |
    = note: expected type `std::boxed::Box<_>`
               found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `nav_parent2::NavParent2`
  --> src/nav_parent2.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `ofsTags`, `numTags`, `tags`

error[E0609]: no field `stream` on type `&mut nav_parent2::NavParent2`
  --> src/nav_parent2.rs:40:29
   |
40 |         self.ofsTags = self.stream.read_u4le()?;
   |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent2::NavParent2`
  --> src/nav_parent2.rs:41:29
   |
41 |         self.numTags = self.stream.read_u4le()?;
   |                             ^^^^^^

error[E0609]: no field `num_tags` on type `&mut nav_parent2::NavParent2`
  --> src/nav_parent2.rs:43:26
   |
43 |         for i in 0..self.num_tags {
   |                          ^^^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent2::NavParent2`
  --> src/nav_parent2.rs:44:63
   |
44 |             self.tags.push(Box::new(NavParent2__Tag::new(self.stream, self, _root)?));
   |                                                               ^^^^^^

error[E0308]: mismatched types
   --> src/nav_parent3.rs:107:35
    |
107 |                 self.tagContent = Box::new(NavParent3__Tag__TagChar::new(self.stream, self, _root)?);
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
    |
    = note: expected type `std::option::Option<std::boxed::Box<_>>`
               found type `std::boxed::Box<_>`
help: try using a variant of the expected type
    |
107 |                 self.tagContent = Some(<Box>::new(match ::std::ops::Try::into_result(<NavParent3__Tag__TagChar>::new(self.stream,
108 |                                                                               self,
109 |                                                                               _root))
110 |                {
111 |                ::std::result::Result::Err(err) =>
112 |                    #[allow(unreachable_code)]
  ...

error[E0308]: mismatched types
   --> src/nav_parent3.rs:111:16
    |
111 |         return self.tagContent;
    |                ^^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
    |
    = note: expected type `std::boxed::Box<_>`
               found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `nav_parent3::NavParent3__Tag__TagChar`
   --> src/nav_parent3.rs:127:11
    |
127 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `content`

error[E0609]: no field `stream` on type `&mut nav_parent3::NavParent3__Tag__TagChar`
   --> src/nav_parent3.rs:140:53
    |
140 |         self.content = String::from_utf8_lossy(self.stream.read_bytes(self._parent.num_items)?);
    |                                                     ^^^^^^

error[E0609]: no field `_parent` on type `&mut nav_parent3::NavParent3__Tag__TagChar`
   --> src/nav_parent3.rs:140:76
    |
140 |         self.content = String::from_utf8_lossy(self.stream.read_bytes(self._parent.num_items)?);
    |                                                                            ^^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent2.rs:44:71
   |
44 |             self.tags.push(Box::new(NavParent2__Tag::new(self.stream, self, _root)?));
   |                                                                       ^^^^ expected enum `std::option::Option`, found struct `nav_parent2::NavParent2`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent2::NavParent2`

error[E0308]: mismatched types
  --> src/nav_parent2.rs:43:9
   |
38 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
43 | /         for i in 0..self.num_tags {
44 | |             self.tags.push(Box::new(NavParent2__Tag::new(self.stream, self, _root)?));
45 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nav_parent2::NavParent2__Tag`
  --> src/nav_parent2.rs:67:11
   |
67 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `name`, `ofs`, `numItems`, `tagContent`

error[E0609]: no field `stream` on type `&mut nav_parent2::NavParent2__Tag`
  --> src/nav_parent2.rs:80:50
   |
80 |         self.name = String::from_utf8_lossy(self.stream.read_bytes(4)?);
   |                                                  ^^^^^^

error[E0308]: mismatched types
   --> src/nav_parent3.rs:140:24
    |
140 |         self.content = String::from_utf8_lossy(self.stream.read_bytes(self._parent.num_items)?);
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                        |
    |                        expected struct `std::string::String`, found enum `std::borrow::Cow`
    |                        help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes(self._parent.num_items)?).to_string()`
    |
    = note: expected type `std::string::String`
               found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
   --> src/nav_parent3.rs:139:27
    |
139 |           where Self: Sized {
    |  ___________________________^
140 | |         self.content = String::from_utf8_lossy(self.stream.read_bytes(self._parent.num_items)?);
141 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nav_parent_false2::NavParentFalse2`
  --> src/nav_parent_false2.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `parentless`

error[E0609]: no field `stream` on type `&mut nav_parent_false2::NavParentFalse2`
  --> src/nav_parent_false2.rs:37:69
   |
37 |         self.parentless = Box::new(NavParentFalse2__Child::new(self.stream, self, _root)?);
   |                                                                     ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent2.rs:80:21
   |
80 |         self.name = String::from_utf8_lossy(self.stream.read_bytes(4)?);
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                     |
   |                     expected struct `std::string::String`, found enum `std::borrow::Cow`
   |                     help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes(4)?).to_string()`
   |
   = note: expected type `std::string::String`
              found type `std::borrow::Cow<'_, str>`

error[E0609]: no field `stream` on type `&mut nav_parent2::NavParent2__Tag`
  --> src/nav_parent2.rs:81:25
   |
81 |         self.ofs = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent2::NavParent2__Tag`
  --> src/nav_parent2.rs:82:30
   |
82 |         self.numItems = self.stream.read_u4le()?;
   |                              ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent2.rs:79:27
   |
79 |           where Self: Sized {
   |  ___________________________^
80 | |         self.name = String::from_utf8_lossy(self.stream.read_bytes(4)?);
81 | |         self.ofs = self.stream.read_u4le()?;
82 | |         self.numItems = self.stream.read_u4le()?;
83 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `_root` on type `&mut nav_parent2::NavParent2__Tag`
  --> src/nav_parent2.rs:92:27
   |
92 |         let mut io = self._root._io;
   |                           ^^^^^

error[E0308]: mismatched types
  --> src/nav_parent2.rs:96:13
   |
96 |             "RAHC" => {
   |             ^^^^^^ expected struct `std::string::String`, found reference
   |
   = note: expected type `std::string::String`
              found type `&'static str`

error[E0609]: no field `stream` on type `&mut nav_parent2::NavParent2__Tag`
  --> src/nav_parent2.rs:97:79
   |
97 |                 self.tagContent = Box::new(NavParent2__Tag__TagChar::new(self.stream, self, _root)?);
   |                                                                               ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent_false2.rs:37:77
   |
37 |         self.parentless = Box::new(NavParentFalse2__Child::new(self.stream, self, _root)?);
   |                                                                             ^^^^ expected enum `std::option::Option`, found struct `nav_parent_false2::NavParentFalse2`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent_false2::NavParentFalse2`

error[E0308]: mismatched types
  --> src/nav_parent_false2.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |         self.parentless = Box::new(NavParentFalse2__Child::new(self.stream, self, _root)?);
38 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nav_parent_false2::NavParentFalse2__Child`
  --> src/nav_parent_false2.rs:56:11
   |
56 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `foo`

error[E0609]: no field `stream` on type `&mut nav_parent_false2::NavParentFalse2__Child`
  --> src/nav_parent_false2.rs:69:25
   |
69 |         self.foo = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent_false2.rs:68:27
   |
68 |           where Self: Sized {
   |  ___________________________^
69 | |         self.foo = self.stream.read_u1()?;
70 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nav_parent_false::NavParentFalse`
  --> src/nav_parent_false.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `childSize`, `elementA`, `elementB`

error[E0609]: no field `stream` on type `&mut nav_parent_false::NavParentFalse`
  --> src/nav_parent_false.rs:39:31
   |
39 |         self.childSize = self.stream.read_u1()?;
   |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent_false::NavParentFalse`
  --> src/nav_parent_false.rs:40:68
   |
40 |         self.elementA = Box::new(NavParentFalse__ParentA::new(self.stream, self, _root)?);
   |                                                                    ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent2.rs:97:87
   |
97 |                 self.tagContent = Box::new(NavParent2__Tag__TagChar::new(self.stream, self, _root)?);
   |                                                                                       ^^^^ expected enum `std::option::Option`, found struct `nav_parent2::NavParent2__Tag`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent2::NavParent2__Tag`

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/nav_parent2.rs:97:44
   |
97 |                 self.tagContent = Box::new(NavParent2__Tag__TagChar::new(self.stream, self, _root)?);
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::boxed::Box<nav_parent2::NavParent2__Tag__TagChar>`
   |
   = help: the trait `std::ops::Try` is not implemented for `std::boxed::Box<nav_parent2::NavParent2__Tag__TagChar>`
   = note: required by `std::ops::Try::from_error`

error[E0308]: mismatched types
  --> src/nav_parent_false.rs:40:76
   |
40 |         self.elementA = Box::new(NavParentFalse__ParentA::new(self.stream, self, _root)?);
   |                                                                            ^^^^ expected enum `std::option::Option`, found struct `nav_parent_false::NavParentFalse`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent_false::NavParentFalse`

error[E0609]: no field `stream` on type `&mut nav_parent_false::NavParentFalse`
  --> src/nav_parent_false.rs:41:68
   |
41 |         self.elementB = Box::new(NavParentFalse__ParentB::new(self.stream, self, _root)?);
   |                                                                    ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent2.rs:97:35
   |
97 |                 self.tagContent = Box::new(NavParent2__Tag__TagChar::new(self.stream, self, _root)?);
   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<_>>`
              found type `std::boxed::Box<_>`
help: try using a variant of the expected type
   |
97 |                 self.tagContent = Some(<Box>::new(match ::std::ops::Try::into_result(<NavParent2__Tag__TagChar>::new(self.stream,
98 |                                                                               self,
99 |                                                                               _root))
100|                {
101|                ::std::result::Result::Err(err) =>
102|                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
   --> src/nav_parent2.rs:101:16
    |
101 |         return self.tagContent;
    |                ^^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
    |
    = note: expected type `std::boxed::Box<_>`
               found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `nav_parent2::NavParent2__Tag__TagChar`
   --> src/nav_parent2.rs:117:11
    |
117 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `content`

error[E0609]: no field `stream` on type `&mut nav_parent2::NavParent2__Tag__TagChar`
   --> src/nav_parent2.rs:130:53
    |
130 |         self.content = String::from_utf8_lossy(self.stream.read_bytes(self._parent.num_items)?);
    |                                                     ^^^^^^

error[E0609]: no field `_parent` on type `&mut nav_parent2::NavParent2__Tag__TagChar`
   --> src/nav_parent2.rs:130:76
    |
130 |         self.content = String::from_utf8_lossy(self.stream.read_bytes(self._parent.num_items)?);
    |                                                                            ^^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent_false.rs:41:76
   |
41 |         self.elementB = Box::new(NavParentFalse__ParentB::new(self.stream, self, _root)?);
   |                                                                            ^^^^ expected enum `std::option::Option`, found struct `nav_parent_false::NavParentFalse`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent_false::NavParentFalse`

error[E0308]: mismatched types
  --> src/nav_parent_false.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.childSize = self.stream.read_u1()?;
40 | |         self.elementA = Box::new(NavParentFalse__ParentA::new(self.stream, self, _root)?);
41 | |         self.elementB = Box::new(NavParentFalse__ParentB::new(self.stream, self, _root)?);
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nav_parent_false::NavParentFalse__ParentA`
  --> src/nav_parent_false.rs:61:11
   |
61 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `foo`, `bar`

error[E0609]: no field `stream` on type `&mut nav_parent_false::NavParentFalse__ParentA`
  --> src/nav_parent_false.rs:74:61
   |
74 |         self.foo = Box::new(NavParentFalse__Child::new(self.stream, self, _root)?);
   |                                                             ^^^^^^

error[E0308]: mismatched types
   --> src/nav_parent2.rs:130:24
    |
130 |         self.content = String::from_utf8_lossy(self.stream.read_bytes(self._parent.num_items)?);
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                        |
    |                        expected struct `std::string::String`, found enum `std::borrow::Cow`
    |                        help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes(self._parent.num_items)?).to_string()`
    |
    = note: expected type `std::string::String`
               found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
   --> src/nav_parent2.rs:129:27
    |
129 |           where Self: Sized {
    |  ___________________________^
130 | |         self.content = String::from_utf8_lossy(self.stream.read_bytes(self._parent.num_items)?);
131 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nav_parent3::NavParent3`
  --> src/nav_parent3.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `ofsTags`, `numTags`, `tags`

error[E0609]: no field `stream` on type `&mut nav_parent3::NavParent3`
  --> src/nav_parent3.rs:40:29
   |
40 |         self.ofsTags = self.stream.read_u4le()?;
   |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent3::NavParent3`
  --> src/nav_parent3.rs:41:29
   |
41 |         self.numTags = self.stream.read_u4le()?;
   |                             ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent3.rs:39:27
   |
39 |           where Self: Sized {
   |  ___________________________^
40 | |         self.ofsTags = self.stream.read_u4le()?;
41 | |         self.numTags = self.stream.read_u4le()?;
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut nav_parent3::NavParent3`
  --> src/nav_parent3.rs:51:25
   |
51 |         let _pos = self.stream.pos();
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent3::NavParent3`
  --> src/nav_parent3.rs:52:14
   |
52 |         self.stream.seek(self.ofs_tags);
   |              ^^^^^^

error[E0609]: no field `ofs_tags` on type `&mut nav_parent3::NavParent3`
  --> src/nav_parent3.rs:52:31
   |
52 |         self.stream.seek(self.ofs_tags);
   |                               ^^^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent_false.rs:74:69
   |
74 |         self.foo = Box::new(NavParentFalse__Child::new(self.stream, self, _root)?);
   |                                                                     ^^^^ expected enum `std::option::Option`, found struct `nav_parent_false::NavParentFalse__ParentA`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent_false::NavParentFalse__ParentA`

error[E0609]: no field `stream` on type `&mut nav_parent_false::NavParentFalse__ParentA`
  --> src/nav_parent_false.rs:75:63
   |
75 |         self.bar = Box::new(NavParentFalse__ParentB::new(self.stream, self, _root)?);
   |                                                               ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent3.rs:53:21
   |
53 |         self.tags = vec!();
   |                     ^^^^^^
   |                     |
   |                     expected enum `std::option::Option`, found struct `std::vec::Vec`
   |                     help: try using a variant of the expected type: `Some(<[_]>::into_vec(box []))`
   |
   = note: expected type `std::option::Option<std::vec::Vec<std::boxed::Box<nav_parent3::NavParent3__Tag>>>`
              found type `std::vec::Vec<_>`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error[E0609]: no field `num_tags` on type `&mut nav_parent3::NavParent3`
  --> src/nav_parent3.rs:54:26
   |
54 |         for i in 0..self.num_tags {
   |                          ^^^^^^^^

error[E0599]: no method named `push` found for type `std::option::Option<std::vec::Vec<std::boxed::Box<nav_parent3::NavParent3__Tag>>>` in the current scope
  --> src/nav_parent3.rs:55:23
   |
55 |             self.tags.push(Box::new(NavParent3__Tag::new(self.stream, self, _root)?));
   |                       ^^^^

error[E0609]: no field `stream` on type `&mut nav_parent3::NavParent3`
  --> src/nav_parent3.rs:55:63
   |
55 |             self.tags.push(Box::new(NavParent3__Tag::new(self.stream, self, _root)?));
   |                                                               ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent_false.rs:75:71
   |
75 |         self.bar = Box::new(NavParentFalse__ParentB::new(self.stream, self, _root)?);
   |                                                                       ^^^^ expected enum `std::option::Option`, found struct `nav_parent_false::NavParentFalse__ParentA`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent_false::NavParentFalse__ParentA`

error[E0308]: mismatched types
  --> src/nav_parent_false.rs:73:27
   |
73 |           where Self: Sized {
   |  ___________________________^
74 | |         self.foo = Box::new(NavParentFalse__Child::new(self.stream, self, _root)?);
75 | |         self.bar = Box::new(NavParentFalse__ParentB::new(self.stream, self, _root)?);
76 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nav_parent_false::NavParentFalse__ParentB`
  --> src/nav_parent_false.rs:94:11
   |
94 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `foo`

error[E0609]: no field `stream` on type `&mut nav_parent_false::NavParentFalse__ParentB`
   --> src/nav_parent_false.rs:107:61
    |
107 |         self.foo = Box::new(NavParentFalse__Child::new(self.stream, self, _root)?);
    |                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent3.rs:55:71
   |
55 |             self.tags.push(Box::new(NavParent3__Tag::new(self.stream, self, _root)?));
   |                                                                       ^^^^ expected enum `std::option::Option`, found struct `nav_parent3::NavParent3`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent3::NavParent3`

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/nav_parent3.rs:55:37
   |
55 |             self.tags.push(Box::new(NavParent3__Tag::new(self.stream, self, _root)?));
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::vec::Vec<std::boxed::Box<nav_parent3::NavParent3__Tag>>`
   |
   = help: the trait `std::ops::Try` is not implemented for `std::vec::Vec<std::boxed::Box<nav_parent3::NavParent3__Tag>>`
   = note: required by `std::ops::Try::from_error`

error[E0609]: no field `stream` on type `&mut nav_parent3::NavParent3`
  --> src/nav_parent3.rs:57:14
   |
57 |         self.stream.seek(_pos);
   |              ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent3.rs:58:16
   |
58 |         return self.tags;
   |                ^^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
   |
   = note: expected type `std::vec::Vec<_>`
              found type `std::option::Option<std::vec::Vec<_>>`

error[E0308]: mismatched types
   --> src/nav_parent_false.rs:107:69
    |
107 |         self.foo = Box::new(NavParentFalse__Child::new(self.stream, self, _root)?);
    |                                                                     ^^^^ expected enum `std::option::Option`, found struct `nav_parent_false::NavParentFalse__ParentB`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut nav_parent_false::NavParentFalse__ParentB`

error[E0308]: mismatched types
   --> src/nav_parent_false.rs:106:27
    |
106 |           where Self: Sized {
    |  ___________________________^
107 | |         self.foo = Box::new(NavParentFalse__Child::new(self.stream, self, _root)?);
108 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nav_parent3::NavParent3__Tag`
  --> src/nav_parent3.rs:77:11
   |
77 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `name`, `ofs`, `numItems`, `tagContent`

error[E0609]: no field `stream` on type `nav_parent_false::NavParentFalse__Child`
   --> src/nav_parent_false.rs:127:11
    |
127 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `code`, `more`

error[E0609]: no field `stream` on type `&mut nav_parent_false::NavParentFalse__Child`
   --> src/nav_parent_false.rs:140:26
    |
140 |         self.code = self.stream.read_u1()?;
    |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent3::NavParent3__Tag`
  --> src/nav_parent3.rs:90:50
   |
90 |         self.name = String::from_utf8_lossy(self.stream.read_bytes(4)?);
   |                                                  ^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent_false::NavParentFalse__Child`
   --> src/nav_parent_false.rs:142:30
    |
142 |             self.more = self.stream.read_bytes(self._parent._parent.child_size)?;
    |                              ^^^^^^

error[E0609]: no field `_parent` on type `&mut nav_parent_false::NavParentFalse__Child`
   --> src/nav_parent_false.rs:142:53
    |
142 |             self.more = self.stream.read_bytes(self._parent._parent.child_size)?;
    |                                                     ^^^^^^^

error[E0308]: mismatched types
   --> src/nav_parent_false.rs:141:28
    |
141 |           if self.code == 73 {
    |  ____________________________^
142 | |             self.more = self.stream.read_bytes(self._parent._parent.child_size)?;
143 | |         }
    | |_________^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nav_parent::NavParent`
  --> src/nav_parent.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `header`, `index`

error[E0609]: no field `stream` on type `&mut nav_parent::NavParent`
  --> src/nav_parent.rs:39:63
   |
39 |         self.header = Box::new(NavParent__HeaderObj::new(self.stream, self, _root)?);
   |                                                               ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent.rs:39:71
   |
39 |         self.header = Box::new(NavParent__HeaderObj::new(self.stream, self, _root)?);
   |                                                                       ^^^^ expected enum `std::option::Option`, found struct `nav_parent::NavParent`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent::NavParent`

error[E0609]: no field `stream` on type `&mut nav_parent::NavParent`
  --> src/nav_parent.rs:40:61
   |
40 |         self.index = Box::new(NavParent__IndexObj::new(self.stream, self, _root)?);
   |                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent3.rs:90:21
   |
90 |         self.name = String::from_utf8_lossy(self.stream.read_bytes(4)?);
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                     |
   |                     expected struct `std::string::String`, found enum `std::borrow::Cow`
   |                     help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes(4)?).to_string()`
   |
   = note: expected type `std::string::String`
              found type `std::borrow::Cow<'_, str>`

error[E0609]: no field `stream` on type `&mut nav_parent3::NavParent3__Tag`
  --> src/nav_parent3.rs:91:25
   |
91 |         self.ofs = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent3::NavParent3__Tag`
  --> src/nav_parent3.rs:92:30
   |
92 |         self.numItems = self.stream.read_u4le()?;
   |                              ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent3.rs:89:27
   |
89 |           where Self: Sized {
   |  ___________________________^
90 | |         self.name = String::from_utf8_lossy(self.stream.read_bytes(4)?);
91 | |         self.ofs = self.stream.read_u4le()?;
92 | |         self.numItems = self.stream.read_u4le()?;
93 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `_root` on type `&mut nav_parent3::NavParent3__Tag`
   --> src/nav_parent3.rs:102:27
    |
102 |         let mut io = self._root._io;
    |                           ^^^^^

error[E0308]: mismatched types
   --> src/nav_parent3.rs:106:13
    |
106 |             "RAHC" => {
    |             ^^^^^^ expected struct `std::string::String`, found reference
    |
    = note: expected type `std::string::String`
               found type `&'static str`

error[E0609]: no field `stream` on type `&mut nav_parent3::NavParent3__Tag`
   --> src/nav_parent3.rs:107:79
    |
107 |                 self.tagContent = Box::new(NavParent3__Tag__TagChar::new(self.stream, self, _root)?);
    |                                                                               ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent.rs:40:69
   |
40 |         self.index = Box::new(NavParent__IndexObj::new(self.stream, self, _root)?);
   |                                                                     ^^^^ expected enum `std::option::Option`, found struct `nav_parent::NavParent`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent::NavParent`

error[E0308]: mismatched types
  --> src/nav_parent.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.header = Box::new(NavParent__HeaderObj::new(self.stream, self, _root)?);
40 | |         self.index = Box::new(NavParent__IndexObj::new(self.stream, self, _root)?);
41 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nav_parent::NavParent__HeaderObj`
  --> src/nav_parent.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `qtyEntries`, `filenameLen`

error[E0609]: no field `stream` on type `&mut nav_parent::NavParent__HeaderObj`
  --> src/nav_parent.rs:73:32
   |
73 |         self.qtyEntries = self.stream.read_u4le()?;
   |                                ^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent::NavParent__HeaderObj`
  --> src/nav_parent.rs:74:33
   |
74 |         self.filenameLen = self.stream.read_u4le()?;
   |                                 ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent.rs:72:27
   |
72 |           where Self: Sized {
   |  ___________________________^
73 | |         self.qtyEntries = self.stream.read_u4le()?;
74 | |         self.filenameLen = self.stream.read_u4le()?;
75 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nav_parent::NavParent__IndexObj`
  --> src/nav_parent.rs:94:11
   |
94 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `magic`, `entries`

error[E0609]: no field `stream` on type `&mut nav_parent::NavParent__IndexObj`
   --> src/nav_parent.rs:107:27
    |
107 |         self.magic = self.stream.read_bytes(4)?;
    |                           ^^^^^^

error[E0609]: no field `_parent` on type `&mut nav_parent::NavParent__IndexObj`
   --> src/nav_parent.rs:109:26
    |
109 |         for i in 0..self._parent.header.qty_entries {
    |                          ^^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent::NavParent__IndexObj`
   --> src/nav_parent.rs:110:67
    |
110 |             self.entries.push(Box::new(NavParent__Entry::new(self.stream, self, _root)?));
    |                                                                   ^^^^^^

error[E0308]: mismatched types
   --> src/nav_parent3.rs:107:87
    |
107 |                 self.tagContent = Box::new(NavParent3__Tag__TagChar::new(self.stream, self, _root)?);
    |                                                                                       ^^^^ expected enum `std::option::Option`, found struct `nav_parent3::NavParent3__Tag`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut nav_parent3::NavParent3__Tag`

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
   --> src/nav_parent3.rs:107:44
    |
107 |                 self.tagContent = Box::new(NavParent3__Tag__TagChar::new(self.stream, self, _root)?);
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::boxed::Box<nav_parent3::NavParent3__Tag__TagChar>`
    |
    = help: the trait `std::ops::Try` is not implemented for `std::boxed::Box<nav_parent3::NavParent3__Tag__TagChar>`
    = note: required by `std::ops::Try::from_error`

error[E0308]: mismatched types
   --> src/nav_parent.rs:110:75
    |
110 |             self.entries.push(Box::new(NavParent__Entry::new(self.stream, self, _root)?));
    |                                                                           ^^^^ expected enum `std::option::Option`, found struct `nav_parent::NavParent__IndexObj`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut nav_parent::NavParent__IndexObj`

error[E0308]: mismatched types
   --> src/nav_parent.rs:109:9
    |
105 |                                -> Result<()>
    |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
109 | /         for i in 0..self._parent.header.qty_entries {
110 | |             self.entries.push(Box::new(NavParent__Entry::new(self.stream, self, _root)?));
111 | |         }
    | |_________^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nav_parent::NavParent__Entry`
   --> src/nav_parent.rs:130:11
    |
130 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `filename`

warning: unreachable expression
   --> src/nav_parent.rs:143:9
    |
143 |         self.filename = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> src/nav_parent3.rs:107:35
    |
107 |                 self.tagContent = Box::new(NavParent3__Tag__TagChar::new(self.stream, self, _root)?);
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
    |
    = note: expected type `std::option::Option<std::boxed::Box<_>>`
               found type `std::boxed::Box<_>`
help: try using a variant of the expected type
    |
107 |                 self.tagContent = Some(<Box>::new(match ::std::ops::Try::into_result(<NavParent3__Tag__TagChar>::new(self.stream,
108 |                                                                               self,
109 |                                                                               _root))
110 |                {
111 |                ::std::result::Result::Err(err) =>
112 |                    #[allow(unreachable_code)]
  ...

error[E0308]: mismatched types
   --> src/nav_parent3.rs:111:16
    |
111 |         return self.tagContent;
    |                ^^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
    |
    = note: expected type `std::boxed::Box<_>`
               found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `nav_parent3::NavParent3__Tag__TagChar`
   --> src/nav_parent3.rs:127:11
    |
127 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `content`

error[E0609]: no field `stream` on type `nav_parent_override::NavParentOverride`
  --> src/nav_parent_override.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `childSize`, `child1`, `mediator2`

error[E0609]: no field `stream` on type `&mut nav_parent_override::NavParentOverride`
  --> src/nav_parent_override.rs:39:31
   |
39 |         self.childSize = self.stream.read_u1()?;
   |                               ^^^^^^
error[E0609]: no field `stream` on type `&mut nav_parent3::NavParent3__Tag__TagChar`
   --> src/nav_parent3.rs:140:53
    |
140 |         self.content = String::from_utf8_lossy(self.stream.read_bytes(self._parent.num_items)?);
    |                                                     ^^^^^^


error[E0609]: no field `_parent` on type `&mut nav_parent3::NavParent3__Tag__TagChar`
   --> src/nav_parent3.rs:140:76
    |
140 |         self.content = String::from_utf8_lossy(self.stream.read_bytes(self._parent.num_items)?);
    |                                                                            ^^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent_override::NavParentOverride`
  --> src/nav_parent_override.rs:40:67
   |
40 |         self.child1 = Box::new(NavParentOverride__Child::new(self.stream, self, _root)?);
   |                                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent_override.rs:40:75
   |
40 |         self.child1 = Box::new(NavParentOverride__Child::new(self.stream, self, _root)?);
   |                                                                           ^^^^ expected enum `std::option::Option`, found struct `nav_parent_override::NavParentOverride`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent_override::NavParentOverride`

error[E0609]: no field `stream` on type `&mut nav_parent_override::NavParentOverride`
  --> src/nav_parent_override.rs:41:73
   |
41 |         self.mediator2 = Box::new(NavParentOverride__Mediator::new(self.stream, self, _root)?);
   |                                                                         ^^^^^^

error[E0308]: mismatched types
   --> src/nav_parent3.rs:140:24
    |
140 |         self.content = String::from_utf8_lossy(self.stream.read_bytes(self._parent.num_items)?);
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                        |
    |                        expected struct `std::string::String`, found enum `std::borrow::Cow`
    |                        help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes(self._parent.num_items)?).to_string()`
    |
    = note: expected type `std::string::String`
               found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
   --> src/nav_parent3.rs:139:27
    |
139 |           where Self: Sized {
    |  ___________________________^
140 | |         self.content = String::from_utf8_lossy(self.stream.read_bytes(self._parent.num_items)?);
141 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nav_parent_false2::NavParentFalse2`
  --> src/nav_parent_false2.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `parentless`

error[E0609]: no field `stream` on type `&mut nav_parent_false2::NavParentFalse2`
  --> src/nav_parent_false2.rs:37:69
   |
37 |         self.parentless = Box::new(NavParentFalse2__Child::new(self.stream, self, _root)?);
   |                                                                     ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent_override.rs:41:81
   |
41 |         self.mediator2 = Box::new(NavParentOverride__Mediator::new(self.stream, self, _root)?);
   |                                                                                 ^^^^ expected enum `std::option::Option`, found struct `nav_parent_override::NavParentOverride`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent_override::NavParentOverride`

error[E0308]: mismatched types
  --> src/nav_parent_override.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.childSize = self.stream.read_u1()?;
40 | |         self.child1 = Box::new(NavParentOverride__Child::new(self.stream, self, _root)?);
41 | |         self.mediator2 = Box::new(NavParentOverride__Mediator::new(self.stream, self, _root)?);
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nav_parent_override::NavParentOverride__Mediator`
  --> src/nav_parent_override.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `child2`

error[E0609]: no field `stream` on type `&mut nav_parent_override::NavParentOverride__Mediator`
  --> src/nav_parent_override.rs:73:67
   |
73 |         self.child2 = Box::new(NavParentOverride__Child::new(self.stream, self, _root)?);
   |                                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent_false2.rs:37:77
   |
37 |         self.parentless = Box::new(NavParentFalse2__Child::new(self.stream, self, _root)?);
   |                                                                             ^^^^ expected enum `std::option::Option`, found struct `nav_parent_false2::NavParentFalse2`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent_false2::NavParentFalse2`

error[E0308]: mismatched types
  --> src/nav_parent_false2.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |         self.parentless = Box::new(NavParentFalse2__Child::new(self.stream, self, _root)?);
38 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nav_parent_false2::NavParentFalse2__Child`
  --> src/nav_parent_false2.rs:56:11
   |
56 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `foo`

error[E0609]: no field `stream` on type `&mut nav_parent_false2::NavParentFalse2__Child`
  --> src/nav_parent_false2.rs:69:25
   |
69 |         self.foo = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent_false2.rs:68:27
   |
68 |           where Self: Sized {
   |  ___________________________^
69 | |         self.foo = self.stream.read_u1()?;
70 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nav_parent_false::NavParentFalse`
  --> src/nav_parent_false.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `childSize`, `elementA`, `elementB`

error[E0609]: no field `stream` on type `&mut nav_parent_false::NavParentFalse`
  --> src/nav_parent_false.rs:39:31
   |
39 |         self.childSize = self.stream.read_u1()?;
   |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent_false::NavParentFalse`
  --> src/nav_parent_false.rs:40:68
   |
40 |         self.elementA = Box::new(NavParentFalse__ParentA::new(self.stream, self, _root)?);
   |                                                                    ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent_override.rs:73:75
   |
73 |         self.child2 = Box::new(NavParentOverride__Child::new(self.stream, self, _root)?);
   |                                                                           ^^^^ expected enum `std::option::Option`, found struct `nav_parent_override::NavParentOverride__Mediator`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent_override::NavParentOverride__Mediator`

error[E0308]: mismatched types
  --> src/nav_parent_override.rs:72:27
   |
72 |           where Self: Sized {
   |  ___________________________^
73 | |         self.child2 = Box::new(NavParentOverride__Child::new(self.stream, self, _root)?);
74 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nav_parent_override::NavParentOverride__Child`
  --> src/nav_parent_override.rs:92:11
   |
92 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `data`

error[E0609]: no field `stream` on type `&mut nav_parent_override::NavParentOverride__Child`
   --> src/nav_parent_override.rs:105:26
    |
105 |         self.data = self.stream.read_bytes(self._parent.child_size)?;
    |                          ^^^^^^

error[E0609]: no field `_parent` on type `&mut nav_parent_override::NavParentOverride__Child`
   --> src/nav_parent_override.rs:105:49
    |
105 |         self.data = self.stream.read_bytes(self._parent.child_size)?;
    |                                                 ^^^^^^^

error[E0308]: mismatched types
   --> src/nav_parent_override.rs:104:27
    |
104 |           where Self: Sized {
    |  ___________________________^
105 | |         self.data = self.stream.read_bytes(self._parent.child_size)?;
106 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nav_parent_switch::NavParentSwitch`
  --> src/nav_parent_switch.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `category`, `content`

error[E0609]: no field `stream` on type `&mut nav_parent_switch::NavParentSwitch`
  --> src/nav_parent_switch.rs:38:30
   |
38 |         self.category = self.stream.read_u1()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent_switch::NavParentSwitch`
  --> src/nav_parent_switch.rs:41:77
   |
41 |                 self.content = Box::new(NavParentSwitch__Element1::new(self.stream, self, _root)?);
   |                                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent_false.rs:40:76
   |
40 |         self.elementA = Box::new(NavParentFalse__ParentA::new(self.stream, self, _root)?);
   |                                                                            ^^^^ expected enum `std::option::Option`, found struct `nav_parent_false::NavParentFalse`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent_false::NavParentFalse`

error[E0609]: no field `stream` on type `&mut nav_parent_false::NavParentFalse`
  --> src/nav_parent_false.rs:41:68
   |
41 |         self.elementB = Box::new(NavParentFalse__ParentB::new(self.stream, self, _root)?);
   |                                                                    ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent_switch.rs:41:85
   |
41 |                 self.content = Box::new(NavParentSwitch__Element1::new(self.stream, self, _root)?);
   |                                                                                     ^^^^ expected enum `std::option::Option`, found struct `nav_parent_switch::NavParentSwitch`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent_switch::NavParentSwitch`

error[E0308]: mismatched types
  --> src/nav_parent_switch.rs:40:18
   |
40 |               1 => {
   |  __________________^
41 | |                 self.content = Box::new(NavParentSwitch__Element1::new(self.stream, self, _root)?);
42 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nav_parent_switch::NavParentSwitch__Element1`
  --> src/nav_parent_switch.rs:63:11
   |
63 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `foo`, `subelement`

error[E0609]: no field `stream` on type `&mut nav_parent_switch::NavParentSwitch__Element1`
  --> src/nav_parent_switch.rs:76:25
   |
76 |         self.foo = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent_switch::NavParentSwitch__Element1`
  --> src/nav_parent_switch.rs:77:75
   |
77 |         self.subelement = Box::new(NavParentSwitch__Subelement1::new(self.stream, self, _root)?);
   |                                                                           ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent_false.rs:41:76
   |
41 |         self.elementB = Box::new(NavParentFalse__ParentB::new(self.stream, self, _root)?);
   |                                                                            ^^^^ expected enum `std::option::Option`, found struct `nav_parent_false::NavParentFalse`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent_false::NavParentFalse`

error[E0308]: mismatched types
  --> src/nav_parent_false.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.childSize = self.stream.read_u1()?;
40 | |         self.elementA = Box::new(NavParentFalse__ParentA::new(self.stream, self, _root)?);
41 | |         self.elementB = Box::new(NavParentFalse__ParentB::new(self.stream, self, _root)?);
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nav_parent_false::NavParentFalse__ParentA`
  --> src/nav_parent_false.rs:61:11
   |
61 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `foo`, `bar`

error[E0609]: no field `stream` on type `&mut nav_parent_false::NavParentFalse__ParentA`
  --> src/nav_parent_false.rs:74:61
   |
74 |         self.foo = Box::new(NavParentFalse__Child::new(self.stream, self, _root)?);
   |                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent_switch.rs:77:83
   |
77 |         self.subelement = Box::new(NavParentSwitch__Subelement1::new(self.stream, self, _root)?);
   |                                                                                   ^^^^ expected enum `std::option::Option`, found struct `nav_parent_switch::NavParentSwitch__Element1`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent_switch::NavParentSwitch__Element1`

error[E0308]: mismatched types
  --> src/nav_parent_switch.rs:75:27
   |
75 |           where Self: Sized {
   |  ___________________________^
76 | |         self.foo = self.stream.read_u1()?;
77 | |         self.subelement = Box::new(NavParentSwitch__Subelement1::new(self.stream, self, _root)?);
78 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nav_parent_switch::NavParentSwitch__Subelement1`
  --> src/nav_parent_switch.rs:96:11
   |
96 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `bar`

error[E0609]: no field `_parent` on type `&mut nav_parent_switch::NavParentSwitch__Subelement1`
   --> src/nav_parent_switch.rs:109:17
    |
109 |         if self._parent.foo == 66 {
    |                 ^^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent_switch::NavParentSwitch__Subelement1`
   --> src/nav_parent_switch.rs:110:29
    |
110 |             self.bar = self.stream.read_u1()?;
    |                             ^^^^^^

error[E0308]: mismatched types
   --> src/nav_parent_switch.rs:109:35
    |
109 |           if self._parent.foo == 66 {
    |  ___________________________________^
110 | |             self.bar = self.stream.read_u1()?;
111 | |         }
    | |_________^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nav_parent_vs_value_inst::NavParentVsValueInst`
  --> src/nav_parent_vs_value_inst.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `s1`, `child`

warning: unreachable expression
  --> src/nav_parent_vs_value_inst.rs:38:9
   |
38 |         self.s1 = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent_vs_value_inst::NavParentVsValueInst`
  --> src/nav_parent_vs_value_inst.rs:39:72
   |
39 |         self.child = Box::new(NavParentVsValueInst__ChildObj::new(self.stream, self, _root)?);
   |                                                                        ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent_false.rs:74:69
   |
74 |         self.foo = Box::new(NavParentFalse__Child::new(self.stream, self, _root)?);
   |                                                                     ^^^^ expected enum `std::option::Option`, found struct `nav_parent_false::NavParentFalse__ParentA`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent_false::NavParentFalse__ParentA`

error[E0609]: no field `stream` on type `&mut nav_parent_false::NavParentFalse__ParentA`
  --> src/nav_parent_false.rs:75:63
   |
75 |         self.bar = Box::new(NavParentFalse__ParentB::new(self.stream, self, _root)?);
   |                                                               ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent_vs_value_inst.rs:39:80
   |
39 |         self.child = Box::new(NavParentVsValueInst__ChildObj::new(self.stream, self, _root)?);
   |                                                                                ^^^^ expected enum `std::option::Option`, found struct `nav_parent_vs_value_inst::NavParentVsValueInst`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent_vs_value_inst::NavParentVsValueInst`

error[E0609]: no field `stream` on type `nav_parent_vs_value_inst::NavParentVsValueInst__ChildObj`
  --> src/nav_parent_vs_value_inst.rs:58:11
   |
58 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `doSomething`

error[E0308]: mismatched types
  --> src/nav_parent_vs_value_inst.rs:70:27
   |
70 |           where Self: Sized {
   |  ___________________________^
71 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `_parent` on type `&mut nav_parent_vs_value_inst::NavParentVsValueInst__ChildObj`
  --> src/nav_parent_vs_value_inst.rs:80:36
   |
80 |         self.doSomething = if self._parent.s1 == "foo" { true } else { false};
   |                                    ^^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent_vs_value_inst.rs:80:58
   |
80 |         self.doSomething = if self._parent.s1 == "foo" { true } else { false};
   |                                                          ^^^^ expected enum `std::option::Option`, found bool
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/nav_parent_vs_value_inst.rs:80:72
   |
80 |         self.doSomething = if self._parent.s1 == "foo" { true } else { false};
   |                                                                        ^^^^^ expected enum `std::option::Option`, found bool
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/nav_parent_vs_value_inst.rs:81:16
   |
81 |         return self.doSomething;
   |                ^^^^^^^^^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0609]: no field `stream` on type `nav_root::NavRoot`
  --> src/nav_root.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `header`, `index`

error[E0609]: no field `stream` on type `&mut nav_root::NavRoot`
  --> src/nav_root.rs:39:61
   |
39 |         self.header = Box::new(NavRoot__HeaderObj::new(self.stream, self, _root)?);
   |                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent_false.rs:75:71
   |
75 |         self.bar = Box::new(NavParentFalse__ParentB::new(self.stream, self, _root)?);
   |                                                                       ^^^^ expected enum `std::option::Option`, found struct `nav_parent_false::NavParentFalse__ParentA`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent_false::NavParentFalse__ParentA`

error[E0308]: mismatched types
  --> src/nav_parent_false.rs:73:27
   |
73 |           where Self: Sized {
   |  ___________________________^
74 | |         self.foo = Box::new(NavParentFalse__Child::new(self.stream, self, _root)?);
75 | |         self.bar = Box::new(NavParentFalse__ParentB::new(self.stream, self, _root)?);
76 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nav_parent_false::NavParentFalse__ParentB`
  --> src/nav_parent_false.rs:94:11
   |
94 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `foo`

error[E0609]: no field `stream` on type `&mut nav_parent_false::NavParentFalse__ParentB`
   --> src/nav_parent_false.rs:107:61
    |
107 |         self.foo = Box::new(NavParentFalse__Child::new(self.stream, self, _root)?);
    |                                                             ^^^^^^

error[E0308]: mismatched types
   --> src/nav_parent_false.rs:107:69
    |
107 |         self.foo = Box::new(NavParentFalse__Child::new(self.stream, self, _root)?);
    |                                                                     ^^^^ expected enum `std::option::Option`, found struct `nav_parent_false::NavParentFalse__ParentB`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut nav_parent_false::NavParentFalse__ParentB`

error[E0308]: mismatched types
   --> src/nav_parent_false.rs:106:27
    |
106 |           where Self: Sized {
    |  ___________________________^
107 | |         self.foo = Box::new(NavParentFalse__Child::new(self.stream, self, _root)?);
108 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nav_parent_false::NavParentFalse__Child`
   --> src/nav_parent_false.rs:127:11
    |
127 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `code`, `more`

error[E0609]: no field `stream` on type `&mut nav_parent_false::NavParentFalse__Child`
   --> src/nav_parent_false.rs:140:26
    |
140 |         self.code = self.stream.read_u1()?;
    |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent_false::NavParentFalse__Child`
   --> src/nav_parent_false.rs:142:30
    |
142 |             self.more = self.stream.read_bytes(self._parent._parent.child_size)?;
    |                              ^^^^^^

error[E0609]: no field `_parent` on type `&mut nav_parent_false::NavParentFalse__Child`
   --> src/nav_parent_false.rs:142:53
    |
142 |             self.more = self.stream.read_bytes(self._parent._parent.child_size)?;
    |                                                     ^^^^^^^

error[E0308]: mismatched types
   --> src/nav_parent_false.rs:141:28
    |
141 |           if self.code == 73 {
    |  ____________________________^
142 | |             self.more = self.stream.read_bytes(self._parent._parent.child_size)?;
143 | |         }
    | |_________^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nav_parent::NavParent`
  --> src/nav_parent.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `header`, `index`

error[E0609]: no field `stream` on type `&mut nav_parent::NavParent`
  --> src/nav_parent.rs:39:63
   |
39 |         self.header = Box::new(NavParent__HeaderObj::new(self.stream, self, _root)?);
   |                                                               ^^^^^^

error[E0308]: mismatched types
  --> src/nav_root.rs:39:69
   |
39 |         self.header = Box::new(NavRoot__HeaderObj::new(self.stream, self, _root)?);
   |                                                                     ^^^^ expected enum `std::option::Option`, found struct `nav_root::NavRoot`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_root::NavRoot`

error[E0609]: no field `stream` on type `&mut nav_root::NavRoot`
  --> src/nav_root.rs:40:59
   |
40 |         self.index = Box::new(NavRoot__IndexObj::new(self.stream, self, _root)?);
   |                                                           ^^^^^^

error[E0308]: mismatched types
  --> src/nav_root.rs:40:67
   |
40 |         self.index = Box::new(NavRoot__IndexObj::new(self.stream, self, _root)?);
   |                                                                   ^^^^ expected enum `std::option::Option`, found struct `nav_root::NavRoot`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_root::NavRoot`

error[E0308]: mismatched types
  --> src/nav_parent.rs:39:71
   |
39 |         self.header = Box::new(NavParent__HeaderObj::new(self.stream, self, _root)?);
   |                                                                       ^^^^ expected enum `std::option::Option`, found struct `nav_parent::NavParent`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent::NavParent`

error[E0308]: mismatched types
  --> src/nav_root.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.header = Box::new(NavRoot__HeaderObj::new(self.stream, self, _root)?);
40 | |         self.index = Box::new(NavRoot__IndexObj::new(self.stream, self, _root)?);
41 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut nav_parent::NavParent`
  --> src/nav_parent.rs:40:61
   |
40 |         self.index = Box::new(NavParent__IndexObj::new(self.stream, self, _root)?);
   |                                                             ^^^^^^

error[E0609]: no field `stream` on type `nav_root::NavRoot__HeaderObj`
  --> src/nav_root.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `qtyEntries`, `filenameLen`

error[E0609]: no field `stream` on type `&mut nav_root::NavRoot__HeaderObj`
  --> src/nav_root.rs:73:32
   |
73 |         self.qtyEntries = self.stream.read_u4le()?;
   |                                ^^^^^^

error[E0609]: no field `stream` on type `&mut nav_root::NavRoot__HeaderObj`
  --> src/nav_root.rs:74:33
   |
74 |         self.filenameLen = self.stream.read_u4le()?;
   |                                 ^^^^^^

error[E0308]: mismatched types
  --> src/nav_root.rs:72:27
   |
72 |           where Self: Sized {
   |  ___________________________^
73 | |         self.qtyEntries = self.stream.read_u4le()?;
74 | |         self.filenameLen = self.stream.read_u4le()?;
75 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nav_root::NavRoot__IndexObj`
  --> src/nav_root.rs:94:11
   |
94 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `magic`, `entries`

error[E0609]: no field `stream` on type `&mut nav_root::NavRoot__IndexObj`
   --> src/nav_root.rs:107:27
    |
107 |         self.magic = self.stream.read_bytes(4)?;
    |                           ^^^^^^

error[E0609]: no field `_root` on type `&mut nav_root::NavRoot__IndexObj`
   --> src/nav_root.rs:109:26
    |
109 |         for i in 0..self._root.header.qty_entries {
    |                          ^^^^^

error[E0609]: no field `stream` on type `&mut nav_root::NavRoot__IndexObj`
   --> src/nav_root.rs:110:65
    |
110 |             self.entries.push(Box::new(NavRoot__Entry::new(self.stream, self, _root)?));
    |                                                                 ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent.rs:40:69
   |
40 |         self.index = Box::new(NavParent__IndexObj::new(self.stream, self, _root)?);
   |                                                                     ^^^^ expected enum `std::option::Option`, found struct `nav_parent::NavParent`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent::NavParent`

error[E0308]: mismatched types
  --> src/nav_parent.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.header = Box::new(NavParent__HeaderObj::new(self.stream, self, _root)?);
40 | |         self.index = Box::new(NavParent__IndexObj::new(self.stream, self, _root)?);
41 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nav_parent::NavParent__HeaderObj`
  --> src/nav_parent.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `qtyEntries`, `filenameLen`

error[E0609]: no field `stream` on type `&mut nav_parent::NavParent__HeaderObj`
  --> src/nav_parent.rs:73:32
   |
73 |         self.qtyEntries = self.stream.read_u4le()?;
   |                                ^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent::NavParent__HeaderObj`
  --> src/nav_parent.rs:74:33
   |
74 |         self.filenameLen = self.stream.read_u4le()?;
   |                                 ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent.rs:72:27
   |
72 |           where Self: Sized {
   |  ___________________________^
73 | |         self.qtyEntries = self.stream.read_u4le()?;
74 | |         self.filenameLen = self.stream.read_u4le()?;
75 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nav_parent::NavParent__IndexObj`
  --> src/nav_parent.rs:94:11
   |
94 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `magic`, `entries`

error[E0609]: no field `stream` on type `&mut nav_parent::NavParent__IndexObj`
   --> src/nav_parent.rs:107:27
    |
107 |         self.magic = self.stream.read_bytes(4)?;
    |                           ^^^^^^

error[E0609]: no field `_parent` on type `&mut nav_parent::NavParent__IndexObj`
   --> src/nav_parent.rs:109:26
    |
109 |         for i in 0..self._parent.header.qty_entries {
    |                          ^^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent::NavParent__IndexObj`
   --> src/nav_parent.rs:110:67
    |
110 |             self.entries.push(Box::new(NavParent__Entry::new(self.stream, self, _root)?));
    |                                                                   ^^^^^^

error[E0308]: mismatched types
   --> src/nav_root.rs:110:73
    |
110 |             self.entries.push(Box::new(NavRoot__Entry::new(self.stream, self, _root)?));
    |                                                                         ^^^^ expected enum `std::option::Option`, found struct `nav_root::NavRoot__IndexObj`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut nav_root::NavRoot__IndexObj`

error[E0308]: mismatched types
   --> src/nav_root.rs:109:9
    |
105 |                                -> Result<()>
    |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
109 | /         for i in 0..self._root.header.qty_entries {
110 | |             self.entries.push(Box::new(NavRoot__Entry::new(self.stream, self, _root)?));
111 | |         }
    | |_________^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nav_root::NavRoot__Entry`
   --> src/nav_root.rs:130:11
    |
130 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `filename`

warning: unreachable expression
   --> src/nav_root.rs:143:9
    |
143 |         self.filename = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `nested_same_name2::NestedSameName2`
  --> src/nested_same_name2.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `version`, `mainData`, `dummy`

error[E0609]: no field `stream` on type `&mut nested_same_name2::NestedSameName2`
  --> src/nested_same_name2.rs:39:29
   |
39 |         self.version = self.stream.read_u4le()?;
   |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut nested_same_name2::NestedSameName2`
  --> src/nested_same_name2.rs:40:66
   |
40 |         self.mainData = Box::new(NestedSameName2__Main::new(self.stream, self, _root)?);
   |                                                                  ^^^^^^

error[E0308]: mismatched types
   --> src/nav_parent.rs:110:75
    |
110 |             self.entries.push(Box::new(NavParent__Entry::new(self.stream, self, _root)?));
    |                                                                           ^^^^ expected enum `std::option::Option`, found struct `nav_parent::NavParent__IndexObj`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut nav_parent::NavParent__IndexObj`

error[E0308]: mismatched types
   --> src/nav_parent.rs:109:9
    |
105 |                                -> Result<()>
    |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
109 | /         for i in 0..self._parent.header.qty_entries {
110 | |             self.entries.push(Box::new(NavParent__Entry::new(self.stream, self, _root)?));
111 | |         }
    | |_________^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nav_parent::NavParent__Entry`
   --> src/nav_parent.rs:130:11
    |
130 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `filename`

warning: unreachable expression
   --> src/nav_parent.rs:143:9
    |
143 |         self.filename = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `nav_parent_override::NavParentOverride`
  --> src/nav_parent_override.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `childSize`, `child1`, `mediator2`

error[E0609]: no field `stream` on type `&mut nav_parent_override::NavParentOverride`
  --> src/nav_parent_override.rs:39:31
   |
39 |         self.childSize = self.stream.read_u1()?;
   |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent_override::NavParentOverride`
  --> src/nav_parent_override.rs:40:67
   |
40 |         self.child1 = Box::new(NavParentOverride__Child::new(self.stream, self, _root)?);
   |                                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/nested_same_name2.rs:40:74
   |
40 |         self.mainData = Box::new(NestedSameName2__Main::new(self.stream, self, _root)?);
   |                                                                          ^^^^ expected enum `std::option::Option`, found struct `nested_same_name2::NestedSameName2`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_same_name2::NestedSameName2`

error[E0609]: no field `stream` on type `&mut nested_same_name2::NestedSameName2`
  --> src/nested_same_name2.rs:41:67
   |
41 |         self.dummy = Box::new(NestedSameName2__DummyObj::new(self.stream, self, _root)?);
   |                                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/nested_same_name2.rs:41:75
   |
41 |         self.dummy = Box::new(NestedSameName2__DummyObj::new(self.stream, self, _root)?);
   |                                                                           ^^^^ expected enum `std::option::Option`, found struct `nested_same_name2::NestedSameName2`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_same_name2::NestedSameName2`

error[E0308]: mismatched types
  --> src/nav_parent_override.rs:40:75
   |
40 |         self.child1 = Box::new(NavParentOverride__Child::new(self.stream, self, _root)?);
   |                                                                           ^^^^ expected enum `std::option::Option`, found struct `nav_parent_override::NavParentOverride`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent_override::NavParentOverride`

error[E0308]: mismatched types
  --> src/nested_same_name2.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.version = self.stream.read_u4le()?;
40 | |         self.mainData = Box::new(NestedSameName2__Main::new(self.stream, self, _root)?);
41 | |         self.dummy = Box::new(NestedSameName2__DummyObj::new(self.stream, self, _root)?);
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut nav_parent_override::NavParentOverride`
  --> src/nav_parent_override.rs:41:73
   |
41 |         self.mediator2 = Box::new(NavParentOverride__Mediator::new(self.stream, self, _root)?);
   |                                                                         ^^^^^^

error[E0609]: no field `stream` on type `nested_same_name2::NestedSameName2__Main`
  --> src/nested_same_name2.rs:61:11
   |
61 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `mainSize`, `foo`

error[E0609]: no field `stream` on type `&mut nested_same_name2::NestedSameName2__Main`
  --> src/nested_same_name2.rs:74:30
   |
74 |         self.mainSize = self.stream.read_s4le()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut nested_same_name2::NestedSameName2__Main`
  --> src/nested_same_name2.rs:75:69
   |
75 |         self.foo = Box::new(NestedSameName2__Main__FooObj::new(self.stream, self, _root)?);
   |                                                                     ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent_override.rs:41:81
   |
41 |         self.mediator2 = Box::new(NavParentOverride__Mediator::new(self.stream, self, _root)?);
   |                                                                                 ^^^^ expected enum `std::option::Option`, found struct `nav_parent_override::NavParentOverride`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent_override::NavParentOverride`

error[E0308]: mismatched types
  --> src/nav_parent_override.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.childSize = self.stream.read_u1()?;
40 | |         self.child1 = Box::new(NavParentOverride__Child::new(self.stream, self, _root)?);
41 | |         self.mediator2 = Box::new(NavParentOverride__Mediator::new(self.stream, self, _root)?);
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nav_parent_override::NavParentOverride__Mediator`
  --> src/nav_parent_override.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `child2`

error[E0609]: no field `stream` on type `&mut nav_parent_override::NavParentOverride__Mediator`
  --> src/nav_parent_override.rs:73:67
   |
73 |         self.child2 = Box::new(NavParentOverride__Child::new(self.stream, self, _root)?);
   |                                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/nested_same_name2.rs:75:77
   |
75 |         self.foo = Box::new(NestedSameName2__Main__FooObj::new(self.stream, self, _root)?);
   |                                                                             ^^^^ expected enum `std::option::Option`, found struct `nested_same_name2::NestedSameName2__Main`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_same_name2::NestedSameName2__Main`

error[E0308]: mismatched types
  --> src/nested_same_name2.rs:73:27
   |
73 |           where Self: Sized {
   |  ___________________________^
74 | |         self.mainSize = self.stream.read_s4le()?;
75 | |         self.foo = Box::new(NestedSameName2__Main__FooObj::new(self.stream, self, _root)?);
76 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nested_same_name2::NestedSameName2__Main__FooObj`
  --> src/nested_same_name2.rs:94:11
   |
94 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `data1`

error[E0609]: no field `stream` on type `&mut nested_same_name2::NestedSameName2__Main__FooObj`
   --> src/nested_same_name2.rs:107:27
    |
107 |         self.data1 = self.stream.read_bytes((self._parent.main_size * 2))?;
    |                           ^^^^^^

error[E0609]: no field `_parent` on type `&mut nested_same_name2::NestedSameName2__Main__FooObj`
   --> src/nested_same_name2.rs:107:51
    |
107 |         self.data1 = self.stream.read_bytes((self._parent.main_size * 2))?;
    |                                                   ^^^^^^^

error[E0308]: mismatched types
   --> src/nested_same_name2.rs:106:27
    |
106 |           where Self: Sized {
    |  ___________________________^
107 | |         self.data1 = self.stream.read_bytes((self._parent.main_size * 2))?;
108 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_same_name2::NestedSameName2__DummyObj`
   --> src/nested_same_name2.rs:127:11
    |
127 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `dummySize`, `foo`

error[E0609]: no field `stream` on type `&mut nested_same_name2::NestedSameName2__DummyObj`
   --> src/nested_same_name2.rs:140:31
    |
140 |         self.dummySize = self.stream.read_s4le()?;
    |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut nested_same_name2::NestedSameName2__DummyObj`
   --> src/nested_same_name2.rs:141:73
    |
141 |         self.foo = Box::new(NestedSameName2__DummyObj__FooObj::new(self.stream, self, _root)?);
    |                                                                         ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent_override.rs:73:75
   |
73 |         self.child2 = Box::new(NavParentOverride__Child::new(self.stream, self, _root)?);
   |                                                                           ^^^^ expected enum `std::option::Option`, found struct `nav_parent_override::NavParentOverride__Mediator`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent_override::NavParentOverride__Mediator`

error[E0308]: mismatched types
  --> src/nav_parent_override.rs:72:27
   |
72 |           where Self: Sized {
   |  ___________________________^
73 | |         self.child2 = Box::new(NavParentOverride__Child::new(self.stream, self, _root)?);
74 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nav_parent_override::NavParentOverride__Child`
  --> src/nav_parent_override.rs:92:11
   |
92 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `data`

error[E0609]: no field `stream` on type `&mut nav_parent_override::NavParentOverride__Child`
   --> src/nav_parent_override.rs:105:26
    |
105 |         self.data = self.stream.read_bytes(self._parent.child_size)?;
    |                          ^^^^^^

error[E0609]: no field `_parent` on type `&mut nav_parent_override::NavParentOverride__Child`
   --> src/nav_parent_override.rs:105:49
    |
105 |         self.data = self.stream.read_bytes(self._parent.child_size)?;
    |                                                 ^^^^^^^

error[E0308]: mismatched types
   --> src/nav_parent_override.rs:104:27
    |
104 |           where Self: Sized {
    |  ___________________________^
105 | |         self.data = self.stream.read_bytes(self._parent.child_size)?;
106 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nav_parent_switch::NavParentSwitch`
  --> src/nav_parent_switch.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `category`, `content`

error[E0609]: no field `stream` on type `&mut nav_parent_switch::NavParentSwitch`
  --> src/nav_parent_switch.rs:38:30
   |
38 |         self.category = self.stream.read_u1()?;
   |                              ^^^^^^

error[E0308]: mismatched types
   --> src/nested_same_name2.rs:141:81
    |
141 |         self.foo = Box::new(NestedSameName2__DummyObj__FooObj::new(self.stream, self, _root)?);
    |                                                                                 ^^^^ expected enum `std::option::Option`, found struct `nested_same_name2::NestedSameName2__DummyObj`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut nested_same_name2::NestedSameName2__DummyObj`

error[E0609]: no field `stream` on type `&mut nav_parent_switch::NavParentSwitch`
  --> src/nav_parent_switch.rs:41:77
   |
41 |                 self.content = Box::new(NavParentSwitch__Element1::new(self.stream, self, _root)?);
   |                                                                             ^^^^^^

error[E0308]: mismatched types
   --> src/nested_same_name2.rs:139:27
    |
139 |           where Self: Sized {
    |  ___________________________^
140 | |         self.dummySize = self.stream.read_s4le()?;
141 | |         self.foo = Box::new(NestedSameName2__DummyObj__FooObj::new(self.stream, self, _root)?);
142 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_same_name2::NestedSameName2__DummyObj__FooObj`
   --> src/nested_same_name2.rs:160:11
    |
160 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `data2`

error[E0609]: no field `stream` on type `&mut nested_same_name2::NestedSameName2__DummyObj__FooObj`
   --> src/nested_same_name2.rs:173:27
    |
173 |         self.data2 = self.stream.read_bytes((self._parent.dummy_size * 2))?;
    |                           ^^^^^^

error[E0609]: no field `_parent` on type `&mut nested_same_name2::NestedSameName2__DummyObj__FooObj`
   --> src/nested_same_name2.rs:173:51
    |
173 |         self.data2 = self.stream.read_bytes((self._parent.dummy_size * 2))?;
    |                                                   ^^^^^^^

error[E0308]: mismatched types
   --> src/nested_same_name2.rs:172:27
    |
172 |           where Self: Sized {
    |  ___________________________^
173 | |         self.data2 = self.stream.read_bytes((self._parent.dummy_size * 2))?;
174 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_same_name::NestedSameName`
  --> src/nested_same_name.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `mainData`, `dummy`

error[E0609]: no field `stream` on type `&mut nested_same_name::NestedSameName`
  --> src/nested_same_name.rs:38:65
   |
38 |         self.mainData = Box::new(NestedSameName__Main::new(self.stream, self, _root)?);
   |                                                                 ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent_switch.rs:41:85
   |
41 |                 self.content = Box::new(NavParentSwitch__Element1::new(self.stream, self, _root)?);
   |                                                                                     ^^^^ expected enum `std::option::Option`, found struct `nav_parent_switch::NavParentSwitch`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent_switch::NavParentSwitch`

error[E0308]: mismatched types
  --> src/nav_parent_switch.rs:40:18
   |
40 |               1 => {
   |  __________________^
41 | |                 self.content = Box::new(NavParentSwitch__Element1::new(self.stream, self, _root)?);
42 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nav_parent_switch::NavParentSwitch__Element1`
  --> src/nav_parent_switch.rs:63:11
   |
63 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `foo`, `subelement`

error[E0609]: no field `stream` on type `&mut nav_parent_switch::NavParentSwitch__Element1`
  --> src/nav_parent_switch.rs:76:25
   |
76 |         self.foo = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent_switch::NavParentSwitch__Element1`
  --> src/nav_parent_switch.rs:77:75
   |
77 |         self.subelement = Box::new(NavParentSwitch__Subelement1::new(self.stream, self, _root)?);
   |                                                                           ^^^^^^

error[E0308]: mismatched types
  --> src/nested_same_name.rs:38:73
   |
38 |         self.mainData = Box::new(NestedSameName__Main::new(self.stream, self, _root)?);
   |                                                                         ^^^^ expected enum `std::option::Option`, found struct `nested_same_name::NestedSameName`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_same_name::NestedSameName`

error[E0609]: no field `stream` on type `&mut nested_same_name::NestedSameName`
  --> src/nested_same_name.rs:39:66
   |
39 |         self.dummy = Box::new(NestedSameName__DummyObj::new(self.stream, self, _root)?);
   |                                                                  ^^^^^^

error[E0308]: mismatched types
  --> src/nested_same_name.rs:39:74
   |
39 |         self.dummy = Box::new(NestedSameName__DummyObj::new(self.stream, self, _root)?);
   |                                                                          ^^^^ expected enum `std::option::Option`, found struct `nested_same_name::NestedSameName`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_same_name::NestedSameName`

error[E0308]: mismatched types
  --> src/nested_same_name.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.mainData = Box::new(NestedSameName__Main::new(self.stream, self, _root)?);
39 | |         self.dummy = Box::new(NestedSameName__DummyObj::new(self.stream, self, _root)?);
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nested_same_name::NestedSameName__Main`
  --> src/nested_same_name.rs:59:11
   |
59 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `mainSize`, `foo`

error[E0609]: no field `stream` on type `&mut nested_same_name::NestedSameName__Main`
  --> src/nested_same_name.rs:72:30
   |
72 |         self.mainSize = self.stream.read_s4le()?;
   |                              ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent_switch.rs:77:83
   |
77 |         self.subelement = Box::new(NavParentSwitch__Subelement1::new(self.stream, self, _root)?);
   |                                                                                   ^^^^ expected enum `std::option::Option`, found struct `nav_parent_switch::NavParentSwitch__Element1`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent_switch::NavParentSwitch__Element1`

error[E0609]: no field `stream` on type `&mut nested_same_name::NestedSameName__Main`
  --> src/nested_same_name.rs:73:68
   |
73 |         self.foo = Box::new(NestedSameName__Main__FooObj::new(self.stream, self, _root)?);
   |                                                                    ^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent_switch.rs:75:27
   |
75 |           where Self: Sized {
   |  ___________________________^
76 | |         self.foo = self.stream.read_u1()?;
77 | |         self.subelement = Box::new(NavParentSwitch__Subelement1::new(self.stream, self, _root)?);
78 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nav_parent_switch::NavParentSwitch__Subelement1`
  --> src/nav_parent_switch.rs:96:11
   |
96 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `bar`

error[E0609]: no field `_parent` on type `&mut nav_parent_switch::NavParentSwitch__Subelement1`
   --> src/nav_parent_switch.rs:109:17
    |
109 |         if self._parent.foo == 66 {
    |                 ^^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent_switch::NavParentSwitch__Subelement1`
   --> src/nav_parent_switch.rs:110:29
    |
110 |             self.bar = self.stream.read_u1()?;
    |                             ^^^^^^

error[E0308]: mismatched types
   --> src/nav_parent_switch.rs:109:35
    |
109 |           if self._parent.foo == 66 {
    |  ___________________________________^
110 | |             self.bar = self.stream.read_u1()?;
111 | |         }
    | |_________^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nav_parent_vs_value_inst::NavParentVsValueInst`
  --> src/nav_parent_vs_value_inst.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `s1`, `child`

warning: unreachable expression
  --> src/nav_parent_vs_value_inst.rs:38:9
   |
38 |         self.s1 = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut nav_parent_vs_value_inst::NavParentVsValueInst`
  --> src/nav_parent_vs_value_inst.rs:39:72
   |
39 |         self.child = Box::new(NavParentVsValueInst__ChildObj::new(self.stream, self, _root)?);
   |                                                                        ^^^^^^

error[E0308]: mismatched types
  --> src/nested_same_name.rs:73:76
   |
73 |         self.foo = Box::new(NestedSameName__Main__FooObj::new(self.stream, self, _root)?);
   |                                                                            ^^^^ expected enum `std::option::Option`, found struct `nested_same_name::NestedSameName__Main`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_same_name::NestedSameName__Main`

error[E0308]: mismatched types
  --> src/nested_same_name.rs:71:27
   |
71 |           where Self: Sized {
   |  ___________________________^
72 | |         self.mainSize = self.stream.read_s4le()?;
73 | |         self.foo = Box::new(NestedSameName__Main__FooObj::new(self.stream, self, _root)?);
74 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nested_same_name::NestedSameName__Main__FooObj`
  --> src/nested_same_name.rs:92:11
   |
92 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `data`

error[E0609]: no field `stream` on type `&mut nested_same_name::NestedSameName__Main__FooObj`
   --> src/nested_same_name.rs:105:26
    |
105 |         self.data = self.stream.read_bytes((self._parent.main_size * 2))?;
    |                          ^^^^^^

error[E0609]: no field `_parent` on type `&mut nested_same_name::NestedSameName__Main__FooObj`
   --> src/nested_same_name.rs:105:50
    |
105 |         self.data = self.stream.read_bytes((self._parent.main_size * 2))?;
    |                                                  ^^^^^^^

error[E0308]: mismatched types
   --> src/nested_same_name.rs:104:27
    |
104 |           where Self: Sized {
    |  ___________________________^
105 | |         self.data = self.stream.read_bytes((self._parent.main_size * 2))?;
106 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_same_name::NestedSameName__DummyObj`
   --> src/nested_same_name.rs:123:11
    |
123 |         s.stream = stream;
    |           ^^^^^^ unknown field

error[E0308]: mismatched types
   --> src/nested_same_name.rs:135:27
    |
135 |           where Self: Sized {
    |  ___________________________^
136 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_same_name::NestedSameName__DummyObj__Foo`
   --> src/nested_same_name.rs:153:11
    |
153 |         s.stream = stream;
    |           ^^^^^^ unknown field

error[E0308]: mismatched types
   --> src/nested_same_name.rs:165:27
    |
165 |           where Self: Sized {
    |  ___________________________^
166 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_types2::NestedTypes2`
  --> src/nested_types2.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`

error[E0308]: mismatched types
  --> src/nav_parent_vs_value_inst.rs:39:80
   |
39 |         self.child = Box::new(NavParentVsValueInst__ChildObj::new(self.stream, self, _root)?);
   |                                                                                ^^^^ expected enum `std::option::Option`, found struct `nav_parent_vs_value_inst::NavParentVsValueInst`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_parent_vs_value_inst::NavParentVsValueInst`

error[E0609]: no field `stream` on type `&mut nested_types2::NestedTypes2`
  --> src/nested_types2.rs:38:62
   |
38 |         self.one = Box::new(NestedTypes2__SubtypeA::new(self.stream, self, _root)?);
   |                                                              ^^^^^^

error[E0609]: no field `stream` on type `nav_parent_vs_value_inst::NavParentVsValueInst__ChildObj`
  --> src/nav_parent_vs_value_inst.rs:58:11
   |
58 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `doSomething`

error[E0308]: mismatched types
  --> src/nav_parent_vs_value_inst.rs:70:27
   |
70 |           where Self: Sized {
   |  ___________________________^
71 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `_parent` on type `&mut nav_parent_vs_value_inst::NavParentVsValueInst__ChildObj`
  --> src/nav_parent_vs_value_inst.rs:80:36
   |
80 |         self.doSomething = if self._parent.s1 == "foo" { true } else { false};
   |                                    ^^^^^^^

error[E0308]: mismatched types
  --> src/nav_parent_vs_value_inst.rs:80:58
   |
80 |         self.doSomething = if self._parent.s1 == "foo" { true } else { false};
   |                                                          ^^^^ expected enum `std::option::Option`, found bool
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/nav_parent_vs_value_inst.rs:80:72
   |
80 |         self.doSomething = if self._parent.s1 == "foo" { true } else { false};
   |                                                                        ^^^^^ expected enum `std::option::Option`, found bool
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/nav_parent_vs_value_inst.rs:81:16
   |
81 |         return self.doSomething;
   |                ^^^^^^^^^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0609]: no field `stream` on type `nav_root::NavRoot`
  --> src/nav_root.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `header`, `index`

error[E0609]: no field `stream` on type `&mut nav_root::NavRoot`
  --> src/nav_root.rs:39:61
   |
39 |         self.header = Box::new(NavRoot__HeaderObj::new(self.stream, self, _root)?);
   |                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/nested_types2.rs:38:70
   |
38 |         self.one = Box::new(NestedTypes2__SubtypeA::new(self.stream, self, _root)?);
   |                                                                      ^^^^ expected enum `std::option::Option`, found struct `nested_types2::NestedTypes2`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_types2::NestedTypes2`

error[E0609]: no field `stream` on type `&mut nested_types2::NestedTypes2`
  --> src/nested_types2.rs:39:62
   |
39 |         self.two = Box::new(NestedTypes2__SubtypeB::new(self.stream, self, _root)?);
   |                                                              ^^^^^^

error[E0308]: mismatched types
  --> src/nav_root.rs:39:69
   |
39 |         self.header = Box::new(NavRoot__HeaderObj::new(self.stream, self, _root)?);
   |                                                                     ^^^^ expected enum `std::option::Option`, found struct `nav_root::NavRoot`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_root::NavRoot`

error[E0609]: no field `stream` on type `&mut nav_root::NavRoot`
  --> src/nav_root.rs:40:59
   |
40 |         self.index = Box::new(NavRoot__IndexObj::new(self.stream, self, _root)?);
   |                                                           ^^^^^^

error[E0308]: mismatched types
  --> src/nested_types2.rs:39:70
   |
39 |         self.two = Box::new(NestedTypes2__SubtypeB::new(self.stream, self, _root)?);
   |                                                                      ^^^^ expected enum `std::option::Option`, found struct `nested_types2::NestedTypes2`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_types2::NestedTypes2`

error[E0308]: mismatched types
  --> src/nested_types2.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.one = Box::new(NestedTypes2__SubtypeA::new(self.stream, self, _root)?);
39 | |         self.two = Box::new(NestedTypes2__SubtypeB::new(self.stream, self, _root)?);
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nested_types2::NestedTypes2__SubtypeA`
  --> src/nested_types2.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `typedAtRoot`, `typedHere1`, `typedHere2`

error[E0609]: no field `stream` on type `&mut nested_types2::NestedTypes2__SubtypeA`
  --> src/nested_types2.rs:73:70
   |
73 |         self.typedAtRoot = Box::new(NestedTypes2__SubtypeB::new(self.stream, self, _root)?);
   |                                                                      ^^^^^^

error[E0308]: mismatched types
  --> src/nav_root.rs:40:67
   |
40 |         self.index = Box::new(NavRoot__IndexObj::new(self.stream, self, _root)?);
   |                                                                   ^^^^ expected enum `std::option::Option`, found struct `nav_root::NavRoot`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nav_root::NavRoot`

error[E0308]: mismatched types
  --> src/nav_root.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.header = Box::new(NavRoot__HeaderObj::new(self.stream, self, _root)?);
40 | |         self.index = Box::new(NavRoot__IndexObj::new(self.stream, self, _root)?);
41 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nav_root::NavRoot__HeaderObj`
  --> src/nav_root.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `qtyEntries`, `filenameLen`

error[E0609]: no field `stream` on type `&mut nav_root::NavRoot__HeaderObj`
  --> src/nav_root.rs:73:32
   |
73 |         self.qtyEntries = self.stream.read_u4le()?;
   |                                ^^^^^^

error[E0609]: no field `stream` on type `&mut nav_root::NavRoot__HeaderObj`
  --> src/nav_root.rs:74:33
   |
74 |         self.filenameLen = self.stream.read_u4le()?;
   |                                 ^^^^^^

error[E0308]: mismatched types
  --> src/nav_root.rs:72:27
   |
72 |           where Self: Sized {
   |  ___________________________^
73 | |         self.qtyEntries = self.stream.read_u4le()?;
74 | |         self.filenameLen = self.stream.read_u4le()?;
75 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nav_root::NavRoot__IndexObj`
  --> src/nav_root.rs:94:11
   |
94 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `magic`, `entries`

error[E0609]: no field `stream` on type `&mut nav_root::NavRoot__IndexObj`
   --> src/nav_root.rs:107:27
    |
107 |         self.magic = self.stream.read_bytes(4)?;
    |                           ^^^^^^

error[E0609]: no field `_root` on type `&mut nav_root::NavRoot__IndexObj`
   --> src/nav_root.rs:109:26
    |
109 |         for i in 0..self._root.header.qty_entries {
    |                          ^^^^^

error[E0609]: no field `stream` on type `&mut nav_root::NavRoot__IndexObj`
   --> src/nav_root.rs:110:65
    |
110 |             self.entries.push(Box::new(NavRoot__Entry::new(self.stream, self, _root)?));
    |                                                                 ^^^^^^

error[E0308]: mismatched types
  --> src/nested_types2.rs:73:78
   |
73 |         self.typedAtRoot = Box::new(NestedTypes2__SubtypeB::new(self.stream, self, _root)?);
   |                                                                              ^^^^ expected enum `std::option::Option`, found struct `nested_types2::NestedTypes2__SubtypeA`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_types2::NestedTypes2__SubtypeA`

error[E0609]: no field `stream` on type `&mut nested_types2::NestedTypes2__SubtypeA`
  --> src/nested_types2.rs:74:79
   |
74 |         self.typedHere1 = Box::new(NestedTypes2__SubtypeA__SubtypeC::new(self.stream, self, _root)?);
   |                                                                               ^^^^^^

error[E0308]: mismatched types
   --> src/nav_root.rs:110:73
    |
110 |             self.entries.push(Box::new(NavRoot__Entry::new(self.stream, self, _root)?));
    |                                                                         ^^^^ expected enum `std::option::Option`, found struct `nav_root::NavRoot__IndexObj`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut nav_root::NavRoot__IndexObj`

error[E0308]: mismatched types
   --> src/nav_root.rs:109:9
    |
105 |                                -> Result<()>
    |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
109 | /         for i in 0..self._root.header.qty_entries {
110 | |             self.entries.push(Box::new(NavRoot__Entry::new(self.stream, self, _root)?));
111 | |         }
    | |_________^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nav_root::NavRoot__Entry`
   --> src/nav_root.rs:130:11
    |
130 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `filename`

warning: unreachable expression
   --> src/nav_root.rs:143:9
    |
143 |         self.filename = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `nested_same_name2::NestedSameName2`
  --> src/nested_same_name2.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `version`, `mainData`, `dummy`

error[E0609]: no field `stream` on type `&mut nested_same_name2::NestedSameName2`
  --> src/nested_same_name2.rs:39:29
   |
39 |         self.version = self.stream.read_u4le()?;
   |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut nested_same_name2::NestedSameName2`
  --> src/nested_same_name2.rs:40:66
   |
40 |         self.mainData = Box::new(NestedSameName2__Main::new(self.stream, self, _root)?);
   |                                                                  ^^^^^^

error[E0308]: mismatched types
  --> src/nested_types2.rs:74:87
   |
74 |         self.typedHere1 = Box::new(NestedTypes2__SubtypeA__SubtypeC::new(self.stream, self, _root)?);
   |                                                                                       ^^^^ expected enum `std::option::Option`, found struct `nested_types2::NestedTypes2__SubtypeA`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_types2::NestedTypes2__SubtypeA`

error[E0609]: no field `stream` on type `&mut nested_types2::NestedTypes2__SubtypeA`
  --> src/nested_types2.rs:75:80
   |
75 |         self.typedHere2 = Box::new(NestedTypes2__SubtypeA__SubtypeCc::new(self.stream, self, _root)?);
   |                                                                                ^^^^^^

error[E0308]: mismatched types
  --> src/nested_same_name2.rs:40:74
   |
40 |         self.mainData = Box::new(NestedSameName2__Main::new(self.stream, self, _root)?);
   |                                                                          ^^^^ expected enum `std::option::Option`, found struct `nested_same_name2::NestedSameName2`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_same_name2::NestedSameName2`

error[E0308]: mismatched types
  --> src/nested_types2.rs:75:88
   |
75 |         self.typedHere2 = Box::new(NestedTypes2__SubtypeA__SubtypeCc::new(self.stream, self, _root)?);
   |                                                                                        ^^^^ expected enum `std::option::Option`, found struct `nested_types2::NestedTypes2__SubtypeA`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_types2::NestedTypes2__SubtypeA`

error[E0308]: mismatched types
  --> src/nested_types2.rs:72:27
   |
72 |           where Self: Sized {
   |  ___________________________^
73 | |         self.typedAtRoot = Box::new(NestedTypes2__SubtypeB::new(self.stream, self, _root)?);
74 | |         self.typedHere1 = Box::new(NestedTypes2__SubtypeA__SubtypeC::new(self.stream, self, _root)?);
75 | |         self.typedHere2 = Box::new(NestedTypes2__SubtypeA__SubtypeCc::new(self.stream, self, _root)?);
76 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut nested_same_name2::NestedSameName2`
  --> src/nested_same_name2.rs:41:67
   |
41 |         self.dummy = Box::new(NestedSameName2__DummyObj::new(self.stream, self, _root)?);
   |                                                                   ^^^^^^

error[E0609]: no field `stream` on type `nested_types2::NestedTypes2__SubtypeA__SubtypeC`
  --> src/nested_types2.rs:97:11
   |
97 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `valueC`, `typedHere`, `typedParent`, `typedRoot`

error[E0609]: no field `stream` on type `&mut nested_types2::NestedTypes2__SubtypeA__SubtypeC`
   --> src/nested_types2.rs:110:28
    |
110 |         self.valueC = self.stream.read_s1()?;
    |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut nested_types2::NestedTypes2__SubtypeA__SubtypeC`
   --> src/nested_types2.rs:111:88
    |
111 |         self.typedHere = Box::new(NestedTypes2__SubtypeA__SubtypeC__SubtypeD::new(self.stream, self, _root)?);
    |                                                                                        ^^^^^^

error[E0308]: mismatched types
  --> src/nested_same_name2.rs:41:75
   |
41 |         self.dummy = Box::new(NestedSameName2__DummyObj::new(self.stream, self, _root)?);
   |                                                                           ^^^^ expected enum `std::option::Option`, found struct `nested_same_name2::NestedSameName2`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_same_name2::NestedSameName2`

error[E0308]: mismatched types
  --> src/nested_same_name2.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.version = self.stream.read_u4le()?;
40 | |         self.mainData = Box::new(NestedSameName2__Main::new(self.stream, self, _root)?);
41 | |         self.dummy = Box::new(NestedSameName2__DummyObj::new(self.stream, self, _root)?);
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nested_same_name2::NestedSameName2__Main`
  --> src/nested_same_name2.rs:61:11
   |
61 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `mainSize`, `foo`

error[E0609]: no field `stream` on type `&mut nested_same_name2::NestedSameName2__Main`
  --> src/nested_same_name2.rs:74:30
   |
74 |         self.mainSize = self.stream.read_s4le()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut nested_same_name2::NestedSameName2__Main`
  --> src/nested_same_name2.rs:75:69
   |
75 |         self.foo = Box::new(NestedSameName2__Main__FooObj::new(self.stream, self, _root)?);
   |                                                                     ^^^^^^

error[E0308]: mismatched types
   --> src/nested_types2.rs:111:96
    |
111 |         self.typedHere = Box::new(NestedTypes2__SubtypeA__SubtypeC__SubtypeD::new(self.stream, self, _root)?);
    |                                                                                                ^^^^ expected enum `std::option::Option`, found struct `nested_types2::NestedTypes2__SubtypeA__SubtypeC`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut nested_types2::NestedTypes2__SubtypeA__SubtypeC`

error[E0609]: no field `stream` on type `&mut nested_types2::NestedTypes2__SubtypeA__SubtypeC`
   --> src/nested_types2.rs:112:81
    |
112 |         self.typedParent = Box::new(NestedTypes2__SubtypeA__SubtypeCc::new(self.stream, self, _root)?);
    |                                                                                 ^^^^^^

error[E0308]: mismatched types
   --> src/nested_types2.rs:112:89
    |
112 |         self.typedParent = Box::new(NestedTypes2__SubtypeA__SubtypeCc::new(self.stream, self, _root)?);
    |                                                                                         ^^^^ expected enum `std::option::Option`, found struct `nested_types2::NestedTypes2__SubtypeA__SubtypeC`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut nested_types2::NestedTypes2__SubtypeA__SubtypeC`

error[E0609]: no field `stream` on type `&mut nested_types2::NestedTypes2__SubtypeA__SubtypeC`
   --> src/nested_types2.rs:113:68
    |
113 |         self.typedRoot = Box::new(NestedTypes2__SubtypeB::new(self.stream, self, _root)?);
    |                                                                    ^^^^^^

error[E0308]: mismatched types
  --> src/nested_same_name2.rs:75:77
   |
75 |         self.foo = Box::new(NestedSameName2__Main__FooObj::new(self.stream, self, _root)?);
   |                                                                             ^^^^ expected enum `std::option::Option`, found struct `nested_same_name2::NestedSameName2__Main`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_same_name2::NestedSameName2__Main`

error[E0308]: mismatched types
  --> src/nested_same_name2.rs:73:27
   |
73 |           where Self: Sized {
   |  ___________________________^
74 | |         self.mainSize = self.stream.read_s4le()?;
75 | |         self.foo = Box::new(NestedSameName2__Main__FooObj::new(self.stream, self, _root)?);
76 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nested_same_name2::NestedSameName2__Main__FooObj`
  --> src/nested_same_name2.rs:94:11
   |
94 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `data1`

error[E0609]: no field `stream` on type `&mut nested_same_name2::NestedSameName2__Main__FooObj`
   --> src/nested_same_name2.rs:107:27
    |
107 |         self.data1 = self.stream.read_bytes((self._parent.main_size * 2))?;
    |                           ^^^^^^

error[E0609]: no field `_parent` on type `&mut nested_same_name2::NestedSameName2__Main__FooObj`
   --> src/nested_same_name2.rs:107:51
    |
107 |         self.data1 = self.stream.read_bytes((self._parent.main_size * 2))?;
    |                                                   ^^^^^^^

error[E0308]: mismatched types
   --> src/nested_same_name2.rs:106:27
    |
106 |           where Self: Sized {
    |  ___________________________^
107 | |         self.data1 = self.stream.read_bytes((self._parent.main_size * 2))?;
108 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_same_name2::NestedSameName2__DummyObj`
   --> src/nested_same_name2.rs:127:11
    |
127 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `dummySize`, `foo`

error[E0609]: no field `stream` on type `&mut nested_same_name2::NestedSameName2__DummyObj`
   --> src/nested_same_name2.rs:140:31
    |
140 |         self.dummySize = self.stream.read_s4le()?;
    |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut nested_same_name2::NestedSameName2__DummyObj`
   --> src/nested_same_name2.rs:141:73
    |
141 |         self.foo = Box::new(NestedSameName2__DummyObj__FooObj::new(self.stream, self, _root)?);
    |                                                                         ^^^^^^

error[E0308]: mismatched types
   --> src/nested_types2.rs:113:76
    |
113 |         self.typedRoot = Box::new(NestedTypes2__SubtypeB::new(self.stream, self, _root)?);
    |                                                                            ^^^^ expected enum `std::option::Option`, found struct `nested_types2::NestedTypes2__SubtypeA__SubtypeC`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut nested_types2::NestedTypes2__SubtypeA__SubtypeC`

error[E0308]: mismatched types
   --> src/nested_types2.rs:109:27
    |
109 |           where Self: Sized {
    |  ___________________________^
110 | |         self.valueC = self.stream.read_s1()?;
111 | |         self.typedHere = Box::new(NestedTypes2__SubtypeA__SubtypeC__SubtypeD::new(self.stream, self, _root)?);
112 | |         self.typedParent = Box::new(NestedTypes2__SubtypeA__SubtypeCc::new(self.stream, self, _root)?);
113 | |         self.typedRoot = Box::new(NestedTypes2__SubtypeB::new(self.stream, self, _root)?);
114 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_types2::NestedTypes2__SubtypeA__SubtypeC__SubtypeD`
   --> src/nested_types2.rs:132:11
    |
132 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `valueD`

error[E0609]: no field `stream` on type `&mut nested_types2::NestedTypes2__SubtypeA__SubtypeC__SubtypeD`
   --> src/nested_types2.rs:145:28
    |
145 |         self.valueD = self.stream.read_s1()?;
    |                            ^^^^^^

error[E0308]: mismatched types
   --> src/nested_types2.rs:144:27
    |
144 |           where Self: Sized {
    |  ___________________________^
145 | |         self.valueD = self.stream.read_s1()?;
146 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_types2::NestedTypes2__SubtypeA__SubtypeCc`
   --> src/nested_types2.rs:164:11
    |
164 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `valueCc`

error[E0609]: no field `stream` on type `&mut nested_types2::NestedTypes2__SubtypeA__SubtypeCc`
   --> src/nested_types2.rs:177:29
    |
177 |         self.valueCc = self.stream.read_s1()?;
    |                             ^^^^^^

error[E0308]: mismatched types
   --> src/nested_types2.rs:176:27
    |
176 |           where Self: Sized {
    |  ___________________________^
177 | |         self.valueCc = self.stream.read_s1()?;
178 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_types2::NestedTypes2__SubtypeB`
   --> src/nested_types2.rs:196:11
    |
196 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `valueB`

error[E0609]: no field `stream` on type `&mut nested_types2::NestedTypes2__SubtypeB`
   --> src/nested_types2.rs:209:28
    |
209 |         self.valueB = self.stream.read_s1()?;
    |                            ^^^^^^

error[E0308]: mismatched types
   --> src/nested_types2.rs:208:27
    |
208 |           where Self: Sized {
    |  ___________________________^
209 | |         self.valueB = self.stream.read_s1()?;
210 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_types3::NestedTypes3`
  --> src/nested_types3.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `aCc`, `aCD`, `b`

error[E0609]: no field `stream` on type `&mut nested_types3::NestedTypes3`
  --> src/nested_types3.rs:39:73
   |
39 |         self.aCc = Box::new(NestedTypes3__SubtypeA__SubtypeCc::new(self.stream, self, _root)?);
   |                                                                         ^^^^^^

error[E0308]: mismatched types
   --> src/nested_same_name2.rs:141:81
    |
141 |         self.foo = Box::new(NestedSameName2__DummyObj__FooObj::new(self.stream, self, _root)?);
    |                                                                                 ^^^^ expected enum `std::option::Option`, found struct `nested_same_name2::NestedSameName2__DummyObj`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut nested_same_name2::NestedSameName2__DummyObj`

error[E0308]: mismatched types
   --> src/nested_same_name2.rs:139:27
    |
139 |           where Self: Sized {
    |  ___________________________^
140 | |         self.dummySize = self.stream.read_s4le()?;
141 | |         self.foo = Box::new(NestedSameName2__DummyObj__FooObj::new(self.stream, self, _root)?);
142 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_same_name2::NestedSameName2__DummyObj__FooObj`
   --> src/nested_same_name2.rs:160:11
    |
160 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `data2`

error[E0609]: no field `stream` on type `&mut nested_same_name2::NestedSameName2__DummyObj__FooObj`
   --> src/nested_same_name2.rs:173:27
    |
173 |         self.data2 = self.stream.read_bytes((self._parent.dummy_size * 2))?;
    |                           ^^^^^^

error[E0609]: no field `_parent` on type `&mut nested_same_name2::NestedSameName2__DummyObj__FooObj`
   --> src/nested_same_name2.rs:173:51
    |
173 |         self.data2 = self.stream.read_bytes((self._parent.dummy_size * 2))?;
    |                                                   ^^^^^^^

error[E0308]: mismatched types
   --> src/nested_same_name2.rs:172:27
    |
172 |           where Self: Sized {
    |  ___________________________^
173 | |         self.data2 = self.stream.read_bytes((self._parent.dummy_size * 2))?;
174 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_same_name::NestedSameName`
  --> src/nested_same_name.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `mainData`, `dummy`

error[E0609]: no field `stream` on type `&mut nested_same_name::NestedSameName`
  --> src/nested_same_name.rs:38:65
   |
38 |         self.mainData = Box::new(NestedSameName__Main::new(self.stream, self, _root)?);
   |                                                                 ^^^^^^

error[E0308]: mismatched types
  --> src/nested_types3.rs:39:81
   |
39 |         self.aCc = Box::new(NestedTypes3__SubtypeA__SubtypeCc::new(self.stream, self, _root)?);
   |                                                                                 ^^^^ expected enum `std::option::Option`, found struct `nested_types3::NestedTypes3`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_types3::NestedTypes3`

error[E0609]: no field `stream` on type `&mut nested_types3::NestedTypes3`
  --> src/nested_types3.rs:40:82
   |
40 |         self.aCD = Box::new(NestedTypes3__SubtypeA__SubtypeC__SubtypeD::new(self.stream, self, _root)?);
   |                                                                                  ^^^^^^

error[E0308]: mismatched types
  --> src/nested_same_name.rs:38:73
   |
38 |         self.mainData = Box::new(NestedSameName__Main::new(self.stream, self, _root)?);
   |                                                                         ^^^^ expected enum `std::option::Option`, found struct `nested_same_name::NestedSameName`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_same_name::NestedSameName`

error[E0609]: no field `stream` on type `&mut nested_same_name::NestedSameName`
  --> src/nested_same_name.rs:39:66
   |
39 |         self.dummy = Box::new(NestedSameName__DummyObj::new(self.stream, self, _root)?);
   |                                                                  ^^^^^^

error[E0308]: mismatched types
  --> src/nested_types3.rs:40:90
   |
40 |         self.aCD = Box::new(NestedTypes3__SubtypeA__SubtypeC__SubtypeD::new(self.stream, self, _root)?);
   |                                                                                          ^^^^ expected enum `std::option::Option`, found struct `nested_types3::NestedTypes3`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_types3::NestedTypes3`

error[E0609]: no field `stream` on type `&mut nested_types3::NestedTypes3`
  --> src/nested_types3.rs:41:60
   |
41 |         self.b = Box::new(NestedTypes3__SubtypeB::new(self.stream, self, _root)?);
   |                                                            ^^^^^^

error[E0308]: mismatched types
  --> src/nested_same_name.rs:39:74
   |
39 |         self.dummy = Box::new(NestedSameName__DummyObj::new(self.stream, self, _root)?);
   |                                                                          ^^^^ expected enum `std::option::Option`, found struct `nested_same_name::NestedSameName`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_same_name::NestedSameName`

error[E0308]: mismatched types
  --> src/nested_same_name.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.mainData = Box::new(NestedSameName__Main::new(self.stream, self, _root)?);
39 | |         self.dummy = Box::new(NestedSameName__DummyObj::new(self.stream, self, _root)?);
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nested_same_name::NestedSameName__Main`
  --> src/nested_same_name.rs:59:11
   |
59 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `mainSize`, `foo`

error[E0609]: no field `stream` on type `&mut nested_same_name::NestedSameName__Main`
  --> src/nested_same_name.rs:72:30
   |
72 |         self.mainSize = self.stream.read_s4le()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut nested_same_name::NestedSameName__Main`
  --> src/nested_same_name.rs:73:68
   |
73 |         self.foo = Box::new(NestedSameName__Main__FooObj::new(self.stream, self, _root)?);
   |                                                                    ^^^^^^

error[E0308]: mismatched types
  --> src/nested_types3.rs:41:68
   |
41 |         self.b = Box::new(NestedTypes3__SubtypeB::new(self.stream, self, _root)?);
   |                                                                    ^^^^ expected enum `std::option::Option`, found struct `nested_types3::NestedTypes3`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_types3::NestedTypes3`

error[E0308]: mismatched types
  --> src/nested_types3.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.aCc = Box::new(NestedTypes3__SubtypeA__SubtypeCc::new(self.stream, self, _root)?);
40 | |         self.aCD = Box::new(NestedTypes3__SubtypeA__SubtypeC__SubtypeD::new(self.stream, self, _root)?);
41 | |         self.b = Box::new(NestedTypes3__SubtypeB::new(self.stream, self, _root)?);
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nested_types3::NestedTypes3__SubtypeA`
  --> src/nested_types3.rs:59:11
   |
59 |         s.stream = stream;
   |           ^^^^^^ unknown field

error[E0308]: mismatched types
  --> src/nested_types3.rs:71:27
   |
71 |           where Self: Sized {
   |  ___________________________^
72 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nested_types3::NestedTypes3__SubtypeA__SubtypeC`
  --> src/nested_types3.rs:89:11
   |
89 |         s.stream = stream;
   |           ^^^^^^ unknown field

error[E0308]: mismatched types
   --> src/nested_types3.rs:101:27
    |
101 |           where Self: Sized {
    |  ___________________________^
102 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_types3::NestedTypes3__SubtypeA__SubtypeC__SubtypeD`
   --> src/nested_types3.rs:120:11
    |
120 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `valueD`

error[E0609]: no field `stream` on type `&mut nested_types3::NestedTypes3__SubtypeA__SubtypeC__SubtypeD`
   --> src/nested_types3.rs:133:28
    |
133 |         self.valueD = self.stream.read_s1()?;
    |                            ^^^^^^

error[E0308]: mismatched types
   --> src/nested_types3.rs:132:27
    |
132 |           where Self: Sized {
    |  ___________________________^
133 | |         self.valueD = self.stream.read_s1()?;
134 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_types3::NestedTypes3__SubtypeA__SubtypeCc`
   --> src/nested_types3.rs:152:11
    |
152 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `valueCc`

error[E0609]: no field `stream` on type `&mut nested_types3::NestedTypes3__SubtypeA__SubtypeCc`
   --> src/nested_types3.rs:165:29
    |
165 |         self.valueCc = self.stream.read_s1()?;
    |                             ^^^^^^

error[E0308]: mismatched types
   --> src/nested_types3.rs:164:27
    |
164 |           where Self: Sized {
    |  ___________________________^
165 | |         self.valueCc = self.stream.read_s1()?;
166 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_types3::NestedTypes3__SubtypeB`
   --> src/nested_types3.rs:186:11
    |
186 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `valueB`, `aCc`, `aCD`

error[E0609]: no field `stream` on type `&mut nested_types3::NestedTypes3__SubtypeB`
   --> src/nested_types3.rs:199:28
    |
199 |         self.valueB = self.stream.read_s1()?;
    |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut nested_types3::NestedTypes3__SubtypeB`
   --> src/nested_types3.rs:200:73
    |
200 |         self.aCc = Box::new(NestedTypes3__SubtypeA__SubtypeCc::new(self.stream, self, _root)?);
    |                                                                         ^^^^^^

error[E0308]: mismatched types
  --> src/nested_same_name.rs:73:76
   |
73 |         self.foo = Box::new(NestedSameName__Main__FooObj::new(self.stream, self, _root)?);
   |                                                                            ^^^^ expected enum `std::option::Option`, found struct `nested_same_name::NestedSameName__Main`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_same_name::NestedSameName__Main`

error[E0308]: mismatched types
  --> src/nested_same_name.rs:71:27
   |
71 |           where Self: Sized {
   |  ___________________________^
72 | |         self.mainSize = self.stream.read_s4le()?;
73 | |         self.foo = Box::new(NestedSameName__Main__FooObj::new(self.stream, self, _root)?);
74 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nested_same_name::NestedSameName__Main__FooObj`
  --> src/nested_same_name.rs:92:11
   |
92 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `data`

error[E0609]: no field `stream` on type `&mut nested_same_name::NestedSameName__Main__FooObj`
   --> src/nested_same_name.rs:105:26
    |
105 |         self.data = self.stream.read_bytes((self._parent.main_size * 2))?;
    |                          ^^^^^^

error[E0609]: no field `_parent` on type `&mut nested_same_name::NestedSameName__Main__FooObj`
   --> src/nested_same_name.rs:105:50
    |
105 |         self.data = self.stream.read_bytes((self._parent.main_size * 2))?;
    |                                                  ^^^^^^^

error[E0308]: mismatched types
   --> src/nested_same_name.rs:104:27
    |
104 |           where Self: Sized {
    |  ___________________________^
105 | |         self.data = self.stream.read_bytes((self._parent.main_size * 2))?;
106 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_same_name::NestedSameName__DummyObj`
   --> src/nested_same_name.rs:123:11
    |
123 |         s.stream = stream;
    |           ^^^^^^ unknown field

error[E0308]: mismatched types
   --> src/nested_same_name.rs:135:27
    |
135 |           where Self: Sized {
    |  ___________________________^
136 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_same_name::NestedSameName__DummyObj__Foo`
   --> src/nested_same_name.rs:153:11
    |
153 |         s.stream = stream;
    |           ^^^^^^ unknown field

error[E0308]: mismatched types
   --> src/nested_same_name.rs:165:27
    |
165 |           where Self: Sized {
    |  ___________________________^
166 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_types2::NestedTypes2`
  --> src/nested_types2.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`

error[E0609]: no field `stream` on type `&mut nested_types2::NestedTypes2`
  --> src/nested_types2.rs:38:62
   |
38 |         self.one = Box::new(NestedTypes2__SubtypeA::new(self.stream, self, _root)?);
   |                                                              ^^^^^^

error[E0308]: mismatched types
   --> src/nested_types3.rs:200:81
    |
200 |         self.aCc = Box::new(NestedTypes3__SubtypeA__SubtypeCc::new(self.stream, self, _root)?);
    |                                                                                 ^^^^ expected enum `std::option::Option`, found struct `nested_types3::NestedTypes3__SubtypeB`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut nested_types3::NestedTypes3__SubtypeB`

error[E0609]: no field `stream` on type `&mut nested_types3::NestedTypes3__SubtypeB`
   --> src/nested_types3.rs:201:82
    |
201 |         self.aCD = Box::new(NestedTypes3__SubtypeA__SubtypeC__SubtypeD::new(self.stream, self, _root)?);
    |                                                                                  ^^^^^^

error[E0308]: mismatched types
  --> src/nested_types2.rs:38:70
   |
38 |         self.one = Box::new(NestedTypes2__SubtypeA::new(self.stream, self, _root)?);
   |                                                                      ^^^^ expected enum `std::option::Option`, found struct `nested_types2::NestedTypes2`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_types2::NestedTypes2`

error[E0609]: no field `stream` on type `&mut nested_types2::NestedTypes2`
  --> src/nested_types2.rs:39:62
   |
39 |         self.two = Box::new(NestedTypes2__SubtypeB::new(self.stream, self, _root)?);
   |                                                              ^^^^^^

error[E0308]: mismatched types
   --> src/nested_types3.rs:201:90
    |
201 |         self.aCD = Box::new(NestedTypes3__SubtypeA__SubtypeC__SubtypeD::new(self.stream, self, _root)?);
    |                                                                                          ^^^^ expected enum `std::option::Option`, found struct `nested_types3::NestedTypes3__SubtypeB`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut nested_types3::NestedTypes3__SubtypeB`

error[E0308]: mismatched types
   --> src/nested_types3.rs:198:27
    |
198 |           where Self: Sized {
    |  ___________________________^
199 | |         self.valueB = self.stream.read_s1()?;
200 | |         self.aCc = Box::new(NestedTypes3__SubtypeA__SubtypeCc::new(self.stream, self, _root)?);
201 | |         self.aCD = Box::new(NestedTypes3__SubtypeA__SubtypeC__SubtypeD::new(self.stream, self, _root)?);
202 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_types::NestedTypes`
  --> src/nested_types.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`

error[E0609]: no field `stream` on type `&mut nested_types::NestedTypes`
  --> src/nested_types.rs:38:61
   |
38 |         self.one = Box::new(NestedTypes__SubtypeA::new(self.stream, self, _root)?);
   |                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/nested_types2.rs:39:70
   |
39 |         self.two = Box::new(NestedTypes2__SubtypeB::new(self.stream, self, _root)?);
   |                                                                      ^^^^ expected enum `std::option::Option`, found struct `nested_types2::NestedTypes2`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_types2::NestedTypes2`

error[E0308]: mismatched types
  --> src/nested_types2.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.one = Box::new(NestedTypes2__SubtypeA::new(self.stream, self, _root)?);
39 | |         self.two = Box::new(NestedTypes2__SubtypeB::new(self.stream, self, _root)?);
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nested_types2::NestedTypes2__SubtypeA`
  --> src/nested_types2.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `typedAtRoot`, `typedHere1`, `typedHere2`

error[E0609]: no field `stream` on type `&mut nested_types2::NestedTypes2__SubtypeA`
  --> src/nested_types2.rs:73:70
   |
73 |         self.typedAtRoot = Box::new(NestedTypes2__SubtypeB::new(self.stream, self, _root)?);
   |                                                                      ^^^^^^

error[E0308]: mismatched types
  --> src/nested_types.rs:38:69
   |
38 |         self.one = Box::new(NestedTypes__SubtypeA::new(self.stream, self, _root)?);
   |                                                                     ^^^^ expected enum `std::option::Option`, found struct `nested_types::NestedTypes`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_types::NestedTypes`

error[E0609]: no field `stream` on type `&mut nested_types::NestedTypes`
  --> src/nested_types.rs:39:61
   |
39 |         self.two = Box::new(NestedTypes__SubtypeB::new(self.stream, self, _root)?);
   |                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/nested_types.rs:39:69
   |
39 |         self.two = Box::new(NestedTypes__SubtypeB::new(self.stream, self, _root)?);
   |                                                                     ^^^^ expected enum `std::option::Option`, found struct `nested_types::NestedTypes`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_types::NestedTypes`

error[E0308]: mismatched types
  --> src/nested_types.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.one = Box::new(NestedTypes__SubtypeA::new(self.stream, self, _root)?);
39 | |         self.two = Box::new(NestedTypes__SubtypeB::new(self.stream, self, _root)?);
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nested_types::NestedTypes__SubtypeA`
  --> src/nested_types.rs:59:11
   |
59 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `typedAtRoot`, `typedHere`

error[E0609]: no field `stream` on type `&mut nested_types::NestedTypes__SubtypeA`
  --> src/nested_types.rs:72:69
   |
72 |         self.typedAtRoot = Box::new(NestedTypes__SubtypeB::new(self.stream, self, _root)?);
   |                                                                     ^^^^^^

error[E0308]: mismatched types
  --> src/nested_types2.rs:73:78
   |
73 |         self.typedAtRoot = Box::new(NestedTypes2__SubtypeB::new(self.stream, self, _root)?);
   |                                                                              ^^^^ expected enum `std::option::Option`, found struct `nested_types2::NestedTypes2__SubtypeA`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_types2::NestedTypes2__SubtypeA`

error[E0609]: no field `stream` on type `&mut nested_types2::NestedTypes2__SubtypeA`
  --> src/nested_types2.rs:74:79
   |
74 |         self.typedHere1 = Box::new(NestedTypes2__SubtypeA__SubtypeC::new(self.stream, self, _root)?);
   |                                                                               ^^^^^^

error[E0308]: mismatched types
  --> src/nested_types.rs:72:77
   |
72 |         self.typedAtRoot = Box::new(NestedTypes__SubtypeB::new(self.stream, self, _root)?);
   |                                                                             ^^^^ expected enum `std::option::Option`, found struct `nested_types::NestedTypes__SubtypeA`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_types::NestedTypes__SubtypeA`

error[E0609]: no field `stream` on type `&mut nested_types::NestedTypes__SubtypeA`
  --> src/nested_types.rs:73:77
   |
73 |         self.typedHere = Box::new(NestedTypes__SubtypeA__SubtypeC::new(self.stream, self, _root)?);
   |                                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/nested_types2.rs:74:87
   |
74 |         self.typedHere1 = Box::new(NestedTypes2__SubtypeA__SubtypeC::new(self.stream, self, _root)?);
   |                                                                                       ^^^^ expected enum `std::option::Option`, found struct `nested_types2::NestedTypes2__SubtypeA`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_types2::NestedTypes2__SubtypeA`

error[E0609]: no field `stream` on type `&mut nested_types2::NestedTypes2__SubtypeA`
  --> src/nested_types2.rs:75:80
   |
75 |         self.typedHere2 = Box::new(NestedTypes2__SubtypeA__SubtypeCc::new(self.stream, self, _root)?);
   |                                                                                ^^^^^^

error[E0308]: mismatched types
  --> src/nested_types.rs:73:85
   |
73 |         self.typedHere = Box::new(NestedTypes__SubtypeA__SubtypeC::new(self.stream, self, _root)?);
   |                                                                                     ^^^^ expected enum `std::option::Option`, found struct `nested_types::NestedTypes__SubtypeA`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_types::NestedTypes__SubtypeA`

error[E0308]: mismatched types
  --> src/nested_types.rs:71:27
   |
71 |           where Self: Sized {
   |  ___________________________^
72 | |         self.typedAtRoot = Box::new(NestedTypes__SubtypeB::new(self.stream, self, _root)?);
73 | |         self.typedHere = Box::new(NestedTypes__SubtypeA__SubtypeC::new(self.stream, self, _root)?);
74 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nested_types::NestedTypes__SubtypeA__SubtypeC`
  --> src/nested_types.rs:92:11
   |
92 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `valueC`

error[E0609]: no field `stream` on type `&mut nested_types::NestedTypes__SubtypeA__SubtypeC`
   --> src/nested_types.rs:105:28
    |
105 |         self.valueC = self.stream.read_s1()?;
    |                            ^^^^^^

error[E0308]: mismatched types
   --> src/nested_types.rs:104:27
    |
104 |           where Self: Sized {
    |  ___________________________^
105 | |         self.valueC = self.stream.read_s1()?;
106 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_types::NestedTypes__SubtypeB`
   --> src/nested_types.rs:124:11
    |
124 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `valueB`

error[E0308]: mismatched types
  --> src/nested_types2.rs:75:88
   |
75 |         self.typedHere2 = Box::new(NestedTypes2__SubtypeA__SubtypeCc::new(self.stream, self, _root)?);
   |                                                                                        ^^^^ expected enum `std::option::Option`, found struct `nested_types2::NestedTypes2__SubtypeA`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_types2::NestedTypes2__SubtypeA`

error[E0609]: no field `stream` on type `&mut nested_types::NestedTypes__SubtypeB`
   --> src/nested_types.rs:137:28
    |
137 |         self.valueB = self.stream.read_s1()?;
    |                            ^^^^^^

error[E0308]: mismatched types
   --> src/nested_types.rs:136:27
    |
136 |           where Self: Sized {
    |  ___________________________^
137 | |         self.valueB = self.stream.read_s1()?;
138 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0308]: mismatched types
  --> src/nested_types2.rs:72:27
   |
72 |           where Self: Sized {
   |  ___________________________^
73 | |         self.typedAtRoot = Box::new(NestedTypes2__SubtypeB::new(self.stream, self, _root)?);
74 | |         self.typedHere1 = Box::new(NestedTypes2__SubtypeA__SubtypeC::new(self.stream, self, _root)?);
75 | |         self.typedHere2 = Box::new(NestedTypes2__SubtypeA__SubtypeCc::new(self.stream, self, _root)?);
76 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `non_standard::NonStandard`
  --> src/non_standard.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `foo`, `bar`, `vi`, `pi`

error[E0609]: no field `stream` on type `nested_types2::NestedTypes2__SubtypeA__SubtypeC`
  --> src/nested_types2.rs:97:11
   |
97 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `valueC`, `typedHere`, `typedParent`, `typedRoot`

error[E0609]: no field `stream` on type `&mut non_standard::NonStandard`
  --> src/non_standard.rs:40:25
   |
40 |         self.foo = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut nested_types2::NestedTypes2__SubtypeA__SubtypeC`
   --> src/nested_types2.rs:110:28
    |
110 |         self.valueC = self.stream.read_s1()?;
    |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut non_standard::NonStandard`
  --> src/non_standard.rs:43:33
   |
43 |                 self.bar = self.stream.read_u2le()?;
   |                                 ^^^^^^

error[E0308]: mismatched types
  --> src/non_standard.rs:42:19
   |
42 |               42 => {
   |  ___________________^
43 | |                 self.bar = self.stream.read_u2le()?;
44 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut nested_types2::NestedTypes2__SubtypeA__SubtypeC`
   --> src/nested_types2.rs:111:88
    |
111 |         self.typedHere = Box::new(NestedTypes2__SubtypeA__SubtypeC__SubtypeD::new(self.stream, self, _root)?);
    |                                                                                        ^^^^^^

error[E0609]: no field `stream` on type `&mut non_standard::NonStandard`
  --> src/non_standard.rs:46:33
   |
46 |                 self.bar = self.stream.read_u4le()?;
   |                                 ^^^^^^

error[E0308]: mismatched types
  --> src/non_standard.rs:45:19
   |
45 |               43 => {
   |  ___________________^
46 | |                 self.bar = self.stream.read_u4le()?;
47 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/non_standard.rs:58:19
   |
58 |         self.vi = self.foo;
   |                   ^^^^^^^^
   |                   |
   |                   expected enum `std::option::Option`, found u8
   |                   help: try using a variant of the expected type: `Some(self.foo)`
   |
   = note: expected type `std::option::Option<u8>`
              found type `u8`

error[E0308]: mismatched types
  --> src/non_standard.rs:59:16
   |
59 |         return self.vi;
   |                ^^^^^^^ expected u8, found enum `std::option::Option`
   |
   = note: expected type `u8`
              found type `std::option::Option<u8>`

error[E0609]: no field `stream` on type `&mut non_standard::NonStandard`
  --> src/non_standard.rs:66:25
   |
66 |         let _pos = self.stream.pos();
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut non_standard::NonStandard`
  --> src/non_standard.rs:67:14
   |
67 |         self.stream.seek(0);
   |              ^^^^^^

error[E0609]: no field `stream` on type `&mut non_standard::NonStandard`
  --> src/non_standard.rs:68:24
   |
68 |         self.pi = self.stream.read_u1()?;
   |                        ^^^^^^

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/non_standard.rs:68:19
   |
68 |         self.pi = self.stream.read_u1()?;
   |                   ^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `u8`
   |
   = help: the trait `std::ops::Try` is not implemented for `u8`
   = note: required by `std::ops::Try::from_error`

error[E0609]: no field `stream` on type `&mut non_standard::NonStandard`
  --> src/non_standard.rs:69:14
   |
69 |         self.stream.seek(_pos);
   |              ^^^^^^

error[E0308]: mismatched types
  --> src/non_standard.rs:70:16
   |
70 |         return self.pi;
   |                ^^^^^^^ expected u8, found enum `std::option::Option`
   |
   = note: expected type `u8`
              found type `std::option::Option<u8>`

error[E0609]: no field `stream` on type `opaque_external_type_02_child::OpaqueExternalType02Child`
  --> src/opaque_external_type_02_child.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `s1`, `s2`, `s3`, `someMethod`

error[E0308]: mismatched types
   --> src/nested_types2.rs:111:96
    |
111 |         self.typedHere = Box::new(NestedTypes2__SubtypeA__SubtypeC__SubtypeD::new(self.stream, self, _root)?);
    |                                                                                                ^^^^ expected enum `std::option::Option`, found struct `nested_types2::NestedTypes2__SubtypeA__SubtypeC`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut nested_types2::NestedTypes2__SubtypeA__SubtypeC`

warning: unreachable expression
  --> src/opaque_external_type_02_child.rs:40:9
   |
40 |         self.s1 = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut nested_types2::NestedTypes2__SubtypeA__SubtypeC`
   --> src/nested_types2.rs:112:81
    |
112 |         self.typedParent = Box::new(NestedTypes2__SubtypeA__SubtypeCc::new(self.stream, self, _root)?);
    |                                                                                 ^^^^^^

warning: unreachable expression
  --> src/opaque_external_type_02_child.rs:41:9
   |
41 |         self.s2 = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut opaque_external_type_02_child::OpaqueExternalType02Child`
  --> src/opaque_external_type_02_child.rs:42:96
   |
42 |         self.s3 = Box::new(OpaqueExternalType02Child__OpaqueExternalType02ChildChild::new(self.stream, self, _root)?);
   |                                                                                                ^^^^^^

error[E0308]: mismatched types
  --> src/opaque_external_type_02_child.rs:42:104
   |
42 |         self.s3 = Box::new(OpaqueExternalType02Child__OpaqueExternalType02ChildChild::new(self.stream, self, _root)?);
   |                                                                                                        ^^^^ expected enum `std::option::Option`, found struct `opaque_external_type_02_child::OpaqueExternalType02Child`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut opaque_external_type_02_child::OpaqueExternalType02Child`

error[E0308]: mismatched types
   --> src/nested_types2.rs:112:89
    |
112 |         self.typedParent = Box::new(NestedTypes2__SubtypeA__SubtypeCc::new(self.stream, self, _root)?);
    |                                                                                         ^^^^ expected enum `std::option::Option`, found struct `nested_types2::NestedTypes2__SubtypeA__SubtypeC`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut nested_types2::NestedTypes2__SubtypeA__SubtypeC`

error[E0609]: no field `stream` on type `&mut nested_types2::NestedTypes2__SubtypeA__SubtypeC`
   --> src/nested_types2.rs:113:68
    |
113 |         self.typedRoot = Box::new(NestedTypes2__SubtypeB::new(self.stream, self, _root)?);
    |                                                                    ^^^^^^

error[E0308]: mismatched types
  --> src/opaque_external_type_02_child.rs:52:27
   |
52 |         self.someMethod = true;
   |                           ^^^^
   |                           |
   |                           expected enum `std::option::Option`, found bool
   |                           help: try using a variant of the expected type: `Some(true)`
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/opaque_external_type_02_child.rs:53:16
   |
53 |         return self.someMethod;
   |                ^^^^^^^^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0609]: no field `stream` on type `opaque_external_type_02_child::OpaqueExternalType02Child__OpaqueExternalType02ChildChild`
  --> src/opaque_external_type_02_child.rs:69:11
   |
69 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `s3`

error[E0609]: no field `_root` on type `&mut opaque_external_type_02_child::OpaqueExternalType02Child__OpaqueExternalType02ChildChild`
  --> src/opaque_external_type_02_child.rs:82:17
   |
82 |         if self._root.some_method {
   |                 ^^^^^

warning: unreachable expression
  --> src/opaque_external_type_02_child.rs:83:13
   |
83 |             self.s3 = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
error[E0308]: mismatched types
   --> src/nested_types2.rs:113:76
    |
113 |         self.typedRoot = Box::new(NestedTypes2__SubtypeB::new(self.stream, self, _root)?);
    |                                                                            ^^^^ expected enum `std::option::Option`, found struct `nested_types2::NestedTypes2__SubtypeA__SubtypeC`

    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut nested_types2::NestedTypes2__SubtypeA__SubtypeC`

error[E0317]: if may be missing an else clause
  --> src/opaque_external_type_02_child.rs:82:9
   |
82 | /         if self._root.some_method {
83 | |             self.s3 = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
84 | |         }
   | |_________^ expected (), found enum `std::result::Result`
   |
   = note: expected type `()`
              found type `std::result::Result<(), std::io::Error>`

error[E0308]: mismatched types
   --> src/nested_types2.rs:109:27
    |
109 |           where Self: Sized {
    |  ___________________________^
110 | |         self.valueC = self.stream.read_s1()?;
111 | |         self.typedHere = Box::new(NestedTypes2__SubtypeA__SubtypeC__SubtypeD::new(self.stream, self, _root)?);
112 | |         self.typedParent = Box::new(NestedTypes2__SubtypeA__SubtypeCc::new(self.stream, self, _root)?);
113 | |         self.typedRoot = Box::new(NestedTypes2__SubtypeB::new(self.stream, self, _root)?);
114 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `opaque_external_type_02_parent::OpaqueExternalType02Parent`
  --> src/opaque_external_type_02_parent.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `parent`

error[E0609]: no field `stream` on type `nested_types2::NestedTypes2__SubtypeA__SubtypeC__SubtypeD`
   --> src/nested_types2.rs:132:11
    |
132 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `valueD`

error[E0609]: no field `stream` on type `&mut opaque_external_type_02_parent::OpaqueExternalType02Parent`
  --> src/opaque_external_type_02_parent.rs:38:80
   |
38 |         self.parent = Box::new(OpaqueExternalType02Parent__ParentObj::new(self.stream, self, _root)?);
   |                                                                                ^^^^^^

error[E0609]: no field `stream` on type `&mut nested_types2::NestedTypes2__SubtypeA__SubtypeC__SubtypeD`
   --> src/nested_types2.rs:145:28
    |
145 |         self.valueD = self.stream.read_s1()?;
    |                            ^^^^^^

error[E0308]: mismatched types
   --> src/nested_types2.rs:144:27
    |
144 |           where Self: Sized {
    |  ___________________________^
145 | |         self.valueD = self.stream.read_s1()?;
146 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_types2::NestedTypes2__SubtypeA__SubtypeCc`
   --> src/nested_types2.rs:164:11
    |
164 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `valueCc`

error[E0609]: no field `stream` on type `&mut nested_types2::NestedTypes2__SubtypeA__SubtypeCc`
   --> src/nested_types2.rs:177:29
    |
177 |         self.valueCc = self.stream.read_s1()?;
    |                             ^^^^^^

error[E0308]: mismatched types
   --> src/nested_types2.rs:176:27
    |
176 |           where Self: Sized {
    |  ___________________________^
177 | |         self.valueCc = self.stream.read_s1()?;
178 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_types2::NestedTypes2__SubtypeB`
   --> src/nested_types2.rs:196:11
    |
196 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `valueB`

error[E0609]: no field `stream` on type `&mut nested_types2::NestedTypes2__SubtypeB`
   --> src/nested_types2.rs:209:28
    |
209 |         self.valueB = self.stream.read_s1()?;
    |                            ^^^^^^

error[E0308]: mismatched types
   --> src/nested_types2.rs:208:27
    |
208 |           where Self: Sized {
    |  ___________________________^
209 | |         self.valueB = self.stream.read_s1()?;
210 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_types3::NestedTypes3`
  --> src/nested_types3.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `aCc`, `aCD`, `b`

error[E0609]: no field `stream` on type `&mut nested_types3::NestedTypes3`
  --> src/nested_types3.rs:39:73
   |
39 |         self.aCc = Box::new(NestedTypes3__SubtypeA__SubtypeCc::new(self.stream, self, _root)?);
   |                                                                         ^^^^^^

error[E0308]: mismatched types
  --> src/opaque_external_type_02_parent.rs:38:88
   |
38 |         self.parent = Box::new(OpaqueExternalType02Parent__ParentObj::new(self.stream, self, _root)?);
   |                                                                                        ^^^^ expected enum `std::option::Option`, found struct `opaque_external_type_02_parent::OpaqueExternalType02Parent`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut opaque_external_type_02_parent::OpaqueExternalType02Parent`

error[E0308]: mismatched types
  --> src/opaque_external_type_02_parent.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.parent = Box::new(OpaqueExternalType02Parent__ParentObj::new(self.stream, self, _root)?);
39 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `opaque_external_type_02_parent::OpaqueExternalType02Parent__ParentObj`
  --> src/opaque_external_type_02_parent.rs:57:11
   |
57 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `child`

error[E0609]: no field `stream` on type `&mut opaque_external_type_02_parent::OpaqueExternalType02Parent__ParentObj`
  --> src/opaque_external_type_02_parent.rs:70:67
   |
70 |         self.child = Box::new(OpaqueExternalType02Child::new(self.stream, self, _root)?);
   |                                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/nested_types3.rs:39:81
   |
39 |         self.aCc = Box::new(NestedTypes3__SubtypeA__SubtypeCc::new(self.stream, self, _root)?);
   |                                                                                 ^^^^ expected enum `std::option::Option`, found struct `nested_types3::NestedTypes3`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_types3::NestedTypes3`

error[E0609]: no field `stream` on type `&mut nested_types3::NestedTypes3`
  --> src/nested_types3.rs:40:82
   |
40 |         self.aCD = Box::new(NestedTypes3__SubtypeA__SubtypeC__SubtypeD::new(self.stream, self, _root)?);
   |                                                                                  ^^^^^^

error[E0308]: mismatched types
  --> src/opaque_external_type_02_parent.rs:70:75
   |
70 |         self.child = Box::new(OpaqueExternalType02Child::new(self.stream, self, _root)?);
   |                                                                           ^^^^ expected enum `std::option::Option`, found struct `opaque_external_type_02_parent::OpaqueExternalType02Parent__ParentObj`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut opaque_external_type_02_parent::OpaqueExternalType02Parent__ParentObj`

error[E0308]: mismatched types
  --> src/opaque_external_type_02_parent.rs:69:27
   |
69 |           where Self: Sized {
   |  ___________________________^
70 | |         self.child = Box::new(OpaqueExternalType02Child::new(self.stream, self, _root)?);
71 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `opaque_external_type::OpaqueExternalType`
  --> src/opaque_external_type.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`

error[E0609]: no field `stream` on type `&mut opaque_external_type::OpaqueExternalType`
  --> src/opaque_external_type.rs:38:48
   |
38 |         self.one = Box::new(TermStrz::new(self.stream, self, _root)?);
   |                                                ^^^^^^

error[E0308]: mismatched types
  --> src/nested_types3.rs:40:90
   |
40 |         self.aCD = Box::new(NestedTypes3__SubtypeA__SubtypeC__SubtypeD::new(self.stream, self, _root)?);
   |                                                                                          ^^^^ expected enum `std::option::Option`, found struct `nested_types3::NestedTypes3`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_types3::NestedTypes3`

error[E0609]: no field `stream` on type `&mut nested_types3::NestedTypes3`
  --> src/nested_types3.rs:41:60
   |
41 |         self.b = Box::new(NestedTypes3__SubtypeB::new(self.stream, self, _root)?);
   |                                                            ^^^^^^

error[E0308]: mismatched types
  --> src/opaque_external_type.rs:38:56
   |
38 |         self.one = Box::new(TermStrz::new(self.stream, self, _root)?);
   |                                                        ^^^^ expected enum `std::option::Option`, found struct `opaque_external_type::OpaqueExternalType`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut opaque_external_type::OpaqueExternalType`

error[E0308]: mismatched types
  --> src/opaque_external_type.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.one = Box::new(TermStrz::new(self.stream, self, _root)?);
39 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `opaque_with_param::OpaqueWithParam`
  --> src/opaque_with_param.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`

error[E0609]: no field `stream` on type `&mut opaque_with_param::OpaqueWithParam`
  --> src/opaque_with_param.rs:38:49
   |
38 |         self.one = Box::new(ParamsDef::new(self.stream, self, _root)?);
   |                                                 ^^^^^^

error[E0308]: mismatched types
  --> src/nested_types3.rs:41:68
   |
41 |         self.b = Box::new(NestedTypes3__SubtypeB::new(self.stream, self, _root)?);
   |                                                                    ^^^^ expected enum `std::option::Option`, found struct `nested_types3::NestedTypes3`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_types3::NestedTypes3`

error[E0308]: mismatched types
  --> src/nested_types3.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.aCc = Box::new(NestedTypes3__SubtypeA__SubtypeCc::new(self.stream, self, _root)?);
40 | |         self.aCD = Box::new(NestedTypes3__SubtypeA__SubtypeC__SubtypeD::new(self.stream, self, _root)?);
41 | |         self.b = Box::new(NestedTypes3__SubtypeB::new(self.stream, self, _root)?);
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nested_types3::NestedTypes3__SubtypeA`
  --> src/nested_types3.rs:59:11
   |
59 |         s.stream = stream;
   |           ^^^^^^ unknown field

error[E0308]: mismatched types
  --> src/nested_types3.rs:71:27
   |
71 |           where Self: Sized {
   |  ___________________________^
72 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nested_types3::NestedTypes3__SubtypeA__SubtypeC`
  --> src/nested_types3.rs:89:11
   |
89 |         s.stream = stream;
   |           ^^^^^^ unknown field

error[E0308]: mismatched types
   --> src/nested_types3.rs:101:27
    |
101 |           where Self: Sized {
    |  ___________________________^
102 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_types3::NestedTypes3__SubtypeA__SubtypeC__SubtypeD`
   --> src/nested_types3.rs:120:11
    |
120 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `valueD`

error[E0609]: no field `stream` on type `&mut nested_types3::NestedTypes3__SubtypeA__SubtypeC__SubtypeD`
   --> src/nested_types3.rs:133:28
    |
133 |         self.valueD = self.stream.read_s1()?;
    |                            ^^^^^^

error[E0308]: mismatched types
   --> src/nested_types3.rs:132:27
    |
132 |           where Self: Sized {
    |  ___________________________^
133 | |         self.valueD = self.stream.read_s1()?;
134 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_types3::NestedTypes3__SubtypeA__SubtypeCc`
   --> src/nested_types3.rs:152:11
    |
152 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `valueCc`

error[E0609]: no field `stream` on type `&mut nested_types3::NestedTypes3__SubtypeA__SubtypeCc`
   --> src/nested_types3.rs:165:29
    |
165 |         self.valueCc = self.stream.read_s1()?;
    |                             ^^^^^^

error[E0308]: mismatched types
   --> src/nested_types3.rs:164:27
    |
164 |           where Self: Sized {
    |  ___________________________^
165 | |         self.valueCc = self.stream.read_s1()?;
166 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_types3::NestedTypes3__SubtypeB`
   --> src/nested_types3.rs:186:11
    |
186 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `valueB`, `aCc`, `aCD`

error[E0609]: no field `stream` on type `&mut nested_types3::NestedTypes3__SubtypeB`
   --> src/nested_types3.rs:199:28
    |
199 |         self.valueB = self.stream.read_s1()?;
    |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut nested_types3::NestedTypes3__SubtypeB`
   --> src/nested_types3.rs:200:73
    |
200 |         self.aCc = Box::new(NestedTypes3__SubtypeA__SubtypeCc::new(self.stream, self, _root)?);
    |                                                                         ^^^^^^

error[E0308]: mismatched types
  --> src/opaque_with_param.rs:38:57
   |
38 |         self.one = Box::new(ParamsDef::new(self.stream, self, _root)?);
   |                                                         ^^^^ expected enum `std::option::Option`, found struct `opaque_with_param::OpaqueWithParam`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut opaque_with_param::OpaqueWithParam`

error[E0308]: mismatched types
  --> src/opaque_with_param.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.one = Box::new(ParamsDef::new(self.stream, self, _root)?);
39 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `optional_id::OptionalId`
  --> src/optional_id.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `_unnamed0`, `_unnamed1`, `_unnamed2`

error[E0609]: no field `stream` on type `&mut optional_id::OptionalId`
  --> src/optional_id.rs:39:31
   |
39 |         self._unnamed0 = self.stream.read_u1()?;
   |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut optional_id::OptionalId`
  --> src/optional_id.rs:40:31
   |
40 |         self._unnamed1 = self.stream.read_u1()?;
   |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut optional_id::OptionalId`
  --> src/optional_id.rs:41:31
   |
41 |         self._unnamed2 = self.stream.read_bytes(5)?;
   |                               ^^^^^^

error[E0308]: mismatched types
  --> src/optional_id.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self._unnamed0 = self.stream.read_u1()?;
40 | |         self._unnamed1 = self.stream.read_u1()?;
41 | |         self._unnamed2 = self.stream.read_bytes(5)?;
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `params_call_short::ParamsCallShort`
  --> src/params_call_short.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `buf1`, `buf2`

error[E0609]: no field `stream` on type `&mut params_call_short::ParamsCallShort`
  --> src/params_call_short.rs:38:64
   |
38 |         self.buf1 = Box::new(ParamsCallShort__MyStr1::new(self.stream, self, _root)?);
   |                                                                ^^^^^^

error[E0308]: mismatched types
   --> src/nested_types3.rs:200:81
    |
200 |         self.aCc = Box::new(NestedTypes3__SubtypeA__SubtypeCc::new(self.stream, self, _root)?);
    |                                                                                 ^^^^ expected enum `std::option::Option`, found struct `nested_types3::NestedTypes3__SubtypeB`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut nested_types3::NestedTypes3__SubtypeB`

error[E0609]: no field `stream` on type `&mut nested_types3::NestedTypes3__SubtypeB`
   --> src/nested_types3.rs:201:82
    |
201 |         self.aCD = Box::new(NestedTypes3__SubtypeA__SubtypeC__SubtypeD::new(self.stream, self, _root)?);
    |                                                                                  ^^^^^^

error[E0308]: mismatched types
  --> src/params_call_short.rs:38:72
   |
38 |         self.buf1 = Box::new(ParamsCallShort__MyStr1::new(self.stream, self, _root)?);
   |                                                                        ^^^^ expected enum `std::option::Option`, found struct `params_call_short::ParamsCallShort`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut params_call_short::ParamsCallShort`

error[E0609]: no field `stream` on type `&mut params_call_short::ParamsCallShort`
  --> src/params_call_short.rs:39:64
   |
39 |         self.buf2 = Box::new(ParamsCallShort__MyStr2::new(self.stream, self, _root)?);
   |                                                                ^^^^^^

error[E0308]: mismatched types
   --> src/nested_types3.rs:201:90
    |
201 |         self.aCD = Box::new(NestedTypes3__SubtypeA__SubtypeC__SubtypeD::new(self.stream, self, _root)?);
    |                                                                                          ^^^^ expected enum `std::option::Option`, found struct `nested_types3::NestedTypes3__SubtypeB`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut nested_types3::NestedTypes3__SubtypeB`

error[E0308]: mismatched types
   --> src/nested_types3.rs:198:27
    |
198 |           where Self: Sized {
    |  ___________________________^
199 | |         self.valueB = self.stream.read_s1()?;
200 | |         self.aCc = Box::new(NestedTypes3__SubtypeA__SubtypeCc::new(self.stream, self, _root)?);
201 | |         self.aCD = Box::new(NestedTypes3__SubtypeA__SubtypeC__SubtypeD::new(self.stream, self, _root)?);
202 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_types::NestedTypes`
  --> src/nested_types.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `two`

error[E0609]: no field `stream` on type `&mut nested_types::NestedTypes`
  --> src/nested_types.rs:38:61
   |
38 |         self.one = Box::new(NestedTypes__SubtypeA::new(self.stream, self, _root)?);
   |                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/params_call_short.rs:39:72
   |
39 |         self.buf2 = Box::new(ParamsCallShort__MyStr2::new(self.stream, self, _root)?);
   |                                                                        ^^^^ expected enum `std::option::Option`, found struct `params_call_short::ParamsCallShort`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut params_call_short::ParamsCallShort`

error[E0308]: mismatched types
  --> src/params_call_short.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.buf1 = Box::new(ParamsCallShort__MyStr1::new(self.stream, self, _root)?);
39 | |         self.buf2 = Box::new(ParamsCallShort__MyStr2::new(self.stream, self, _root)?);
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `params_call_short::ParamsCallShort__MyStr1`
  --> src/params_call_short.rs:58:11
   |
58 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `body`

warning: unreachable expression
  --> src/params_call_short.rs:71:9
   |
71 |         self.body = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `params_call_short::ParamsCallShort__MyStr2`
  --> src/params_call_short.rs:91:11
   |
91 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `body`, `trailer`

warning: unreachable expression
   --> src/params_call_short.rs:104:9
    |
104 |         self.body = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `has_trailer` on type `&mut params_call_short::ParamsCallShort__MyStr2`
   --> src/params_call_short.rs:105:17
    |
105 |         if self.has_trailer {
    |                 ^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut params_call_short::ParamsCallShort__MyStr2`
   --> src/params_call_short.rs:106:33
    |
106 |             self.trailer = self.stream.read_u1()?;
    |                                 ^^^^^^

error[E0308]: mismatched types
   --> src/params_call_short.rs:105:29
    |
105 |           if self.has_trailer {
    |  _____________________________^
106 | |             self.trailer = self.stream.read_u1()?;
107 | |         }
    | |_________^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `params_def::ParamsDef`
  --> src/params_def.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `buf`, `trailer`

warning: unreachable expression
  --> src/params_def.rs:38:9
   |
38 |         self.buf = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `has_trailer` on type `&mut params_def::ParamsDef`
  --> src/params_def.rs:39:17
   |
39 |         if self.has_trailer {
   |                 ^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut params_def::ParamsDef`
  --> src/params_def.rs:40:33
   |
40 |             self.trailer = self.stream.read_u1()?;
   |                                 ^^^^^^

error[E0308]: mismatched types
  --> src/params_def.rs:39:29
   |
39 |           if self.has_trailer {
   |  _____________________________^
40 | |             self.trailer = self.stream.read_u1()?;
41 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `params_pass_struct::ParamsPassStruct`
  --> src/params_pass_struct.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `first`, `one`

error[E0609]: no field `stream` on type `&mut params_pass_struct::ParamsPassStruct`
  --> src/params_pass_struct.rs:38:65
   |
38 |         self.first = Box::new(ParamsPassStruct__Block::new(self.stream, self, _root)?);
   |                                                                 ^^^^^^

error[E0308]: mismatched types
  --> src/nested_types.rs:38:69
   |
38 |         self.one = Box::new(NestedTypes__SubtypeA::new(self.stream, self, _root)?);
   |                                                                     ^^^^ expected enum `std::option::Option`, found struct `nested_types::NestedTypes`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_types::NestedTypes`

error[E0609]: no field `stream` on type `&mut nested_types::NestedTypes`
  --> src/nested_types.rs:39:61
   |
39 |         self.two = Box::new(NestedTypes__SubtypeB::new(self.stream, self, _root)?);
   |                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/params_pass_struct.rs:38:73
   |
38 |         self.first = Box::new(ParamsPassStruct__Block::new(self.stream, self, _root)?);
   |                                                                         ^^^^ expected enum `std::option::Option`, found struct `params_pass_struct::ParamsPassStruct`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut params_pass_struct::ParamsPassStruct`

error[E0609]: no field `stream` on type `&mut params_pass_struct::ParamsPassStruct`
  --> src/params_pass_struct.rs:39:68
   |
39 |         self.one = Box::new(ParamsPassStruct__StructType::new(self.stream, self, _root)?);
   |                                                                    ^^^^^^

error[E0308]: mismatched types
  --> src/nested_types.rs:39:69
   |
39 |         self.two = Box::new(NestedTypes__SubtypeB::new(self.stream, self, _root)?);
   |                                                                     ^^^^ expected enum `std::option::Option`, found struct `nested_types::NestedTypes`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_types::NestedTypes`

error[E0308]: mismatched types
  --> src/nested_types.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.one = Box::new(NestedTypes__SubtypeA::new(self.stream, self, _root)?);
39 | |         self.two = Box::new(NestedTypes__SubtypeB::new(self.stream, self, _root)?);
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `nested_types::NestedTypes__SubtypeA`
  --> src/nested_types.rs:59:11
   |
59 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `typedAtRoot`, `typedHere`

error[E0609]: no field `stream` on type `&mut nested_types::NestedTypes__SubtypeA`
  --> src/nested_types.rs:72:69
   |
72 |         self.typedAtRoot = Box::new(NestedTypes__SubtypeB::new(self.stream, self, _root)?);
   |                                                                     ^^^^^^

error[E0308]: mismatched types
  --> src/params_pass_struct.rs:39:76
   |
39 |         self.one = Box::new(ParamsPassStruct__StructType::new(self.stream, self, _root)?);
   |                                                                            ^^^^ expected enum `std::option::Option`, found struct `params_pass_struct::ParamsPassStruct`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut params_pass_struct::ParamsPassStruct`

error[E0308]: mismatched types
  --> src/params_pass_struct.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.first = Box::new(ParamsPassStruct__Block::new(self.stream, self, _root)?);
39 | |         self.one = Box::new(ParamsPassStruct__StructType::new(self.stream, self, _root)?);
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `params_pass_struct::ParamsPassStruct__Block`
  --> src/params_pass_struct.rs:58:11
   |
58 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `foo`

error[E0609]: no field `stream` on type `&mut params_pass_struct::ParamsPassStruct__Block`
  --> src/params_pass_struct.rs:71:25
   |
71 |         self.foo = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/params_pass_struct.rs:70:27
   |
70 |           where Self: Sized {
   |  ___________________________^
71 | |         self.foo = self.stream.read_u1()?;
72 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `params_pass_struct::ParamsPassStruct__StructType`
  --> src/params_pass_struct.rs:90:11
   |
90 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `bar`

error[E0609]: no field `stream` on type `&mut params_pass_struct::ParamsPassStruct__StructType`
   --> src/params_pass_struct.rs:103:73
    |
103 |         self.bar = Box::new(ParamsPassStruct__StructType__Baz::new(self.stream, self, _root)?);
    |                                                                         ^^^^^^

error[E0308]: mismatched types
  --> src/nested_types.rs:72:77
   |
72 |         self.typedAtRoot = Box::new(NestedTypes__SubtypeB::new(self.stream, self, _root)?);
   |                                                                             ^^^^ expected enum `std::option::Option`, found struct `nested_types::NestedTypes__SubtypeA`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_types::NestedTypes__SubtypeA`

error[E0609]: no field `stream` on type `&mut nested_types::NestedTypes__SubtypeA`
  --> src/nested_types.rs:73:77
   |
73 |         self.typedHere = Box::new(NestedTypes__SubtypeA__SubtypeC::new(self.stream, self, _root)?);
   |                                                                             ^^^^^^

error[E0308]: mismatched types
   --> src/params_pass_struct.rs:103:81
    |
103 |         self.bar = Box::new(ParamsPassStruct__StructType__Baz::new(self.stream, self, _root)?);
    |                                                                                 ^^^^ expected enum `std::option::Option`, found struct `params_pass_struct::ParamsPassStruct__StructType`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut params_pass_struct::ParamsPassStruct__StructType`

error[E0308]: mismatched types
   --> src/params_pass_struct.rs:102:27
    |
102 |           where Self: Sized {
    |  ___________________________^
103 | |         self.bar = Box::new(ParamsPassStruct__StructType__Baz::new(self.stream, self, _root)?);
104 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `params_pass_struct::ParamsPassStruct__StructType__Baz`
   --> src/params_pass_struct.rs:122:11
    |
122 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `qux`

error[E0308]: mismatched types
  --> src/nested_types.rs:73:85
   |
73 |         self.typedHere = Box::new(NestedTypes__SubtypeA__SubtypeC::new(self.stream, self, _root)?);
   |                                                                                     ^^^^ expected enum `std::option::Option`, found struct `nested_types::NestedTypes__SubtypeA`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut nested_types::NestedTypes__SubtypeA`

error[E0308]: mismatched types
  --> src/nested_types.rs:71:27
   |
71 |           where Self: Sized {
   |  ___________________________^
72 | |         self.typedAtRoot = Box::new(NestedTypes__SubtypeB::new(self.stream, self, _root)?);
73 | |         self.typedHere = Box::new(NestedTypes__SubtypeA__SubtypeC::new(self.stream, self, _root)?);
74 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut params_pass_struct::ParamsPassStruct__StructType__Baz`
   --> src/params_pass_struct.rs:135:25
    |
135 |         self.qux = self.stream.read_u1()?;
    |                         ^^^^^^

error[E0308]: mismatched types
   --> src/params_pass_struct.rs:134:27
    |
134 |           where Self: Sized {
    |  ___________________________^
135 | |         self.qux = self.stream.read_u1()?;
136 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `nested_types::NestedTypes__SubtypeA__SubtypeC`
  --> src/nested_types.rs:92:11
   |
92 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `valueC`

error[E0609]: no field `stream` on type `params_pass_usertype::ParamsPassUsertype`
  --> src/params_pass_usertype.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `first`, `one`

error[E0609]: no field `stream` on type `&mut nested_types::NestedTypes__SubtypeA__SubtypeC`
   --> src/nested_types.rs:105:28
    |
105 |         self.valueC = self.stream.read_s1()?;
    |                            ^^^^^^

error[E0308]: mismatched types
   --> src/nested_types.rs:104:27
    |
104 |           where Self: Sized {
    |  ___________________________^
105 | |         self.valueC = self.stream.read_s1()?;
106 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `&mut params_pass_usertype::ParamsPassUsertype`
  --> src/params_pass_usertype.rs:38:67
   |
38 |         self.first = Box::new(ParamsPassUsertype__Block::new(self.stream, self, _root)?);
   |                                                                   ^^^^^^

error[E0609]: no field `stream` on type `nested_types::NestedTypes__SubtypeB`
   --> src/nested_types.rs:124:11
    |
124 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `valueB`

error[E0609]: no field `stream` on type `&mut nested_types::NestedTypes__SubtypeB`
   --> src/nested_types.rs:137:28
    |
137 |         self.valueB = self.stream.read_s1()?;
    |                            ^^^^^^

error[E0308]: mismatched types
   --> src/nested_types.rs:136:27
    |
136 |           where Self: Sized {
    |  ___________________________^
137 | |         self.valueB = self.stream.read_s1()?;
138 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `non_standard::NonStandard`
  --> src/non_standard.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `foo`, `bar`, `vi`, `pi`

error[E0609]: no field `stream` on type `&mut non_standard::NonStandard`
  --> src/non_standard.rs:40:25
   |
40 |         self.foo = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut non_standard::NonStandard`
  --> src/non_standard.rs:43:33
   |
43 |                 self.bar = self.stream.read_u2le()?;
   |                                 ^^^^^^

error[E0308]: mismatched types
  --> src/non_standard.rs:42:19
   |
42 |               42 => {
   |  ___________________^
43 | |                 self.bar = self.stream.read_u2le()?;
44 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut non_standard::NonStandard`
  --> src/non_standard.rs:46:33
   |
46 |                 self.bar = self.stream.read_u4le()?;
   |                                 ^^^^^^

error[E0308]: mismatched types
  --> src/non_standard.rs:45:19
   |
45 |               43 => {
   |  ___________________^
46 | |                 self.bar = self.stream.read_u4le()?;
47 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/params_pass_usertype.rs:38:75
   |
38 |         self.first = Box::new(ParamsPassUsertype__Block::new(self.stream, self, _root)?);
   |                                                                           ^^^^ expected enum `std::option::Option`, found struct `params_pass_usertype::ParamsPassUsertype`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut params_pass_usertype::ParamsPassUsertype`

error[E0609]: no field `stream` on type `&mut params_pass_usertype::ParamsPassUsertype`
  --> src/params_pass_usertype.rs:39:69
   |
39 |         self.one = Box::new(ParamsPassUsertype__ParamType::new(self.stream, self, _root)?);
   |                                                                     ^^^^^^

error[E0308]: mismatched types
  --> src/non_standard.rs:58:19
   |
58 |         self.vi = self.foo;
   |                   ^^^^^^^^
   |                   |
   |                   expected enum `std::option::Option`, found u8
   |                   help: try using a variant of the expected type: `Some(self.foo)`
   |
   = note: expected type `std::option::Option<u8>`
              found type `u8`

error[E0308]: mismatched types
  --> src/non_standard.rs:59:16
   |
59 |         return self.vi;
   |                ^^^^^^^ expected u8, found enum `std::option::Option`
   |
   = note: expected type `u8`
              found type `std::option::Option<u8>`

error[E0609]: no field `stream` on type `&mut non_standard::NonStandard`
  --> src/non_standard.rs:66:25
   |
66 |         let _pos = self.stream.pos();
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut non_standard::NonStandard`
  --> src/non_standard.rs:67:14
   |
67 |         self.stream.seek(0);
   |              ^^^^^^

error[E0609]: no field `stream` on type `&mut non_standard::NonStandard`
  --> src/non_standard.rs:68:24
   |
68 |         self.pi = self.stream.read_u1()?;
   |                        ^^^^^^

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/non_standard.rs:68:19
   |
68 |         self.pi = self.stream.read_u1()?;
   |                   ^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `u8`
   |
   = help: the trait `std::ops::Try` is not implemented for `u8`
   = note: required by `std::ops::Try::from_error`

error[E0609]: no field `stream` on type `&mut non_standard::NonStandard`
  --> src/non_standard.rs:69:14
   |
69 |         self.stream.seek(_pos);
   |              ^^^^^^

error[E0308]: mismatched types
  --> src/non_standard.rs:70:16
   |
70 |         return self.pi;
   |                ^^^^^^^ expected u8, found enum `std::option::Option`
   |
   = note: expected type `u8`
              found type `std::option::Option<u8>`

error[E0609]: no field `stream` on type `opaque_external_type_02_child::OpaqueExternalType02Child`
  --> src/opaque_external_type_02_child.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `s1`, `s2`, `s3`, `someMethod`

warning: unreachable expression
  --> src/opaque_external_type_02_child.rs:40:9
   |
40 |         self.s1 = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unreachable expression
  --> src/opaque_external_type_02_child.rs:41:9
   |
41 |         self.s2 = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut opaque_external_type_02_child::OpaqueExternalType02Child`
  --> src/opaque_external_type_02_child.rs:42:96
   |
42 |         self.s3 = Box::new(OpaqueExternalType02Child__OpaqueExternalType02ChildChild::new(self.stream, self, _root)?);
   |                                                                                                ^^^^^^

error[E0308]: mismatched types
  --> src/params_pass_usertype.rs:39:77
   |
39 |         self.one = Box::new(ParamsPassUsertype__ParamType::new(self.stream, self, _root)?);
   |                                                                             ^^^^ expected enum `std::option::Option`, found struct `params_pass_usertype::ParamsPassUsertype`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut params_pass_usertype::ParamsPassUsertype`

error[E0308]: mismatched types
  --> src/params_pass_usertype.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.first = Box::new(ParamsPassUsertype__Block::new(self.stream, self, _root)?);
39 | |         self.one = Box::new(ParamsPassUsertype__ParamType::new(self.stream, self, _root)?);
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `params_pass_usertype::ParamsPassUsertype__Block`
  --> src/params_pass_usertype.rs:58:11
   |
58 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `foo`

error[E0609]: no field `stream` on type `&mut params_pass_usertype::ParamsPassUsertype__Block`
  --> src/params_pass_usertype.rs:71:25
   |
71 |         self.foo = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/params_pass_usertype.rs:70:27
   |
70 |           where Self: Sized {
   |  ___________________________^
71 | |         self.foo = self.stream.read_u1()?;
72 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `params_pass_usertype::ParamsPassUsertype__ParamType`
  --> src/params_pass_usertype.rs:90:11
   |
90 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `buf`

error[E0609]: no field `stream` on type `&mut params_pass_usertype::ParamsPassUsertype__ParamType`
   --> src/params_pass_usertype.rs:103:25
    |
103 |         self.buf = self.stream.read_bytes(self.foo.foo)?;
    |                         ^^^^^^

error[E0609]: no field `foo` on type `&mut params_pass_usertype::ParamsPassUsertype__ParamType`
   --> src/params_pass_usertype.rs:103:48
    |
103 |         self.buf = self.stream.read_bytes(self.foo.foo)?;
    |                                                ^^^

error[E0308]: mismatched types
   --> src/params_pass_usertype.rs:102:27
    |
102 |           where Self: Sized {
    |  ___________________________^
103 | |         self.buf = self.stream.read_bytes(self.foo.foo)?;
104 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `position_abs::PositionAbs`
  --> src/position_abs.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `indexOffset`, `index`

error[E0609]: no field `stream` on type `&mut position_abs::PositionAbs`
  --> src/position_abs.rs:38:33
   |
38 |         self.indexOffset = self.stream.read_u4le()?;
   |                                 ^^^^^^

error[E0308]: mismatched types
  --> src/position_abs.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.indexOffset = self.stream.read_u4le()?;
39 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut position_abs::PositionAbs`
  --> src/position_abs.rs:48:25
   |
48 |         let _pos = self.stream.pos();
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut position_abs::PositionAbs`
  --> src/position_abs.rs:49:14
   |
49 |         self.stream.seek(self.index_offset);
   |              ^^^^^^

error[E0609]: no field `index_offset` on type `&mut position_abs::PositionAbs`
  --> src/position_abs.rs:49:31
   |
49 |         self.stream.seek(self.index_offset);
   |                               ^^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut position_abs::PositionAbs`
  --> src/position_abs.rs:50:63
   |
50 |         self.index = Box::new(PositionAbs__IndexObj::new(self.stream, self, _root)?);
   |                                                               ^^^^^^

error[E0308]: mismatched types
  --> src/opaque_external_type_02_child.rs:42:104
   |
42 |         self.s3 = Box::new(OpaqueExternalType02Child__OpaqueExternalType02ChildChild::new(self.stream, self, _root)?);
   |                                                                                                        ^^^^ expected enum `std::option::Option`, found struct `opaque_external_type_02_child::OpaqueExternalType02Child`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut opaque_external_type_02_child::OpaqueExternalType02Child`

error[E0308]: mismatched types
  --> src/position_abs.rs:50:71
   |
50 |         self.index = Box::new(PositionAbs__IndexObj::new(self.stream, self, _root)?);
   |                                                                       ^^^^ expected enum `std::option::Option`, found struct `position_abs::PositionAbs`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut position_abs::PositionAbs`

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/position_abs.rs:50:31
   |
50 |         self.index = Box::new(PositionAbs__IndexObj::new(self.stream, self, _root)?);
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::boxed::Box<position_abs::PositionAbs__IndexObj>`
   |
   = help: the trait `std::ops::Try` is not implemented for `std::boxed::Box<position_abs::PositionAbs__IndexObj>`
   = note: required by `std::ops::Try::from_error`

error[E0308]: mismatched types
  --> src/opaque_external_type_02_child.rs:52:27
   |
52 |         self.someMethod = true;
   |                           ^^^^
   |                           |
   |                           expected enum `std::option::Option`, found bool
   |                           help: try using a variant of the expected type: `Some(true)`
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/opaque_external_type_02_child.rs:53:16
   |
53 |         return self.someMethod;
   |                ^^^^^^^^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0609]: no field `stream` on type `opaque_external_type_02_child::OpaqueExternalType02Child__OpaqueExternalType02ChildChild`
  --> src/opaque_external_type_02_child.rs:69:11
   |
69 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `s3`

error[E0609]: no field `_root` on type `&mut opaque_external_type_02_child::OpaqueExternalType02Child__OpaqueExternalType02ChildChild`
  --> src/opaque_external_type_02_child.rs:82:17
   |
82 |         if self._root.some_method {
   |                 ^^^^^

warning: unreachable expression
  --> src/opaque_external_type_02_child.rs:83:13
   |
83 |             self.s3 = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0317]: if may be missing an else clause
  --> src/opaque_external_type_02_child.rs:82:9
   |
82 | /         if self._root.some_method {
83 | |             self.s3 = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
84 | |         }
   | |_________^ expected (), found enum `std::result::Result`
   |
   = note: expected type `()`
              found type `std::result::Result<(), std::io::Error>`

error[E0609]: no field `stream` on type `opaque_external_type_02_parent::OpaqueExternalType02Parent`
  --> src/opaque_external_type_02_parent.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `parent`

error[E0609]: no field `stream` on type `&mut opaque_external_type_02_parent::OpaqueExternalType02Parent`
  --> src/opaque_external_type_02_parent.rs:38:80
   |
38 |         self.parent = Box::new(OpaqueExternalType02Parent__ParentObj::new(self.stream, self, _root)?);
   |                                                                                ^^^^^^

error[E0308]: mismatched types
  --> src/position_abs.rs:50:22
   |
50 |         self.index = Box::new(PositionAbs__IndexObj::new(self.stream, self, _root)?);
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<_>>`
              found type `std::boxed::Box<_>`
help: try using a variant of the expected type
   |
50 |         self.index = Some(<Box>::new(match ::std::ops::Try::into_result(<PositionAbs__IndexObj>::new(self.stream,
51 |                                                                            self,
52 |                                                                            _root))
53 |                {
54 |                ::std::result::Result::Err(err) =>
55 |                    #[allow(unreachable_code)]
 ...

error[E0609]: no field `stream` on type `&mut position_abs::PositionAbs`
  --> src/position_abs.rs:51:14
   |
51 |         self.stream.seek(_pos);
   |              ^^^^^^

error[E0308]: mismatched types
  --> src/position_abs.rs:52:16
   |
52 |         return self.index;
   |                ^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `position_abs::PositionAbs__IndexObj`
  --> src/position_abs.rs:68:11
   |
68 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `entry`

warning: unreachable expression
  --> src/position_abs.rs:81:9
   |
81 |         self.entry = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `position_in_seq::PositionInSeq`
  --> src/position_in_seq.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `numbers`, `header`

error[E0308]: mismatched types
  --> src/opaque_external_type_02_parent.rs:38:88
   |
38 |         self.parent = Box::new(OpaqueExternalType02Parent__ParentObj::new(self.stream, self, _root)?);
   |                                                                                        ^^^^ expected enum `std::option::Option`, found struct `opaque_external_type_02_parent::OpaqueExternalType02Parent`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut opaque_external_type_02_parent::OpaqueExternalType02Parent`

error[E0308]: mismatched types
  --> src/opaque_external_type_02_parent.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.parent = Box::new(OpaqueExternalType02Parent__ParentObj::new(self.stream, self, _root)?);
39 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `qty_numbers` on type `std::option::Option<std::boxed::Box<position_in_seq::PositionInSeq__HeaderObj>>`
  --> src/position_in_seq.rs:40:33
   |
40 |         for i in 0..self.header.qty_numbers {
   |                                 ^^^^^^^^^^^

error[E0609]: no field `stream` on type `opaque_external_type_02_parent::OpaqueExternalType02Parent__ParentObj`
  --> src/opaque_external_type_02_parent.rs:57:11
   |
57 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `child`

error[E0609]: no field `stream` on type `&mut position_in_seq::PositionInSeq`
  --> src/position_in_seq.rs:41:36
   |
41 |             self.numbers.push(self.stream.read_u1()?);
   |                                    ^^^^^^

error[E0308]: mismatched types
  --> src/position_in_seq.rs:40:9
   |
37 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
40 | /         for i in 0..self.header.qty_numbers {
41 | |             self.numbers.push(self.stream.read_u1()?);
42 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut opaque_external_type_02_parent::OpaqueExternalType02Parent__ParentObj`
  --> src/opaque_external_type_02_parent.rs:70:67
   |
70 |         self.child = Box::new(OpaqueExternalType02Child::new(self.stream, self, _root)?);
   |                                                                   ^^^^^^

error[E0609]: no field `stream` on type `&mut position_in_seq::PositionInSeq`
  --> src/position_in_seq.rs:52:25
   |
52 |         let _pos = self.stream.pos();
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut position_in_seq::PositionInSeq`
  --> src/position_in_seq.rs:53:14
   |
53 |         self.stream.seek(16);
   |              ^^^^^^

error[E0609]: no field `stream` on type `&mut position_in_seq::PositionInSeq`
  --> src/position_in_seq.rs:54:67
   |
54 |         self.header = Box::new(PositionInSeq__HeaderObj::new(self.stream, self, _root)?);
   |                                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/position_in_seq.rs:54:75
   |
54 |         self.header = Box::new(PositionInSeq__HeaderObj::new(self.stream, self, _root)?);
   |                                                                           ^^^^ expected enum `std::option::Option`, found struct `position_in_seq::PositionInSeq`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut position_in_seq::PositionInSeq`

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/position_in_seq.rs:54:32
   |
54 |         self.header = Box::new(PositionInSeq__HeaderObj::new(self.stream, self, _root)?);
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::boxed::Box<position_in_seq::PositionInSeq__HeaderObj>`
   |
   = help: the trait `std::ops::Try` is not implemented for `std::boxed::Box<position_in_seq::PositionInSeq__HeaderObj>`
   = note: required by `std::ops::Try::from_error`

error[E0308]: mismatched types
  --> src/opaque_external_type_02_parent.rs:70:75
   |
70 |         self.child = Box::new(OpaqueExternalType02Child::new(self.stream, self, _root)?);
   |                                                                           ^^^^ expected enum `std::option::Option`, found struct `opaque_external_type_02_parent::OpaqueExternalType02Parent__ParentObj`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut opaque_external_type_02_parent::OpaqueExternalType02Parent__ParentObj`

error[E0308]: mismatched types
  --> src/opaque_external_type_02_parent.rs:69:27
   |
69 |           where Self: Sized {
   |  ___________________________^
70 | |         self.child = Box::new(OpaqueExternalType02Child::new(self.stream, self, _root)?);
71 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `opaque_external_type::OpaqueExternalType`
  --> src/opaque_external_type.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`

error[E0609]: no field `stream` on type `&mut opaque_external_type::OpaqueExternalType`
  --> src/opaque_external_type.rs:38:48
   |
38 |         self.one = Box::new(TermStrz::new(self.stream, self, _root)?);
   |                                                ^^^^^^

error[E0308]: mismatched types
  --> src/position_in_seq.rs:54:23
   |
54 |         self.header = Box::new(PositionInSeq__HeaderObj::new(self.stream, self, _root)?);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<_>>`
              found type `std::boxed::Box<_>`
help: try using a variant of the expected type
   |
54 |         self.header = Some(<Box>::new(match ::std::ops::Try::into_result(<PositionInSeq__HeaderObj>::new(self.stream,
55 |                                                                               self,
56 |                                                                               _root))
57 |                {
58 |                ::std::result::Result::Err(err) =>
59 |                    #[allow(unreachable_code)]
 ...

error[E0609]: no field `stream` on type `&mut position_in_seq::PositionInSeq`
  --> src/position_in_seq.rs:55:14
   |
55 |         self.stream.seek(_pos);
   |              ^^^^^^

error[E0308]: mismatched types
  --> src/position_in_seq.rs:56:16
   |
56 |         return self.header;
   |                ^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `position_in_seq::PositionInSeq__HeaderObj`
  --> src/position_in_seq.rs:72:11
   |
72 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `qtyNumbers`

error[E0609]: no field `stream` on type `&mut position_in_seq::PositionInSeq__HeaderObj`
  --> src/position_in_seq.rs:85:32
   |
85 |         self.qtyNumbers = self.stream.read_u4le()?;
   |                                ^^^^^^

error[E0308]: mismatched types
  --> src/position_in_seq.rs:84:27
   |
84 |           where Self: Sized {
   |  ___________________________^
85 | |         self.qtyNumbers = self.stream.read_u4le()?;
86 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `position_to_end::PositionToEnd`
  --> src/position_to_end.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `index`

error[E0308]: mismatched types
  --> src/position_to_end.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut position_to_end::PositionToEnd`
  --> src/position_to_end.rs:46:25
   |
46 |         let _pos = self.stream.pos();
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut position_to_end::PositionToEnd`
  --> src/position_to_end.rs:47:14
   |
47 |         self.stream.seek((self._io.size - 8));
   |              ^^^^^^

error[E0609]: no field `_io` on type `&mut position_to_end::PositionToEnd`
  --> src/position_to_end.rs:47:32
   |
47 |         self.stream.seek((self._io.size - 8));
   |                                ^^^

error[E0609]: no field `stream` on type `&mut position_to_end::PositionToEnd`
  --> src/position_to_end.rs:48:65
   |
48 |         self.index = Box::new(PositionToEnd__IndexObj::new(self.stream, self, _root)?);
   |                                                                 ^^^^^^

error[E0308]: mismatched types
  --> src/opaque_external_type.rs:38:56
   |
38 |         self.one = Box::new(TermStrz::new(self.stream, self, _root)?);
   |                                                        ^^^^ expected enum `std::option::Option`, found struct `opaque_external_type::OpaqueExternalType`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut opaque_external_type::OpaqueExternalType`

error[E0308]: mismatched types
  --> src/opaque_external_type.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.one = Box::new(TermStrz::new(self.stream, self, _root)?);
39 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `opaque_with_param::OpaqueWithParam`
  --> src/opaque_with_param.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`

error[E0609]: no field `stream` on type `&mut opaque_with_param::OpaqueWithParam`
  --> src/opaque_with_param.rs:38:49
   |
38 |         self.one = Box::new(ParamsDef::new(self.stream, self, _root)?);
   |                                                 ^^^^^^

error[E0308]: mismatched types
  --> src/position_to_end.rs:48:73
   |
48 |         self.index = Box::new(PositionToEnd__IndexObj::new(self.stream, self, _root)?);
   |                                                                         ^^^^ expected enum `std::option::Option`, found struct `position_to_end::PositionToEnd`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut position_to_end::PositionToEnd`

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/position_to_end.rs:48:31
   |
48 |         self.index = Box::new(PositionToEnd__IndexObj::new(self.stream, self, _root)?);
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::boxed::Box<position_to_end::PositionToEnd__IndexObj>`
   |
   = help: the trait `std::ops::Try` is not implemented for `std::boxed::Box<position_to_end::PositionToEnd__IndexObj>`
   = note: required by `std::ops::Try::from_error`

error[E0308]: mismatched types
  --> src/opaque_with_param.rs:38:57
   |
38 |         self.one = Box::new(ParamsDef::new(self.stream, self, _root)?);
   |                                                         ^^^^ expected enum `std::option::Option`, found struct `opaque_with_param::OpaqueWithParam`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut opaque_with_param::OpaqueWithParam`

error[E0308]: mismatched types
  --> src/opaque_with_param.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.one = Box::new(ParamsDef::new(self.stream, self, _root)?);
39 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `optional_id::OptionalId`
  --> src/optional_id.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `_unnamed0`, `_unnamed1`, `_unnamed2`

error[E0609]: no field `stream` on type `&mut optional_id::OptionalId`
  --> src/optional_id.rs:39:31
   |
39 |         self._unnamed0 = self.stream.read_u1()?;
   |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut optional_id::OptionalId`
  --> src/optional_id.rs:40:31
   |
40 |         self._unnamed1 = self.stream.read_u1()?;
   |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut optional_id::OptionalId`
  --> src/optional_id.rs:41:31
   |
41 |         self._unnamed2 = self.stream.read_bytes(5)?;
   |                               ^^^^^^

error[E0308]: mismatched types
  --> src/optional_id.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self._unnamed0 = self.stream.read_u1()?;
40 | |         self._unnamed1 = self.stream.read_u1()?;
41 | |         self._unnamed2 = self.stream.read_bytes(5)?;
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `params_call_short::ParamsCallShort`
  --> src/params_call_short.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `buf1`, `buf2`

error[E0609]: no field `stream` on type `&mut params_call_short::ParamsCallShort`
  --> src/params_call_short.rs:38:64
   |
38 |         self.buf1 = Box::new(ParamsCallShort__MyStr1::new(self.stream, self, _root)?);
   |                                                                ^^^^^^

error[E0308]: mismatched types
  --> src/position_to_end.rs:48:22
   |
48 |         self.index = Box::new(PositionToEnd__IndexObj::new(self.stream, self, _root)?);
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<_>>`
              found type `std::boxed::Box<_>`
help: try using a variant of the expected type
   |
48 |         self.index = Some(<Box>::new(match ::std::ops::Try::into_result(<PositionToEnd__IndexObj>::new(self.stream,
49 |                                                                              self,
50 |                                                                              _root))
51 |                {
52 |                ::std::result::Result::Err(err) =>
53 |                    #[allow(unreachable_code)]
 ...

error[E0609]: no field `stream` on type `&mut position_to_end::PositionToEnd`
  --> src/position_to_end.rs:49:14
   |
49 |         self.stream.seek(_pos);
   |              ^^^^^^

error[E0308]: mismatched types
  --> src/position_to_end.rs:50:16
   |
50 |         return self.index;
   |                ^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `position_to_end::PositionToEnd__IndexObj`
  --> src/position_to_end.rs:67:11
   |
67 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `foo`, `bar`

error[E0609]: no field `stream` on type `&mut position_to_end::PositionToEnd__IndexObj`
  --> src/position_to_end.rs:80:25
   |
80 |         self.foo = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut position_to_end::PositionToEnd__IndexObj`
  --> src/position_to_end.rs:81:25
   |
81 |         self.bar = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/position_to_end.rs:79:27
   |
79 |           where Self: Sized {
   |  ___________________________^
80 | |         self.foo = self.stream.read_u4le()?;
81 | |         self.bar = self.stream.read_u4le()?;
82 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `process_coerce_bytes::ProcessCoerceBytes`
  --> src/process_coerce_bytes.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `records`

error[E0609]: no field `stream` on type `&mut process_coerce_bytes::ProcessCoerceBytes`
  --> src/process_coerce_bytes.rs:40:77
   |
40 |             self.records.push(Box::new(ProcessCoerceBytes__Record::new(self.stream, self, _root)?));
   |                                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/params_call_short.rs:38:72
   |
38 |         self.buf1 = Box::new(ParamsCallShort__MyStr1::new(self.stream, self, _root)?);
   |                                                                        ^^^^ expected enum `std::option::Option`, found struct `params_call_short::ParamsCallShort`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut params_call_short::ParamsCallShort`

error[E0609]: no field `stream` on type `&mut params_call_short::ParamsCallShort`
  --> src/params_call_short.rs:39:64
   |
39 |         self.buf2 = Box::new(ParamsCallShort__MyStr2::new(self.stream, self, _root)?);
   |                                                                ^^^^^^

error[E0308]: mismatched types
  --> src/process_coerce_bytes.rs:40:85
   |
40 |             self.records.push(Box::new(ProcessCoerceBytes__Record::new(self.stream, self, _root)?));
   |                                                                                     ^^^^ expected enum `std::option::Option`, found struct `process_coerce_bytes::ProcessCoerceBytes`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut process_coerce_bytes::ProcessCoerceBytes`

error[E0308]: mismatched types
  --> src/process_coerce_bytes.rs:39:9
   |
36 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
39 | /         for i in 0..2 {
40 | |             self.records.push(Box::new(ProcessCoerceBytes__Record::new(self.stream, self, _root)?));
41 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `process_coerce_bytes::ProcessCoerceBytes__Record`
  --> src/process_coerce_bytes.rs:64:11
   |
64 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `flag`, `bufUnproc`, `bufProc`, `_raw_bufProc`, `buf`

error[E0609]: no field `stream` on type `&mut process_coerce_bytes::ProcessCoerceBytes__Record`
  --> src/process_coerce_bytes.rs:77:26
   |
77 |         self.flag = self.stream.read_u1()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut process_coerce_bytes::ProcessCoerceBytes__Record`
  --> src/process_coerce_bytes.rs:79:35
   |
79 |             self.bufUnproc = self.stream.read_bytes(4)?;
   |                                   ^^^^^^

error[E0609]: no field `stream` on type `&mut process_coerce_bytes::ProcessCoerceBytes__Record`
  --> src/process_coerce_bytes.rs:82:38
   |
82 |             self._raw_bufProc = self.stream.read_bytes(4)?;
   |                                      ^^^^^^

error[E0599]: no function or associated item named `processXorOne` found for type `S` in the current scope
  --> src/process_coerce_bytes.rs:83:33
   |
83 |             self.bufProc = &mut S::processXorOne(self._raw_bufProc, 170);
   |                                 ^^^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_xor_one`?

error[E0308]: mismatched types
  --> src/process_coerce_bytes.rs:81:27
   |
81 |           if self.flag != 0 {
   |  ___________________________^
82 | |             self._raw_bufProc = self.stream.read_bytes(4)?;
83 | |             self.bufProc = &mut S::processXorOne(self._raw_bufProc, 170);
84 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `buf_unproc` on type `&mut process_coerce_bytes::ProcessCoerceBytes__Record`
  --> src/process_coerce_bytes.rs:94:45
   |
94 |         self.buf = if self.flag == 0 { self.buf_unproc } else { self.buf_proc};
   |                                             ^^^^^^^^^^

error[E0609]: no field `buf_proc` on type `&mut process_coerce_bytes::ProcessCoerceBytes__Record`
  --> src/process_coerce_bytes.rs:94:70
   |
94 |         self.buf = if self.flag == 0 { self.buf_unproc } else { self.buf_proc};
   |                                                                      ^^^^^^^^

error[E0308]: mismatched types
  --> src/process_coerce_bytes.rs:95:16
   |
95 |         return self.buf;
   |                ^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
   |
   = note: expected type `std::vec::Vec<_>`
              found type `std::option::Option<std::vec::Vec<_>>`

error[E0308]: mismatched types
  --> src/params_call_short.rs:39:72
   |
39 |         self.buf2 = Box::new(ParamsCallShort__MyStr2::new(self.stream, self, _root)?);
   |                                                                        ^^^^ expected enum `std::option::Option`, found struct `params_call_short::ParamsCallShort`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut params_call_short::ParamsCallShort`

error[E0308]: mismatched types
  --> src/params_call_short.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.buf1 = Box::new(ParamsCallShort__MyStr1::new(self.stream, self, _root)?);
39 | |         self.buf2 = Box::new(ParamsCallShort__MyStr2::new(self.stream, self, _root)?);
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `process_coerce_usertype1::ProcessCoerceUsertype1`
  --> src/process_coerce_usertype1.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `records`

error[E0609]: no field `stream` on type `params_call_short::ParamsCallShort__MyStr1`
  --> src/params_call_short.rs:58:11
   |
58 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `body`

error[E0609]: no field `stream` on type `&mut process_coerce_usertype1::ProcessCoerceUsertype1`
  --> src/process_coerce_usertype1.rs:41:81
   |
41 |             self.records.push(Box::new(ProcessCoerceUsertype1__Record::new(self.stream, self, _root)?));
   |                                                                                 ^^^^^^

warning: unreachable expression
  --> src/params_call_short.rs:71:9
   |
71 |         self.body = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `params_call_short::ParamsCallShort__MyStr2`
  --> src/params_call_short.rs:91:11
   |
91 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `body`, `trailer`

warning: unreachable expression
   --> src/params_call_short.rs:104:9
    |
104 |         self.body = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `has_trailer` on type `&mut params_call_short::ParamsCallShort__MyStr2`
   --> src/params_call_short.rs:105:17
    |
105 |         if self.has_trailer {
    |                 ^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut params_call_short::ParamsCallShort__MyStr2`
   --> src/params_call_short.rs:106:33
    |
106 |             self.trailer = self.stream.read_u1()?;
    |                                 ^^^^^^

error[E0308]: mismatched types
   --> src/params_call_short.rs:105:29
    |
105 |           if self.has_trailer {
    |  _____________________________^
106 | |             self.trailer = self.stream.read_u1()?;
107 | |         }
    | |_________^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `params_def::ParamsDef`
  --> src/params_def.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `buf`, `trailer`

warning: unreachable expression
  --> src/params_def.rs:38:9
   |
38 |         self.buf = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `has_trailer` on type `&mut params_def::ParamsDef`
  --> src/params_def.rs:39:17
   |
39 |         if self.has_trailer {
   |                 ^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut params_def::ParamsDef`
  --> src/params_def.rs:40:33
   |
40 |             self.trailer = self.stream.read_u1()?;
   |                                 ^^^^^^

error[E0308]: mismatched types
  --> src/params_def.rs:39:29
   |
39 |           if self.has_trailer {
   |  _____________________________^
40 | |             self.trailer = self.stream.read_u1()?;
41 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `params_pass_struct::ParamsPassStruct`
  --> src/params_pass_struct.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `first`, `one`

error[E0609]: no field `stream` on type `&mut params_pass_struct::ParamsPassStruct`
  --> src/params_pass_struct.rs:38:65
   |
38 |         self.first = Box::new(ParamsPassStruct__Block::new(self.stream, self, _root)?);
   |                                                                 ^^^^^^

error[E0308]: mismatched types
  --> src/process_coerce_usertype1.rs:41:89
   |
41 |             self.records.push(Box::new(ProcessCoerceUsertype1__Record::new(self.stream, self, _root)?));
   |                                                                                         ^^^^ expected enum `std::option::Option`, found struct `process_coerce_usertype1::ProcessCoerceUsertype1`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut process_coerce_usertype1::ProcessCoerceUsertype1`

error[E0308]: mismatched types
  --> src/process_coerce_usertype1.rs:40:9
   |
37 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
40 | /         for i in 0..2 {
41 | |             self.records.push(Box::new(ProcessCoerceUsertype1__Record::new(self.stream, self, _root)?));
42 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `process_coerce_usertype1::ProcessCoerceUsertype1__Record`
  --> src/process_coerce_usertype1.rs:67:11
   |
67 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `flag`, `bufUnproc`, `bufProc`, `_raw_bufUnproc`, `_raw_bufProc` ... and 2 others

error[E0609]: no field `stream` on type `&mut process_coerce_usertype1::ProcessCoerceUsertype1__Record`
  --> src/process_coerce_usertype1.rs:80:26
   |
80 |         self.flag = self.stream.read_u1()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut process_coerce_usertype1::ProcessCoerceUsertype1__Record`
  --> src/process_coerce_usertype1.rs:82:40
   |
82 |             self._raw_bufUnproc = self.stream.read_bytes(4)?;
   |                                        ^^^^^^

error[E0609]: no field `stream` on type `&mut process_coerce_usertype1::ProcessCoerceUsertype1__Record`
  --> src/process_coerce_usertype1.rs:84:77
   |
84 |             self.bufUnproc = Box::new(ProcessCoerceUsertype1__Foo::new(self.stream, self, _root)?);
   |                                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/params_pass_struct.rs:38:73
   |
38 |         self.first = Box::new(ParamsPassStruct__Block::new(self.stream, self, _root)?);
   |                                                                         ^^^^ expected enum `std::option::Option`, found struct `params_pass_struct::ParamsPassStruct`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut params_pass_struct::ParamsPassStruct`

error[E0609]: no field `stream` on type `&mut params_pass_struct::ParamsPassStruct`
  --> src/params_pass_struct.rs:39:68
   |
39 |         self.one = Box::new(ParamsPassStruct__StructType::new(self.stream, self, _root)?);
   |                                                                    ^^^^^^

error[E0308]: mismatched types
  --> src/process_coerce_usertype1.rs:84:85
   |
84 |             self.bufUnproc = Box::new(ProcessCoerceUsertype1__Foo::new(self.stream, self, _root)?);
   |                                                                                     ^^^^ expected enum `std::option::Option`, found struct `process_coerce_usertype1::ProcessCoerceUsertype1__Record`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut process_coerce_usertype1::ProcessCoerceUsertype1__Record`

error[E0609]: no field `stream` on type `&mut process_coerce_usertype1::ProcessCoerceUsertype1__Record`
  --> src/process_coerce_usertype1.rs:87:43
   |
87 |             self._raw__raw_bufProc = self.stream.read_bytes(4)?;
   |                                           ^^^^^^

error[E0599]: no function or associated item named `processXorOne` found for type `S` in the current scope
  --> src/process_coerce_usertype1.rs:88:38
   |
88 |             self._raw_bufProc = &mut S::processXorOne(self._raw__raw_bufProc, 170);
   |                                      ^^^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_xor_one`?

error[E0609]: no field `stream` on type `&mut process_coerce_usertype1::ProcessCoerceUsertype1__Record`
  --> src/process_coerce_usertype1.rs:90:75
   |
90 |             self.bufProc = Box::new(ProcessCoerceUsertype1__Foo::new(self.stream, self, _root)?);
   |                                                                           ^^^^^^

error[E0308]: mismatched types
  --> src/params_pass_struct.rs:39:76
   |
39 |         self.one = Box::new(ParamsPassStruct__StructType::new(self.stream, self, _root)?);
   |                                                                            ^^^^ expected enum `std::option::Option`, found struct `params_pass_struct::ParamsPassStruct`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut params_pass_struct::ParamsPassStruct`

error[E0308]: mismatched types
  --> src/params_pass_struct.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.first = Box::new(ParamsPassStruct__Block::new(self.stream, self, _root)?);
39 | |         self.one = Box::new(ParamsPassStruct__StructType::new(self.stream, self, _root)?);
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `params_pass_struct::ParamsPassStruct__Block`
  --> src/params_pass_struct.rs:58:11
   |
58 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `foo`

error[E0609]: no field `stream` on type `&mut params_pass_struct::ParamsPassStruct__Block`
  --> src/params_pass_struct.rs:71:25
   |
71 |         self.foo = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/params_pass_struct.rs:70:27
   |
70 |           where Self: Sized {
   |  ___________________________^
71 | |         self.foo = self.stream.read_u1()?;
72 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `params_pass_struct::ParamsPassStruct__StructType`
  --> src/params_pass_struct.rs:90:11
   |
90 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `bar`

error[E0609]: no field `stream` on type `&mut params_pass_struct::ParamsPassStruct__StructType`
   --> src/params_pass_struct.rs:103:73
    |
103 |         self.bar = Box::new(ParamsPassStruct__StructType__Baz::new(self.stream, self, _root)?);
    |                                                                         ^^^^^^

error[E0308]: mismatched types
  --> src/process_coerce_usertype1.rs:90:83
   |
90 |             self.bufProc = Box::new(ProcessCoerceUsertype1__Foo::new(self.stream, self, _root)?);
   |                                                                                   ^^^^ expected enum `std::option::Option`, found struct `process_coerce_usertype1::ProcessCoerceUsertype1__Record`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut process_coerce_usertype1::ProcessCoerceUsertype1__Record`

error[E0308]: mismatched types
  --> src/process_coerce_usertype1.rs:86:27
   |
86 |           if self.flag != 0 {
   |  ___________________________^
87 | |             self._raw__raw_bufProc = self.stream.read_bytes(4)?;
88 | |             self._raw_bufProc = &mut S::processXorOne(self._raw__raw_bufProc, 170);
89 | |             let mut io = Cursor::new(self._raw_bufProc);
90 | |             self.bufProc = Box::new(ProcessCoerceUsertype1__Foo::new(self.stream, self, _root)?);
91 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `buf_unproc` on type `&mut process_coerce_usertype1::ProcessCoerceUsertype1__Record`
   --> src/process_coerce_usertype1.rs:101:45
    |
101 |         self.buf = if self.flag == 0 { self.buf_unproc } else { self.buf_proc};
    |                                             ^^^^^^^^^^

error[E0609]: no field `buf_proc` on type `&mut process_coerce_usertype1::ProcessCoerceUsertype1__Record`
   --> src/process_coerce_usertype1.rs:101:70
    |
101 |         self.buf = if self.flag == 0 { self.buf_unproc } else { self.buf_proc};
    |                                                                      ^^^^^^^^

error[E0308]: mismatched types
   --> src/process_coerce_usertype1.rs:102:16
    |
102 |         return self.buf;
    |                ^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
    |
    = note: expected type `std::boxed::Box<_>`
               found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `process_coerce_usertype1::ProcessCoerceUsertype1__Foo`
   --> src/process_coerce_usertype1.rs:118:11
    |
118 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut process_coerce_usertype1::ProcessCoerceUsertype1__Foo`
   --> src/process_coerce_usertype1.rs:131:27
    |
131 |         self.value = self.stream.read_u4le()?;
    |                           ^^^^^^

error[E0308]: mismatched types
   --> src/process_coerce_usertype1.rs:130:27
    |
130 |           where Self: Sized {
    |  ___________________________^
131 | |         self.value = self.stream.read_u4le()?;
132 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `process_coerce_usertype2::ProcessCoerceUsertype2`
  --> src/process_coerce_usertype2.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `records`

error[E0609]: no field `stream` on type `&mut process_coerce_usertype2::ProcessCoerceUsertype2`
  --> src/process_coerce_usertype2.rs:41:81
   |
41 |             self.records.push(Box::new(ProcessCoerceUsertype2__Record::new(self.stream, self, _root)?));
   |                                                                                 ^^^^^^

error[E0308]: mismatched types
   --> src/params_pass_struct.rs:103:81
    |
103 |         self.bar = Box::new(ParamsPassStruct__StructType__Baz::new(self.stream, self, _root)?);
    |                                                                                 ^^^^ expected enum `std::option::Option`, found struct `params_pass_struct::ParamsPassStruct__StructType`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut params_pass_struct::ParamsPassStruct__StructType`

error[E0308]: mismatched types
   --> src/params_pass_struct.rs:102:27
    |
102 |           where Self: Sized {
    |  ___________________________^
103 | |         self.bar = Box::new(ParamsPassStruct__StructType__Baz::new(self.stream, self, _root)?);
104 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `params_pass_struct::ParamsPassStruct__StructType__Baz`
   --> src/params_pass_struct.rs:122:11
    |
122 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `qux`

error[E0609]: no field `stream` on type `&mut params_pass_struct::ParamsPassStruct__StructType__Baz`
   --> src/params_pass_struct.rs:135:25
    |
135 |         self.qux = self.stream.read_u1()?;
    |                         ^^^^^^

error[E0308]: mismatched types
   --> src/params_pass_struct.rs:134:27
    |
134 |           where Self: Sized {
    |  ___________________________^
135 | |         self.qux = self.stream.read_u1()?;
136 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `params_pass_usertype::ParamsPassUsertype`
  --> src/params_pass_usertype.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `first`, `one`

error[E0609]: no field `stream` on type `&mut params_pass_usertype::ParamsPassUsertype`
  --> src/params_pass_usertype.rs:38:67
   |
38 |         self.first = Box::new(ParamsPassUsertype__Block::new(self.stream, self, _root)?);
   |                                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/process_coerce_usertype2.rs:41:89
   |
41 |             self.records.push(Box::new(ProcessCoerceUsertype2__Record::new(self.stream, self, _root)?));
   |                                                                                         ^^^^ expected enum `std::option::Option`, found struct `process_coerce_usertype2::ProcessCoerceUsertype2`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut process_coerce_usertype2::ProcessCoerceUsertype2`

error[E0308]: mismatched types
  --> src/process_coerce_usertype2.rs:40:9
   |
37 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
40 | /         for i in 0..2 {
41 | |             self.records.push(Box::new(ProcessCoerceUsertype2__Record::new(self.stream, self, _root)?));
42 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `process_coerce_usertype2::ProcessCoerceUsertype2__Record`
  --> src/process_coerce_usertype2.rs:66:11
   |
66 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `flag`, `bufUnproc`, `bufProc`, `_raw_bufProc`, `_raw__raw_bufProc`, `buf`

error[E0609]: no field `stream` on type `&mut process_coerce_usertype2::ProcessCoerceUsertype2__Record`
  --> src/process_coerce_usertype2.rs:79:26
   |
79 |         self.flag = self.stream.read_u1()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut process_coerce_usertype2::ProcessCoerceUsertype2__Record`
  --> src/process_coerce_usertype2.rs:81:77
   |
81 |             self.bufUnproc = Box::new(ProcessCoerceUsertype2__Foo::new(self.stream, self, _root)?);
   |                                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/params_pass_usertype.rs:38:75
   |
38 |         self.first = Box::new(ParamsPassUsertype__Block::new(self.stream, self, _root)?);
   |                                                                           ^^^^ expected enum `std::option::Option`, found struct `params_pass_usertype::ParamsPassUsertype`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut params_pass_usertype::ParamsPassUsertype`

error[E0609]: no field `stream` on type `&mut params_pass_usertype::ParamsPassUsertype`
  --> src/params_pass_usertype.rs:39:69
   |
39 |         self.one = Box::new(ParamsPassUsertype__ParamType::new(self.stream, self, _root)?);
   |                                                                     ^^^^^^

error[E0308]: mismatched types
  --> src/process_coerce_usertype2.rs:81:85
   |
81 |             self.bufUnproc = Box::new(ProcessCoerceUsertype2__Foo::new(self.stream, self, _root)?);
   |                                                                                     ^^^^ expected enum `std::option::Option`, found struct `process_coerce_usertype2::ProcessCoerceUsertype2__Record`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut process_coerce_usertype2::ProcessCoerceUsertype2__Record`

error[E0609]: no field `stream` on type `&mut process_coerce_usertype2::ProcessCoerceUsertype2__Record`
  --> src/process_coerce_usertype2.rs:84:43
   |
84 |             self._raw__raw_bufProc = self.stream.read_bytes(4)?;
   |                                           ^^^^^^

error[E0599]: no function or associated item named `processXorOne` found for type `S` in the current scope
  --> src/process_coerce_usertype2.rs:85:38
   |
85 |             self._raw_bufProc = &mut S::processXorOne(self._raw__raw_bufProc, 170);
   |                                      ^^^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_xor_one`?

error[E0308]: mismatched types
  --> src/params_pass_usertype.rs:39:77
   |
39 |         self.one = Box::new(ParamsPassUsertype__ParamType::new(self.stream, self, _root)?);
   |                                                                             ^^^^ expected enum `std::option::Option`, found struct `params_pass_usertype::ParamsPassUsertype`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut params_pass_usertype::ParamsPassUsertype`

error[E0609]: no field `stream` on type `&mut process_coerce_usertype2::ProcessCoerceUsertype2__Record`
  --> src/process_coerce_usertype2.rs:87:75
   |
87 |             self.bufProc = Box::new(ProcessCoerceUsertype2__Foo::new(self.stream, self, _root)?);
   |                                                                           ^^^^^^
error[E0308]: mismatched types
  --> src/params_pass_usertype.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.first = Box::new(ParamsPassUsertype__Block::new(self.stream, self, _root)?);
39 | |         self.one = Box::new(ParamsPassUsertype__ParamType::new(self.stream, self, _root)?);
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()

   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `params_pass_usertype::ParamsPassUsertype__Block`
  --> src/params_pass_usertype.rs:58:11
   |
58 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `foo`

error[E0609]: no field `stream` on type `&mut params_pass_usertype::ParamsPassUsertype__Block`
  --> src/params_pass_usertype.rs:71:25
   |
71 |         self.foo = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/params_pass_usertype.rs:70:27
   |
70 |           where Self: Sized {
   |  ___________________________^
71 | |         self.foo = self.stream.read_u1()?;
72 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `params_pass_usertype::ParamsPassUsertype__ParamType`
  --> src/params_pass_usertype.rs:90:11
   |
90 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `buf`

error[E0609]: no field `stream` on type `&mut params_pass_usertype::ParamsPassUsertype__ParamType`
   --> src/params_pass_usertype.rs:103:25
    |
103 |         self.buf = self.stream.read_bytes(self.foo.foo)?;
    |                         ^^^^^^

error[E0609]: no field `foo` on type `&mut params_pass_usertype::ParamsPassUsertype__ParamType`
   --> src/params_pass_usertype.rs:103:48
    |
103 |         self.buf = self.stream.read_bytes(self.foo.foo)?;
    |                                                ^^^

error[E0308]: mismatched types
   --> src/params_pass_usertype.rs:102:27
    |
102 |           where Self: Sized {
    |  ___________________________^
103 | |         self.buf = self.stream.read_bytes(self.foo.foo)?;
104 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `position_abs::PositionAbs`
  --> src/position_abs.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `indexOffset`, `index`

error[E0609]: no field `stream` on type `&mut position_abs::PositionAbs`
  --> src/position_abs.rs:38:33
   |
38 |         self.indexOffset = self.stream.read_u4le()?;
   |                                 ^^^^^^

error[E0308]: mismatched types
  --> src/position_abs.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self.indexOffset = self.stream.read_u4le()?;
39 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut position_abs::PositionAbs`
  --> src/position_abs.rs:48:25
   |
48 |         let _pos = self.stream.pos();
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut position_abs::PositionAbs`
  --> src/position_abs.rs:49:14
   |
49 |         self.stream.seek(self.index_offset);
   |              ^^^^^^

error[E0609]: no field `index_offset` on type `&mut position_abs::PositionAbs`
  --> src/position_abs.rs:49:31
   |
49 |         self.stream.seek(self.index_offset);
   |                               ^^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut position_abs::PositionAbs`
  --> src/position_abs.rs:50:63
   |
50 |         self.index = Box::new(PositionAbs__IndexObj::new(self.stream, self, _root)?);
   |                                                               ^^^^^^

error[E0308]: mismatched types
  --> src/process_coerce_usertype2.rs:87:83
   |
87 |             self.bufProc = Box::new(ProcessCoerceUsertype2__Foo::new(self.stream, self, _root)?);
   |                                                                                   ^^^^ expected enum `std::option::Option`, found struct `process_coerce_usertype2::ProcessCoerceUsertype2__Record`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut process_coerce_usertype2::ProcessCoerceUsertype2__Record`

error[E0308]: mismatched types
  --> src/process_coerce_usertype2.rs:83:27
   |
83 |           if self.flag != 0 {
   |  ___________________________^
84 | |             self._raw__raw_bufProc = self.stream.read_bytes(4)?;
85 | |             self._raw_bufProc = &mut S::processXorOne(self._raw__raw_bufProc, 170);
86 | |             let mut io = Cursor::new(self._raw_bufProc);
87 | |             self.bufProc = Box::new(ProcessCoerceUsertype2__Foo::new(self.stream, self, _root)?);
88 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `buf_unproc` on type `&mut process_coerce_usertype2::ProcessCoerceUsertype2__Record`
  --> src/process_coerce_usertype2.rs:98:45
   |
98 |         self.buf = if self.flag == 0 { self.buf_unproc } else { self.buf_proc};
   |                                             ^^^^^^^^^^

error[E0609]: no field `buf_proc` on type `&mut process_coerce_usertype2::ProcessCoerceUsertype2__Record`
  --> src/process_coerce_usertype2.rs:98:70
   |
98 |         self.buf = if self.flag == 0 { self.buf_unproc } else { self.buf_proc};
   |                                                                      ^^^^^^^^

error[E0308]: mismatched types
  --> src/process_coerce_usertype2.rs:99:16
   |
99 |         return self.buf;
   |                ^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `process_coerce_usertype2::ProcessCoerceUsertype2__Foo`
   --> src/process_coerce_usertype2.rs:115:11
    |
115 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut process_coerce_usertype2::ProcessCoerceUsertype2__Foo`
   --> src/process_coerce_usertype2.rs:128:27
    |
128 |         self.value = self.stream.read_u4le()?;
    |                           ^^^^^^

error[E0308]: mismatched types
   --> src/process_coerce_usertype2.rs:127:27
    |
127 |           where Self: Sized {
    |  ___________________________^
128 | |         self.value = self.stream.read_u4le()?;
129 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `process_custom::ProcessCustom`
  --> src/process_custom.rs:32:11
   |
32 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `buf1`, `buf2`, `key`, `buf3`, `_raw_buf1` ... and 2 others

error[E0609]: no field `stream` on type `&mut process_custom::ProcessCustom`
  --> src/process_custom.rs:45:31
   |
45 |         self._raw_buf1 = self.stream.read_bytes(5)?;
   |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut process_custom::ProcessCustom`
  --> src/process_custom.rs:48:31
   |
48 |         self._raw_buf2 = self.stream.read_bytes(5)?;
   |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut process_custom::ProcessCustom`
  --> src/process_custom.rs:51:25
   |
51 |         self.key = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut process_custom::ProcessCustom`
  --> src/process_custom.rs:52:31
   |
52 |         self._raw_buf3 = self.stream.read_bytes(5)?;
   |                               ^^^^^^

error[E0308]: mismatched types
  --> src/process_custom.rs:44:27
   |
44 |           where Self: Sized {
   |  ___________________________^
45 | |         self._raw_buf1 = self.stream.read_bytes(5)?;
46 | |         let _process = MyCustomFx::new(7, true, vec!([0x20, 0x30, 0x40]));
47 | |         self.buf1 = _process.decode(self._raw_buf1);
...  |
54 | |         self.buf3 = _process.decode(self._raw_buf3);
55 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `process_rotate::ProcessRotate`
  --> src/process_rotate.rs:30:11
   |
30 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `buf1`, `buf2`, `key`, `buf3`, `_raw_buf1` ... and 2 others

error[E0609]: no field `stream` on type `&mut process_rotate::ProcessRotate`
  --> src/process_rotate.rs:43:31
   |
43 |         self._raw_buf1 = self.stream.read_bytes(5)?;
   |                               ^^^^^^

error[E0308]: mismatched types
  --> src/position_abs.rs:50:71
   |
50 |         self.index = Box::new(PositionAbs__IndexObj::new(self.stream, self, _root)?);
   |                                                                       ^^^^ expected enum `std::option::Option`, found struct `position_abs::PositionAbs`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut position_abs::PositionAbs`

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/position_abs.rs:50:31
   |
50 |         self.index = Box::new(PositionAbs__IndexObj::new(self.stream, self, _root)?);
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::boxed::Box<position_abs::PositionAbs__IndexObj>`
   |
   = help: the trait `std::ops::Try` is not implemented for `std::boxed::Box<position_abs::PositionAbs__IndexObj>`
   = note: required by `std::ops::Try::from_error`

error[E0599]: no function or associated item named `processRotateLeft` found for type `S` in the current scope
  --> src/process_rotate.rs:44:26
   |
44 |         self.buf1 = &mut S::processRotateLeft(self._raw_buf1, 3, 1);
   |                          ^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_rotate_left`?

error[E0609]: no field `stream` on type `&mut process_rotate::ProcessRotate`
  --> src/process_rotate.rs:45:31
   |
45 |         self._raw_buf2 = self.stream.read_bytes(5)?;
   |                               ^^^^^^

error[E0599]: no function or associated item named `processRotateLeft` found for type `S` in the current scope
  --> src/process_rotate.rs:46:26
   |
46 |         self.buf2 = &mut S::processRotateLeft(self._raw_buf2, 8 - (3), 1);
   |                          ^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_rotate_left`?

error[E0609]: no field `stream` on type `&mut process_rotate::ProcessRotate`
  --> src/process_rotate.rs:47:25
   |
47 |         self.key = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut process_rotate::ProcessRotate`
  --> src/process_rotate.rs:48:31
   |
48 |         self._raw_buf3 = self.stream.read_bytes(5)?;
   |                               ^^^^^^

error[E0599]: no function or associated item named `processRotateLeft` found for type `S` in the current scope
  --> src/process_rotate.rs:49:26
   |
49 |         self.buf3 = &mut S::processRotateLeft(self._raw_buf3, self.key, 1);
   |                          ^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_rotate_left`?

error[E0308]: mismatched types
  --> src/process_rotate.rs:42:27
   |
42 |           where Self: Sized {
   |  ___________________________^
43 | |         self._raw_buf1 = self.stream.read_bytes(5)?;
44 | |         self.buf1 = &mut S::processRotateLeft(self._raw_buf1, 3, 1);
45 | |         self._raw_buf2 = self.stream.read_bytes(5)?;
...  |
49 | |         self.buf3 = &mut S::processRotateLeft(self._raw_buf3, self.key, 1);
50 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `process_to_user::ProcessToUser`
  --> src/process_to_user.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `buf1`, `_raw_buf1`, `_raw__raw_buf1`

error[E0609]: no field `stream` on type `&mut process_to_user::ProcessToUser`
  --> src/process_to_user.rs:40:36
   |
40 |         self._raw__raw_buf1 = self.stream.read_bytes(5)?;
   |                                    ^^^^^^

error[E0599]: no function or associated item named `processRotateLeft` found for type `S` in the current scope
  --> src/process_to_user.rs:41:31
   |
41 |         self._raw_buf1 = &mut S::processRotateLeft(self._raw__raw_buf1, 3, 1);
   |                               ^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_rotate_left`?

error[E0609]: no field `stream` on type `&mut process_to_user::ProcessToUser`
  --> src/process_to_user.rs:43:63
   |
43 |         self.buf1 = Box::new(ProcessToUser__JustStr::new(self.stream, self, _root)?);
   |                                                               ^^^^^^

error[E0308]: mismatched types
  --> src/position_abs.rs:50:22
   |
50 |         self.index = Box::new(PositionAbs__IndexObj::new(self.stream, self, _root)?);
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<_>>`
              found type `std::boxed::Box<_>`
help: try using a variant of the expected type
   |
50 |         self.index = Some(<Box>::new(match ::std::ops::Try::into_result(<PositionAbs__IndexObj>::new(self.stream,
51 |                                                                            self,
52 |                                                                            _root))
53 |                {
54 |                ::std::result::Result::Err(err) =>
55 |                    #[allow(unreachable_code)]
 ...

error[E0609]: no field `stream` on type `&mut position_abs::PositionAbs`
  --> src/position_abs.rs:51:14
   |
51 |         self.stream.seek(_pos);
   |              ^^^^^^

error[E0308]: mismatched types
  --> src/position_abs.rs:52:16
   |
52 |         return self.index;
   |                ^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `position_abs::PositionAbs__IndexObj`
  --> src/position_abs.rs:68:11
   |
68 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `entry`

warning: unreachable expression
  --> src/position_abs.rs:81:9
   |
81 |         self.entry = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `position_in_seq::PositionInSeq`
  --> src/position_in_seq.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `numbers`, `header`

error[E0609]: no field `qty_numbers` on type `std::option::Option<std::boxed::Box<position_in_seq::PositionInSeq__HeaderObj>>`
  --> src/position_in_seq.rs:40:33
   |
40 |         for i in 0..self.header.qty_numbers {
   |                                 ^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut position_in_seq::PositionInSeq`
  --> src/position_in_seq.rs:41:36
   |
41 |             self.numbers.push(self.stream.read_u1()?);
   |                                    ^^^^^^

error[E0308]: mismatched types
  --> src/position_in_seq.rs:40:9
   |
37 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
40 | /         for i in 0..self.header.qty_numbers {
41 | |             self.numbers.push(self.stream.read_u1()?);
42 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut position_in_seq::PositionInSeq`
  --> src/position_in_seq.rs:52:25
   |
52 |         let _pos = self.stream.pos();
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut position_in_seq::PositionInSeq`
  --> src/position_in_seq.rs:53:14
   |
53 |         self.stream.seek(16);
   |              ^^^^^^

error[E0609]: no field `stream` on type `&mut position_in_seq::PositionInSeq`
  --> src/position_in_seq.rs:54:67
   |
54 |         self.header = Box::new(PositionInSeq__HeaderObj::new(self.stream, self, _root)?);
   |                                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/process_to_user.rs:43:71
   |
43 |         self.buf1 = Box::new(ProcessToUser__JustStr::new(self.stream, self, _root)?);
   |                                                                       ^^^^ expected enum `std::option::Option`, found struct `process_to_user::ProcessToUser`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut process_to_user::ProcessToUser`

error[E0308]: mismatched types
  --> src/process_to_user.rs:39:27
   |
39 |           where Self: Sized {
   |  ___________________________^
40 | |         self._raw__raw_buf1 = self.stream.read_bytes(5)?;
41 | |         self._raw_buf1 = &mut S::processRotateLeft(self._raw__raw_buf1, 3, 1);
42 | |         let mut io = Cursor::new(self._raw_buf1);
43 | |         self.buf1 = Box::new(ProcessToUser__JustStr::new(self.stream, self, _root)?);
44 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `process_to_user::ProcessToUser__JustStr`
  --> src/process_to_user.rs:62:11
   |
62 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `str`

warning: unreachable expression
  --> src/process_to_user.rs:75:9
   |
75 |         self.str = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `process_xor4_const::ProcessXor4Const`
  --> src/process_xor4_const.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `key`, `buf`, `_raw_buf`

error[E0609]: no field `stream` on type `&mut process_xor4_const::ProcessXor4Const`
  --> src/process_xor4_const.rs:39:25
   |
39 |         self.key = self.stream.read_bytes(4)?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut process_xor4_const::ProcessXor4Const`
  --> src/process_xor4_const.rs:40:30
   |
40 |         self._raw_buf = self.stream.read_bytes_full()?;
   |                              ^^^^^^

error[E0599]: no function or associated item named `processXorMany` found for type `S` in the current scope
  --> src/process_xor4_const.rs:41:25
   |
41 |         self.buf = &mut S::processXorMany(self._raw_buf, vec!([0xec, 0xbb, 0xa3, 0x14]));
   |                         ^^^^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_xor_many`?

error[E0308]: mismatched types
  --> src/process_xor4_const.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.key = self.stream.read_bytes(4)?;
40 | |         self._raw_buf = self.stream.read_bytes_full()?;
41 | |         self.buf = &mut S::processXorMany(self._raw_buf, vec!([0xec, 0xbb, 0xa3, 0x14]));
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `process_xor4_value::ProcessXor4Value`
  --> src/process_xor4_value.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `key`, `buf`, `_raw_buf`

error[E0609]: no field `stream` on type `&mut process_xor4_value::ProcessXor4Value`
  --> src/process_xor4_value.rs:39:25
   |
39 |         self.key = self.stream.read_bytes(4)?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut process_xor4_value::ProcessXor4Value`
  --> src/process_xor4_value.rs:40:30
   |
40 |         self._raw_buf = self.stream.read_bytes_full()?;
   |                              ^^^^^^

error[E0599]: no function or associated item named `processXorMany` found for type `S` in the current scope
  --> src/process_xor4_value.rs:41:25
   |
41 |         self.buf = &mut S::processXorMany(self._raw_buf, self.key);
   |                         ^^^^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_xor_many`?

error[E0308]: mismatched types
  --> src/process_xor4_value.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.key = self.stream.read_bytes(4)?;
40 | |         self._raw_buf = self.stream.read_bytes_full()?;
41 | |         self.buf = &mut S::processXorMany(self._raw_buf, self.key);
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `process_xor_const::ProcessXorConst`
  --> src/process_xor_const.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `key`, `buf`, `_raw_buf`

error[E0609]: no field `stream` on type `&mut process_xor_const::ProcessXorConst`
  --> src/process_xor_const.rs:39:25
   |
39 |         self.key = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut process_xor_const::ProcessXorConst`
  --> src/process_xor_const.rs:40:30
   |
40 |         self._raw_buf = self.stream.read_bytes_full()?;
   |                              ^^^^^^

error[E0599]: no function or associated item named `processXorOne` found for type `S` in the current scope
  --> src/process_xor_const.rs:41:25
   |
41 |         self.buf = &mut S::processXorOne(self._raw_buf, 255);
   |                         ^^^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_xor_one`?

error[E0308]: mismatched types
  --> src/process_xor_const.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.key = self.stream.read_u1()?;
40 | |         self._raw_buf = self.stream.read_bytes_full()?;
41 | |         self.buf = &mut S::processXorOne(self._raw_buf, 255);
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `process_xor_value::ProcessXorValue`
  --> src/process_xor_value.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `key`, `buf`, `_raw_buf`

error[E0609]: no field `stream` on type `&mut process_xor_value::ProcessXorValue`
  --> src/process_xor_value.rs:39:25
   |
39 |         self.key = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut process_xor_value::ProcessXorValue`
  --> src/process_xor_value.rs:40:30
   |
40 |         self._raw_buf = self.stream.read_bytes_full()?;
   |                              ^^^^^^

error[E0599]: no function or associated item named `processXorOne` found for type `S` in the current scope
  --> src/process_xor_value.rs:41:25
   |
41 |         self.buf = &mut S::processXorOne(self._raw_buf, self.key);
   |                         ^^^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_xor_one`?

error[E0308]: mismatched types
  --> src/process_xor_value.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.key = self.stream.read_u1()?;
40 | |         self._raw_buf = self.stream.read_bytes_full()?;
41 | |         self.buf = &mut S::processXorOne(self._raw_buf, self.key);
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `recursive_one::RecursiveOne`
  --> src/recursive_one.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `next`

error[E0308]: mismatched types
  --> src/position_in_seq.rs:54:75
   |
54 |         self.header = Box::new(PositionInSeq__HeaderObj::new(self.stream, self, _root)?);
   |                                                                           ^^^^ expected enum `std::option::Option`, found struct `position_in_seq::PositionInSeq`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut position_in_seq::PositionInSeq`

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/position_in_seq.rs:54:32
   |
54 |         self.header = Box::new(PositionInSeq__HeaderObj::new(self.stream, self, _root)?);
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::boxed::Box<position_in_seq::PositionInSeq__HeaderObj>`
   |
   = help: the trait `std::ops::Try` is not implemented for `std::boxed::Box<position_in_seq::PositionInSeq__HeaderObj>`
   = note: required by `std::ops::Try::from_error`

error[E0609]: no field `stream` on type `&mut recursive_one::RecursiveOne`
  --> src/recursive_one.rs:38:25
   |
38 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut recursive_one::RecursiveOne`
  --> src/recursive_one.rs:41:61
   |
41 |                 self.next = Box::new(RecursiveOne::new(self.stream, self, _root)?);
   |                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/position_in_seq.rs:54:23
   |
54 |         self.header = Box::new(PositionInSeq__HeaderObj::new(self.stream, self, _root)?);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<_>>`
              found type `std::boxed::Box<_>`
help: try using a variant of the expected type
   |
54 |         self.header = Some(<Box>::new(match ::std::ops::Try::into_result(<PositionInSeq__HeaderObj>::new(self.stream,
55 |                                                                               self,
56 |                                                                               _root))
57 |                {
58 |                ::std::result::Result::Err(err) =>
59 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/recursive_one.rs:41:69
   |
41 |                 self.next = Box::new(RecursiveOne::new(self.stream, self, _root)?);
   |                                                                     ^^^^ expected enum `std::option::Option`, found struct `recursive_one::RecursiveOne`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut recursive_one::RecursiveOne`

error[E0609]: no field `stream` on type `&mut position_in_seq::PositionInSeq`
  --> src/position_in_seq.rs:55:14
   |
55 |         self.stream.seek(_pos);
   |              ^^^^^^

error[E0308]: mismatched types
  --> src/position_in_seq.rs:56:16
   |
56 |         return self.header;
   |                ^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `position_in_seq::PositionInSeq__HeaderObj`
  --> src/position_in_seq.rs:72:11
   |
72 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `qtyNumbers`

error[E0609]: no field `stream` on type `&mut position_in_seq::PositionInSeq__HeaderObj`
  --> src/position_in_seq.rs:85:32
   |
85 |         self.qtyNumbers = self.stream.read_u4le()?;
   |                                ^^^^^^

error[E0308]: mismatched types
  --> src/position_in_seq.rs:84:27
   |
84 |           where Self: Sized {
   |  ___________________________^
85 | |         self.qtyNumbers = self.stream.read_u4le()?;
86 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `position_to_end::PositionToEnd`
  --> src/position_to_end.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `index`

error[E0308]: mismatched types
  --> src/position_to_end.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut position_to_end::PositionToEnd`
  --> src/position_to_end.rs:46:25
   |
46 |         let _pos = self.stream.pos();
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut position_to_end::PositionToEnd`
  --> src/position_to_end.rs:47:14
   |
47 |         self.stream.seek((self._io.size - 8));
   |              ^^^^^^

error[E0609]: no field `_io` on type `&mut position_to_end::PositionToEnd`
  --> src/position_to_end.rs:47:32
   |
47 |         self.stream.seek((self._io.size - 8));
   |                                ^^^

error[E0609]: no field `stream` on type `&mut position_to_end::PositionToEnd`
  --> src/position_to_end.rs:48:65
   |
48 |         self.index = Box::new(PositionToEnd__IndexObj::new(self.stream, self, _root)?);
   |                                                                 ^^^^^^

error[E0308]: mismatched types
  --> src/recursive_one.rs:41:29
   |
41 |                 self.next = Box::new(RecursiveOne::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<recursive_one::RecursiveOne>`
help: try using a variant of the expected type
   |
41 |                 self.next = Some(<Box>::new(match ::std::ops::Try::into_result(<RecursiveOne>::new(self.stream,
42 |                                                                   self,
43 |                                                                   _root)) {
44 |                ::std::result::Result::Err(err) =>
45 |                    #[allow(unreachable_code)]
46 |                    return ::std::ops::Try::from_error(::std::convert::From::from(err)),
 ...

error[E0308]: mismatched types
  --> src/recursive_one.rs:40:18
   |
40 |               0 => {
   |  __________________^
41 | |                 self.next = Box::new(RecursiveOne::new(self.stream, self, _root)?);
42 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut recursive_one::RecursiveOne`
  --> src/recursive_one.rs:44:61
   |
44 |                 self.next = Box::new(RecursiveOne::new(self.stream, self, _root)?);
   |                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/position_to_end.rs:48:73
   |
48 |         self.index = Box::new(PositionToEnd__IndexObj::new(self.stream, self, _root)?);
   |                                                                         ^^^^ expected enum `std::option::Option`, found struct `position_to_end::PositionToEnd`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut position_to_end::PositionToEnd`

error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)
  --> src/position_to_end.rs:48:31
   |
48 |         self.index = Box::new(PositionToEnd__IndexObj::new(self.stream, self, _root)?);
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `std::boxed::Box<position_to_end::PositionToEnd__IndexObj>`
   |
   = help: the trait `std::ops::Try` is not implemented for `std::boxed::Box<position_to_end::PositionToEnd__IndexObj>`
   = note: required by `std::ops::Try::from_error`

error[E0308]: mismatched types
  --> src/recursive_one.rs:44:69
   |
44 |                 self.next = Box::new(RecursiveOne::new(self.stream, self, _root)?);
   |                                                                     ^^^^ expected enum `std::option::Option`, found struct `recursive_one::RecursiveOne`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut recursive_one::RecursiveOne`

error[E0308]: mismatched types
  --> src/position_to_end.rs:48:22
   |
48 |         self.index = Box::new(PositionToEnd__IndexObj::new(self.stream, self, _root)?);
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<_>>`
              found type `std::boxed::Box<_>`
help: try using a variant of the expected type
   |
48 |         self.index = Some(<Box>::new(match ::std::ops::Try::into_result(<PositionToEnd__IndexObj>::new(self.stream,
49 |                                                                              self,
50 |                                                                              _root))
51 |                {
52 |                ::std::result::Result::Err(err) =>
53 |                    #[allow(unreachable_code)]
 ...

error[E0609]: no field `stream` on type `&mut position_to_end::PositionToEnd`
  --> src/position_to_end.rs:49:14
   |
49 |         self.stream.seek(_pos);
   |              ^^^^^^

error[E0308]: mismatched types
  --> src/position_to_end.rs:50:16
   |
50 |         return self.index;
   |                ^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `position_to_end::PositionToEnd__IndexObj`
  --> src/position_to_end.rs:67:11
   |
67 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `foo`, `bar`

error[E0609]: no field `stream` on type `&mut position_to_end::PositionToEnd__IndexObj`
  --> src/position_to_end.rs:80:25
   |
80 |         self.foo = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut position_to_end::PositionToEnd__IndexObj`
  --> src/position_to_end.rs:81:25
   |
81 |         self.bar = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/position_to_end.rs:79:27
   |
79 |           where Self: Sized {
   |  ___________________________^
80 | |         self.foo = self.stream.read_u4le()?;
81 | |         self.bar = self.stream.read_u4le()?;
82 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `process_coerce_bytes::ProcessCoerceBytes`
  --> src/process_coerce_bytes.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `records`

error[E0609]: no field `stream` on type `&mut process_coerce_bytes::ProcessCoerceBytes`
  --> src/process_coerce_bytes.rs:40:77
   |
40 |             self.records.push(Box::new(ProcessCoerceBytes__Record::new(self.stream, self, _root)?));
   |                                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/recursive_one.rs:44:29
   |
44 |                 self.next = Box::new(RecursiveOne::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<recursive_one::RecursiveOne>`
help: try using a variant of the expected type
   |
44 |                 self.next = Some(<Box>::new(match ::std::ops::Try::into_result(<RecursiveOne>::new(self.stream,
45 |                                                                   self,
46 |                                                                   _root)) {
47 |                ::std::result::Result::Err(err) =>
48 |                    #[allow(unreachable_code)]
49 |                    return ::std::ops::Try::from_error(::std::convert::From::from(err)),
 ...

error[E0308]: mismatched types
  --> src/recursive_one.rs:43:18
   |
43 |               1 => {
   |  __________________^
44 | |                 self.next = Box::new(RecursiveOne::new(self.stream, self, _root)?);
45 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut recursive_one::RecursiveOne`
  --> src/recursive_one.rs:47:61
   |
47 |                 self.next = Box::new(RecursiveOne::new(self.stream, self, _root)?);
   |                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/process_coerce_bytes.rs:40:85
   |
40 |             self.records.push(Box::new(ProcessCoerceBytes__Record::new(self.stream, self, _root)?));
   |                                                                                     ^^^^ expected enum `std::option::Option`, found struct `process_coerce_bytes::ProcessCoerceBytes`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut process_coerce_bytes::ProcessCoerceBytes`

error[E0308]: mismatched types
  --> src/process_coerce_bytes.rs:39:9
   |
36 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
39 | /         for i in 0..2 {
40 | |             self.records.push(Box::new(ProcessCoerceBytes__Record::new(self.stream, self, _root)?));
41 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `process_coerce_bytes::ProcessCoerceBytes__Record`
  --> src/process_coerce_bytes.rs:64:11
   |
64 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `flag`, `bufUnproc`, `bufProc`, `_raw_bufProc`, `buf`

error[E0609]: no field `stream` on type `&mut process_coerce_bytes::ProcessCoerceBytes__Record`
  --> src/process_coerce_bytes.rs:77:26
   |
77 |         self.flag = self.stream.read_u1()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut process_coerce_bytes::ProcessCoerceBytes__Record`
  --> src/process_coerce_bytes.rs:79:35
   |
79 |             self.bufUnproc = self.stream.read_bytes(4)?;
   |                                   ^^^^^^

error[E0609]: no field `stream` on type `&mut process_coerce_bytes::ProcessCoerceBytes__Record`
  --> src/process_coerce_bytes.rs:82:38
   |
82 |             self._raw_bufProc = self.stream.read_bytes(4)?;
   |                                      ^^^^^^

error[E0599]: no function or associated item named `processXorOne` found for type `S` in the current scope
  --> src/process_coerce_bytes.rs:83:33
   |
83 |             self.bufProc = &mut S::processXorOne(self._raw_bufProc, 170);
   |                                 ^^^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_xor_one`?

error[E0308]: mismatched types
  --> src/process_coerce_bytes.rs:81:27
   |
81 |           if self.flag != 0 {
   |  ___________________________^
82 | |             self._raw_bufProc = self.stream.read_bytes(4)?;
83 | |             self.bufProc = &mut S::processXorOne(self._raw_bufProc, 170);
84 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `buf_unproc` on type `&mut process_coerce_bytes::ProcessCoerceBytes__Record`
  --> src/process_coerce_bytes.rs:94:45
   |
94 |         self.buf = if self.flag == 0 { self.buf_unproc } else { self.buf_proc};
   |                                             ^^^^^^^^^^

error[E0609]: no field `buf_proc` on type `&mut process_coerce_bytes::ProcessCoerceBytes__Record`
  --> src/process_coerce_bytes.rs:94:70
   |
94 |         self.buf = if self.flag == 0 { self.buf_unproc } else { self.buf_proc};
   |                                                                      ^^^^^^^^

error[E0308]: mismatched types
  --> src/process_coerce_bytes.rs:95:16
   |
95 |         return self.buf;
   |                ^^^^^^^^ expected struct `std::vec::Vec`, found enum `std::option::Option`
   |
   = note: expected type `std::vec::Vec<_>`
              found type `std::option::Option<std::vec::Vec<_>>`

error[E0609]: no field `stream` on type `process_coerce_usertype1::ProcessCoerceUsertype1`
  --> src/process_coerce_usertype1.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `records`

error[E0609]: no field `stream` on type `&mut process_coerce_usertype1::ProcessCoerceUsertype1`
  --> src/process_coerce_usertype1.rs:41:81
   |
41 |             self.records.push(Box::new(ProcessCoerceUsertype1__Record::new(self.stream, self, _root)?));
   |                                                                                 ^^^^^^

error[E0308]: mismatched types
  --> src/recursive_one.rs:47:69
   |
47 |                 self.next = Box::new(RecursiveOne::new(self.stream, self, _root)?);
   |                                                                     ^^^^ expected enum `std::option::Option`, found struct `recursive_one::RecursiveOne`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut recursive_one::RecursiveOne`

error[E0308]: mismatched types
  --> src/recursive_one.rs:47:29
   |
47 |                 self.next = Box::new(RecursiveOne::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<recursive_one::RecursiveOne>`
help: try using a variant of the expected type
   |
47 |                 self.next = Some(<Box>::new(match ::std::ops::Try::into_result(<RecursiveOne>::new(self.stream,
48 |                                                                   self,
49 |                                                                   _root)) {
50 |                ::std::result::Result::Err(err) =>
51 |                    #[allow(unreachable_code)]
52 |                    return ::std::ops::Try::from_error(::std::convert::From::from(err)),
 ...

error[E0308]: mismatched types
  --> src/recursive_one.rs:46:18
   |
46 |               2 => {
   |  __________________^
47 | |                 self.next = Box::new(RecursiveOne::new(self.stream, self, _root)?);
48 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut recursive_one::RecursiveOne`
  --> src/recursive_one.rs:50:67
   |
50 |                 self.next = Box::new(RecursiveOne__Fini::new(self.stream, self, _root)?);
   |                                                                   ^^^^^^
error[E0308]: mismatched types
  --> src/process_coerce_usertype1.rs:41:89
   |
41 |             self.records.push(Box::new(ProcessCoerceUsertype1__Record::new(self.stream, self, _root)?));
   |                                                                                         ^^^^ expected enum `std::option::Option`, found struct `process_coerce_usertype1::ProcessCoerceUsertype1`

   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut process_coerce_usertype1::ProcessCoerceUsertype1`

error[E0308]: mismatched types
  --> src/process_coerce_usertype1.rs:40:9
   |
37 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
40 | /         for i in 0..2 {
41 | |             self.records.push(Box::new(ProcessCoerceUsertype1__Record::new(self.stream, self, _root)?));
42 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `process_coerce_usertype1::ProcessCoerceUsertype1__Record`
  --> src/process_coerce_usertype1.rs:67:11
   |
67 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `flag`, `bufUnproc`, `bufProc`, `_raw_bufUnproc`, `_raw_bufProc` ... and 2 others

error[E0609]: no field `stream` on type `&mut process_coerce_usertype1::ProcessCoerceUsertype1__Record`
  --> src/process_coerce_usertype1.rs:80:26
   |
80 |         self.flag = self.stream.read_u1()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut process_coerce_usertype1::ProcessCoerceUsertype1__Record`
  --> src/process_coerce_usertype1.rs:82:40
   |
82 |             self._raw_bufUnproc = self.stream.read_bytes(4)?;
   |                                        ^^^^^^

error[E0609]: no field `stream` on type `&mut process_coerce_usertype1::ProcessCoerceUsertype1__Record`
  --> src/process_coerce_usertype1.rs:84:77
   |
84 |             self.bufUnproc = Box::new(ProcessCoerceUsertype1__Foo::new(self.stream, self, _root)?);
   |                                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/recursive_one.rs:50:75
   |
50 |                 self.next = Box::new(RecursiveOne__Fini::new(self.stream, self, _root)?);
   |                                                                           ^^^^ expected enum `std::option::Option`, found struct `recursive_one::RecursiveOne`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut recursive_one::RecursiveOne`

error[E0308]: mismatched types
  --> src/process_coerce_usertype1.rs:84:85
   |
84 |             self.bufUnproc = Box::new(ProcessCoerceUsertype1__Foo::new(self.stream, self, _root)?);
   |                                                                                     ^^^^ expected enum `std::option::Option`, found struct `process_coerce_usertype1::ProcessCoerceUsertype1__Record`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut process_coerce_usertype1::ProcessCoerceUsertype1__Record`

error[E0609]: no field `stream` on type `&mut process_coerce_usertype1::ProcessCoerceUsertype1__Record`
  --> src/process_coerce_usertype1.rs:87:43
   |
87 |             self._raw__raw_bufProc = self.stream.read_bytes(4)?;
   |                                           ^^^^^^

error[E0599]: no function or associated item named `processXorOne` found for type `S` in the current scope
  --> src/process_coerce_usertype1.rs:88:38
   |
88 |             self._raw_bufProc = &mut S::processXorOne(self._raw__raw_bufProc, 170);
   |                                      ^^^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_xor_one`?

error[E0609]: no field `stream` on type `&mut process_coerce_usertype1::ProcessCoerceUsertype1__Record`
  --> src/process_coerce_usertype1.rs:90:75
   |
90 |             self.bufProc = Box::new(ProcessCoerceUsertype1__Foo::new(self.stream, self, _root)?);
   |                                                                           ^^^^^^

error[E0308]: mismatched types
  --> src/recursive_one.rs:50:29
   |
50 |                 self.next = Box::new(RecursiveOne__Fini::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<recursive_one::RecursiveOne__Fini>`
help: try using a variant of the expected type
   |
50 |                 self.next = Some(<Box>::new(match ::std::ops::Try::into_result(<RecursiveOne__Fini>::new(self.stream,
51 |                                                                         self,
52 |                                                                         _root))
53 |                {
54 |                ::std::result::Result::Err(err) =>
55 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/recursive_one.rs:49:18
   |
49 |               3 => {
   |  __________________^
50 | |                 self.next = Box::new(RecursiveOne__Fini::new(self.stream, self, _root)?);
51 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `recursive_one::RecursiveOne__Fini`
  --> src/recursive_one.rs:71:11
   |
71 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `finisher`

error[E0609]: no field `stream` on type `&mut recursive_one::RecursiveOne__Fini`
  --> src/recursive_one.rs:84:30
   |
84 |         self.finisher = self.stream.read_u2le()?;
   |                              ^^^^^^

error[E0308]: mismatched types
  --> src/recursive_one.rs:83:27
   |
83 |           where Self: Sized {
   |  ___________________________^
84 | |         self.finisher = self.stream.read_u2le()?;
85 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `repeat_eos_struct::RepeatEosStruct`
  --> src/repeat_eos_struct.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `chunks`

error[E0308]: mismatched types
  --> src/process_coerce_usertype1.rs:90:83
   |
90 |             self.bufProc = Box::new(ProcessCoerceUsertype1__Foo::new(self.stream, self, _root)?);
   |                                                                                   ^^^^ expected enum `std::option::Option`, found struct `process_coerce_usertype1::ProcessCoerceUsertype1__Record`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut process_coerce_usertype1::ProcessCoerceUsertype1__Record`

error[E0308]: mismatched types
  --> src/process_coerce_usertype1.rs:86:27
   |
86 |           if self.flag != 0 {
   |  ___________________________^
87 | |             self._raw__raw_bufProc = self.stream.read_bytes(4)?;
88 | |             self._raw_bufProc = &mut S::processXorOne(self._raw__raw_bufProc, 170);
89 | |             let mut io = Cursor::new(self._raw_bufProc);
90 | |             self.bufProc = Box::new(ProcessCoerceUsertype1__Foo::new(self.stream, self, _root)?);
91 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `buf_unproc` on type `&mut process_coerce_usertype1::ProcessCoerceUsertype1__Record`
   --> src/process_coerce_usertype1.rs:101:45
    |
101 |         self.buf = if self.flag == 0 { self.buf_unproc } else { self.buf_proc};
    |                                             ^^^^^^^^^^

error[E0609]: no field `buf_proc` on type `&mut process_coerce_usertype1::ProcessCoerceUsertype1__Record`
   --> src/process_coerce_usertype1.rs:101:70
    |
101 |         self.buf = if self.flag == 0 { self.buf_unproc } else { self.buf_proc};
    |                                                                      ^^^^^^^^

error[E0308]: mismatched types
   --> src/process_coerce_usertype1.rs:102:16
    |
102 |         return self.buf;
    |                ^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
    |
    = note: expected type `std::boxed::Box<_>`
               found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `process_coerce_usertype1::ProcessCoerceUsertype1__Foo`
   --> src/process_coerce_usertype1.rs:118:11
    |
118 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut process_coerce_usertype1::ProcessCoerceUsertype1__Foo`
   --> src/process_coerce_usertype1.rs:131:27
    |
131 |         self.value = self.stream.read_u4le()?;
    |                           ^^^^^^

error[E0308]: mismatched types
   --> src/process_coerce_usertype1.rs:130:27
    |
130 |           where Self: Sized {
    |  ___________________________^
131 | |         self.value = self.stream.read_u4le()?;
132 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `process_coerce_usertype2::ProcessCoerceUsertype2`
  --> src/process_coerce_usertype2.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `records`

error[E0609]: no field `stream` on type `&mut process_coerce_usertype2::ProcessCoerceUsertype2`
  --> src/process_coerce_usertype2.rs:41:81
   |
41 |             self.records.push(Box::new(ProcessCoerceUsertype2__Record::new(self.stream, self, _root)?));
   |                                                                                 ^^^^^^

error[E0308]: mismatched types
  --> src/repeat_eos_struct.rs:37:23
   |
37 |         self.chunks = [];
   |                       ^^
   |                       |
   |                       expected struct `std::vec::Vec`, found array of 0 elements
   |                       help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<repeat_eos_struct::RepeatEosStruct__Chunk>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut repeat_eos_struct::RepeatEosStruct`
  --> src/repeat_eos_struct.rs:38:21
   |
38 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut repeat_eos_struct::RepeatEosStruct`
  --> src/repeat_eos_struct.rs:39:72
   |
39 |             self.chunks.push(Box::new(RepeatEosStruct__Chunk::new(self.stream, self, _root)?));
   |                                                                        ^^^^^^

error[E0308]: mismatched types
  --> src/process_coerce_usertype2.rs:41:89
   |
41 |             self.records.push(Box::new(ProcessCoerceUsertype2__Record::new(self.stream, self, _root)?));
   |                                                                                         ^^^^ expected enum `std::option::Option`, found struct `process_coerce_usertype2::ProcessCoerceUsertype2`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut process_coerce_usertype2::ProcessCoerceUsertype2`

error[E0308]: mismatched types
  --> src/process_coerce_usertype2.rs:40:9
   |
37 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
40 | /         for i in 0..2 {
41 | |             self.records.push(Box::new(ProcessCoerceUsertype2__Record::new(self.stream, self, _root)?));
42 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `process_coerce_usertype2::ProcessCoerceUsertype2__Record`
  --> src/process_coerce_usertype2.rs:66:11
   |
66 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `flag`, `bufUnproc`, `bufProc`, `_raw_bufProc`, `_raw__raw_bufProc`, `buf`

error[E0609]: no field `stream` on type `&mut process_coerce_usertype2::ProcessCoerceUsertype2__Record`
  --> src/process_coerce_usertype2.rs:79:26
   |
79 |         self.flag = self.stream.read_u1()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut process_coerce_usertype2::ProcessCoerceUsertype2__Record`
  --> src/process_coerce_usertype2.rs:81:77
   |
81 |             self.bufUnproc = Box::new(ProcessCoerceUsertype2__Foo::new(self.stream, self, _root)?);
   |                                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/repeat_eos_struct.rs:39:80
   |
39 |             self.chunks.push(Box::new(RepeatEosStruct__Chunk::new(self.stream, self, _root)?));
   |                                                                                ^^^^ expected enum `std::option::Option`, found struct `repeat_eos_struct::RepeatEosStruct`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut repeat_eos_struct::RepeatEosStruct`

error[E0308]: mismatched types
  --> src/repeat_eos_struct.rs:38:9
   |
35 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
38 | /         while !self.stream.isEof() {
39 | |             self.chunks.push(Box::new(RepeatEosStruct__Chunk::new(self.stream, self, _root)?));
40 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `repeat_eos_struct::RepeatEosStruct__Chunk`
  --> src/repeat_eos_struct.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `offset`, `len`

error[E0609]: no field `stream` on type `&mut repeat_eos_struct::RepeatEosStruct__Chunk`
  --> src/repeat_eos_struct.rs:73:28
   |
73 |         self.offset = self.stream.read_u4le()?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut repeat_eos_struct::RepeatEosStruct__Chunk`
  --> src/repeat_eos_struct.rs:74:25
   |
74 |         self.len = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/repeat_eos_struct.rs:72:27
   |
72 |           where Self: Sized {
   |  ___________________________^
73 | |         self.offset = self.stream.read_u4le()?;
74 | |         self.len = self.stream.read_u4le()?;
75 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `repeat_eos_u4::RepeatEosU4`
  --> src/repeat_eos_u4.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `numbers`

error[E0308]: mismatched types
  --> src/process_coerce_usertype2.rs:81:85
   |
81 |             self.bufUnproc = Box::new(ProcessCoerceUsertype2__Foo::new(self.stream, self, _root)?);
   |                                                                                     ^^^^ expected enum `std::option::Option`, found struct `process_coerce_usertype2::ProcessCoerceUsertype2__Record`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut process_coerce_usertype2::ProcessCoerceUsertype2__Record`

error[E0609]: no field `stream` on type `&mut process_coerce_usertype2::ProcessCoerceUsertype2__Record`
  --> src/process_coerce_usertype2.rs:84:43
   |
84 |             self._raw__raw_bufProc = self.stream.read_bytes(4)?;
   |                                           ^^^^^^

error[E0599]: no function or associated item named `processXorOne` found for type `S` in the current scope
  --> src/process_coerce_usertype2.rs:85:38
   |
85 |             self._raw_bufProc = &mut S::processXorOne(self._raw__raw_bufProc, 170);
   |                                      ^^^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_xor_one`?

error[E0609]: no field `stream` on type `&mut process_coerce_usertype2::ProcessCoerceUsertype2__Record`
  --> src/process_coerce_usertype2.rs:87:75
   |
87 |             self.bufProc = Box::new(ProcessCoerceUsertype2__Foo::new(self.stream, self, _root)?);
   |                                                                           ^^^^^^

error[E0308]: mismatched types
  --> src/repeat_eos_u4.rs:37:24
   |
37 |         self.numbers = [];
   |                        ^^
   |                        |
   |                        expected struct `std::vec::Vec`, found array of 0 elements
   |                        help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<u32>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut repeat_eos_u4::RepeatEosU4`
  --> src/repeat_eos_u4.rs:38:21
   |
38 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut repeat_eos_u4::RepeatEosU4`
  --> src/repeat_eos_u4.rs:39:36
   |
39 |             self.numbers.push(self.stream.read_u4le()?);
   |                                    ^^^^^^

error[E0308]: mismatched types
  --> src/repeat_eos_u4.rs:38:9
   |
35 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
38 | /         while !self.stream.isEof() {
39 | |             self.numbers.push(self.stream.read_u4le()?);
40 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `repeat_n_struct::RepeatNStruct`
  --> src/repeat_n_struct.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `qty`, `chunks`

error[E0609]: no field `stream` on type `&mut repeat_n_struct::RepeatNStruct`
  --> src/repeat_n_struct.rs:39:25
   |
39 |         self.qty = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut repeat_n_struct::RepeatNStruct`
  --> src/repeat_n_struct.rs:42:70
   |
42 |             self.chunks.push(Box::new(RepeatNStruct__Chunk::new(self.stream, self, _root)?));
   |                                                                      ^^^^^^

error[E0308]: mismatched types
  --> src/process_coerce_usertype2.rs:87:83
   |
87 |             self.bufProc = Box::new(ProcessCoerceUsertype2__Foo::new(self.stream, self, _root)?);
   |                                                                                   ^^^^ expected enum `std::option::Option`, found struct `process_coerce_usertype2::ProcessCoerceUsertype2__Record`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut process_coerce_usertype2::ProcessCoerceUsertype2__Record`

error[E0308]: mismatched types
  --> src/process_coerce_usertype2.rs:83:27
   |
83 |           if self.flag != 0 {
   |  ___________________________^
84 | |             self._raw__raw_bufProc = self.stream.read_bytes(4)?;
85 | |             self._raw_bufProc = &mut S::processXorOne(self._raw__raw_bufProc, 170);
86 | |             let mut io = Cursor::new(self._raw_bufProc);
87 | |             self.bufProc = Box::new(ProcessCoerceUsertype2__Foo::new(self.stream, self, _root)?);
88 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `buf_unproc` on type `&mut process_coerce_usertype2::ProcessCoerceUsertype2__Record`
  --> src/process_coerce_usertype2.rs:98:45
   |
98 |         self.buf = if self.flag == 0 { self.buf_unproc } else { self.buf_proc};
   |                                             ^^^^^^^^^^

error[E0609]: no field `buf_proc` on type `&mut process_coerce_usertype2::ProcessCoerceUsertype2__Record`
  --> src/process_coerce_usertype2.rs:98:70
   |
98 |         self.buf = if self.flag == 0 { self.buf_unproc } else { self.buf_proc};
   |                                                                      ^^^^^^^^

error[E0308]: mismatched types
  --> src/process_coerce_usertype2.rs:99:16
   |
99 |         return self.buf;
   |                ^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `process_coerce_usertype2::ProcessCoerceUsertype2__Foo`
   --> src/process_coerce_usertype2.rs:115:11
    |
115 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut process_coerce_usertype2::ProcessCoerceUsertype2__Foo`
   --> src/process_coerce_usertype2.rs:128:27
    |
128 |         self.value = self.stream.read_u4le()?;
    |                           ^^^^^^

error[E0308]: mismatched types
   --> src/process_coerce_usertype2.rs:127:27
    |
127 |           where Self: Sized {
    |  ___________________________^
128 | |         self.value = self.stream.read_u4le()?;
129 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `process_custom::ProcessCustom`
  --> src/process_custom.rs:32:11
   |
32 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `buf1`, `buf2`, `key`, `buf3`, `_raw_buf1` ... and 2 others

error[E0609]: no field `stream` on type `&mut process_custom::ProcessCustom`
  --> src/process_custom.rs:45:31
   |
45 |         self._raw_buf1 = self.stream.read_bytes(5)?;
   |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut process_custom::ProcessCustom`
  --> src/process_custom.rs:48:31
   |
48 |         self._raw_buf2 = self.stream.read_bytes(5)?;
   |                               ^^^^^^

error[E0609]: no field `stream` on type `&mut process_custom::ProcessCustom`
  --> src/process_custom.rs:51:25
   |
51 |         self.key = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut process_custom::ProcessCustom`
  --> src/process_custom.rs:52:31
   |
52 |         self._raw_buf3 = self.stream.read_bytes(5)?;
   |                               ^^^^^^

error[E0308]: mismatched types
  --> src/process_custom.rs:44:27
   |
44 |           where Self: Sized {
   |  ___________________________^
45 | |         self._raw_buf1 = self.stream.read_bytes(5)?;
46 | |         let _process = MyCustomFx::new(7, true, vec!([0x20, 0x30, 0x40]));
47 | |         self.buf1 = _process.decode(self._raw_buf1);
...  |
54 | |         self.buf3 = _process.decode(self._raw_buf3);
55 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `process_rotate::ProcessRotate`
  --> src/process_rotate.rs:30:11
   |
30 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `buf1`, `buf2`, `key`, `buf3`, `_raw_buf1` ... and 2 others

error[E0609]: no field `stream` on type `&mut process_rotate::ProcessRotate`
  --> src/process_rotate.rs:43:31
   |
43 |         self._raw_buf1 = self.stream.read_bytes(5)?;
   |                               ^^^^^^

error[E0599]: no function or associated item named `processRotateLeft` found for type `S` in the current scope
  --> src/process_rotate.rs:44:26
   |
44 |         self.buf1 = &mut S::processRotateLeft(self._raw_buf1, 3, 1);
   |                          ^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_rotate_left`?

error[E0609]: no field `stream` on type `&mut process_rotate::ProcessRotate`
  --> src/process_rotate.rs:45:31
   |
45 |         self._raw_buf2 = self.stream.read_bytes(5)?;
   |                               ^^^^^^

error[E0599]: no function or associated item named `processRotateLeft` found for type `S` in the current scope
  --> src/process_rotate.rs:46:26
   |
46 |         self.buf2 = &mut S::processRotateLeft(self._raw_buf2, 8 - (3), 1);
   |                          ^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_rotate_left`?

error[E0609]: no field `stream` on type `&mut process_rotate::ProcessRotate`
  --> src/process_rotate.rs:47:25
   |
47 |         self.key = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut process_rotate::ProcessRotate`
  --> src/process_rotate.rs:48:31
   |
48 |         self._raw_buf3 = self.stream.read_bytes(5)?;
   |                               ^^^^^^

error[E0599]: no function or associated item named `processRotateLeft` found for type `S` in the current scope
  --> src/process_rotate.rs:49:26
   |
49 |         self.buf3 = &mut S::processRotateLeft(self._raw_buf3, self.key, 1);
   |                          ^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_rotate_left`?

error[E0308]: mismatched types
  --> src/process_rotate.rs:42:27
   |
42 |           where Self: Sized {
   |  ___________________________^
43 | |         self._raw_buf1 = self.stream.read_bytes(5)?;
44 | |         self.buf1 = &mut S::processRotateLeft(self._raw_buf1, 3, 1);
45 | |         self._raw_buf2 = self.stream.read_bytes(5)?;
...  |
49 | |         self.buf3 = &mut S::processRotateLeft(self._raw_buf3, self.key, 1);
50 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `process_to_user::ProcessToUser`
  --> src/process_to_user.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `buf1`, `_raw_buf1`, `_raw__raw_buf1`

error[E0609]: no field `stream` on type `&mut process_to_user::ProcessToUser`
  --> src/process_to_user.rs:40:36
   |
40 |         self._raw__raw_buf1 = self.stream.read_bytes(5)?;
   |                                    ^^^^^^

error[E0308]: mismatched types
  --> src/repeat_n_struct.rs:42:78
   |
42 |             self.chunks.push(Box::new(RepeatNStruct__Chunk::new(self.stream, self, _root)?));
   |                                                                              ^^^^ expected enum `std::option::Option`, found struct `repeat_n_struct::RepeatNStruct`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut repeat_n_struct::RepeatNStruct`

error[E0308]: mismatched types
  --> src/repeat_n_struct.rs:41:9
   |
37 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
41 | /         for i in 0..self.qty {
42 | |             self.chunks.push(Box::new(RepeatNStruct__Chunk::new(self.stream, self, _root)?));
43 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `repeat_n_struct::RepeatNStruct__Chunk`
  --> src/repeat_n_struct.rs:63:11
   |
63 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `offset`, `len`

error[E0599]: no function or associated item named `processRotateLeft` found for type `S` in the current scope
  --> src/process_to_user.rs:41:31
   |
41 |         self._raw_buf1 = &mut S::processRotateLeft(self._raw__raw_buf1, 3, 1);
   |                               ^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_rotate_left`?

error[E0609]: no field `stream` on type `&mut repeat_n_struct::RepeatNStruct__Chunk`
  --> src/repeat_n_struct.rs:76:28
   |
76 |         self.offset = self.stream.read_u4le()?;
   |                            ^^^^^^
error[E0609]: no field `stream` on type `&mut process_to_user::ProcessToUser`
  --> src/process_to_user.rs:43:63
   |
43 |         self.buf1 = Box::new(ProcessToUser__JustStr::new(self.stream, self, _root)?);
   |                                                               ^^^^^^


error[E0609]: no field `stream` on type `&mut repeat_n_struct::RepeatNStruct__Chunk`
  --> src/repeat_n_struct.rs:77:25
   |
77 |         self.len = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/repeat_n_struct.rs:75:27
   |
75 |           where Self: Sized {
   |  ___________________________^
76 | |         self.offset = self.stream.read_u4le()?;
77 | |         self.len = self.stream.read_u4le()?;
78 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `repeat_n_strz_double::RepeatNStrzDouble`
  --> src/repeat_n_strz_double.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `qty`, `lines1`, `lines2`

error[E0609]: no field `stream` on type `&mut repeat_n_strz_double::RepeatNStrzDouble`
  --> src/repeat_n_strz_double.rs:40:25
   |
40 |         self.qty = self.stream.read_u4le()?;
   |                         ^^^^^^

warning: unreachable expression
  --> src/repeat_n_strz_double.rs:43:13
   |
43 |             self.lines1.push(panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8"));
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unreachable expression
  --> src/repeat_n_strz_double.rs:47:13
   |
47 |             self.lines2.push(panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8"));
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> src/repeat_n_strz_double.rs:46:9
   |
38 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
46 | /         for i in 0..self.qty / 2 {
47 | |             self.lines2.push(panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8"));
48 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `repeat_n_strz::RepeatNStrz`
  --> src/repeat_n_strz.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `qty`, `lines`

error[E0609]: no field `stream` on type `&mut repeat_n_strz::RepeatNStrz`
  --> src/repeat_n_strz.rs:39:25
   |
39 |         self.qty = self.stream.read_u4le()?;
   |                         ^^^^^^

warning: unreachable expression
  --> src/repeat_n_strz.rs:42:13
   |
42 |             self.lines.push(panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8"));
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> src/repeat_n_strz.rs:41:9
   |
37 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
41 | /         for i in 0..self.qty {
42 | |             self.lines.push(panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8"));
43 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `repeat_until_complex::RepeatUntilComplex`
  --> src/repeat_until_complex.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `first`, `second`, `third`

error[E0609]: no field `stream` on type `&mut repeat_until_complex::RepeatUntilComplex`
  --> src/repeat_until_complex.rs:42:70
   |
42 |             let tmpa = Box::new(RepeatUntilComplex__TypeU1::new(self.stream, self, _root)?);
   |                                                                      ^^^^^^

error[E0308]: mismatched types
  --> src/process_to_user.rs:43:71
   |
43 |         self.buf1 = Box::new(ProcessToUser__JustStr::new(self.stream, self, _root)?);
   |                                                                       ^^^^ expected enum `std::option::Option`, found struct `process_to_user::ProcessToUser`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut process_to_user::ProcessToUser`

error[E0308]: mismatched types
  --> src/process_to_user.rs:39:27
   |
39 |           where Self: Sized {
   |  ___________________________^
40 | |         self._raw__raw_buf1 = self.stream.read_bytes(5)?;
41 | |         self._raw_buf1 = &mut S::processRotateLeft(self._raw__raw_buf1, 3, 1);
42 | |         let mut io = Cursor::new(self._raw_buf1);
43 | |         self.buf1 = Box::new(ProcessToUser__JustStr::new(self.stream, self, _root)?);
44 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `process_to_user::ProcessToUser__JustStr`
  --> src/process_to_user.rs:62:11
   |
62 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `str`

warning: unreachable expression
  --> src/process_to_user.rs:75:9
   |
75 |         self.str = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `process_xor4_const::ProcessXor4Const`
  --> src/process_xor4_const.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `key`, `buf`, `_raw_buf`

error[E0609]: no field `stream` on type `&mut process_xor4_const::ProcessXor4Const`
  --> src/process_xor4_const.rs:39:25
   |
39 |         self.key = self.stream.read_bytes(4)?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut process_xor4_const::ProcessXor4Const`
  --> src/process_xor4_const.rs:40:30
   |
40 |         self._raw_buf = self.stream.read_bytes_full()?;
   |                              ^^^^^^

error[E0599]: no function or associated item named `processXorMany` found for type `S` in the current scope
  --> src/process_xor4_const.rs:41:25
   |
41 |         self.buf = &mut S::processXorMany(self._raw_buf, vec!([0xec, 0xbb, 0xa3, 0x14]));
   |                         ^^^^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_xor_many`?

error[E0308]: mismatched types
  --> src/process_xor4_const.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.key = self.stream.read_bytes(4)?;
40 | |         self._raw_buf = self.stream.read_bytes_full()?;
41 | |         self.buf = &mut S::processXorMany(self._raw_buf, vec!([0xec, 0xbb, 0xa3, 0x14]));
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `process_xor4_value::ProcessXor4Value`
  --> src/process_xor4_value.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `key`, `buf`, `_raw_buf`

error[E0609]: no field `stream` on type `&mut process_xor4_value::ProcessXor4Value`
  --> src/process_xor4_value.rs:39:25
   |
39 |         self.key = self.stream.read_bytes(4)?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut process_xor4_value::ProcessXor4Value`
  --> src/process_xor4_value.rs:40:30
   |
40 |         self._raw_buf = self.stream.read_bytes_full()?;
   |                              ^^^^^^

error[E0308]: mismatched types
  --> src/repeat_until_complex.rs:42:78
   |
42 |             let tmpa = Box::new(RepeatUntilComplex__TypeU1::new(self.stream, self, _root)?);
   |                                                                              ^^^^ expected enum `std::option::Option`, found struct `repeat_until_complex::RepeatUntilComplex`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut repeat_until_complex::RepeatUntilComplex`

error[E0599]: no function or associated item named `processXorMany` found for type `S` in the current scope
  --> src/process_xor4_value.rs:41:25
   |
41 |         self.buf = &mut S::processXorMany(self._raw_buf, self.key);
   |                         ^^^^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_xor_many`?

error[E0308]: mismatched types
  --> src/process_xor4_value.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.key = self.stream.read_bytes(4)?;
40 | |         self._raw_buf = self.stream.read_bytes_full()?;
41 | |         self.buf = &mut S::processXorMany(self._raw_buf, self.key);
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut repeat_until_complex::RepeatUntilComplex`
  --> src/repeat_until_complex.rs:43:77
   |
43 |             self.first.append(Box::new(RepeatUntilComplex__TypeU1::new(self.stream, self, _root)?));
   |                                                                             ^^^^^^

error[E0609]: no field `stream` on type `process_xor_const::ProcessXorConst`
  --> src/process_xor_const.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `key`, `buf`, `_raw_buf`

error[E0609]: no field `stream` on type `&mut process_xor_const::ProcessXorConst`
  --> src/process_xor_const.rs:39:25
   |
39 |         self.key = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut process_xor_const::ProcessXorConst`
  --> src/process_xor_const.rs:40:30
   |
40 |         self._raw_buf = self.stream.read_bytes_full()?;
   |                              ^^^^^^

error[E0599]: no function or associated item named `processXorOne` found for type `S` in the current scope
  --> src/process_xor_const.rs:41:25
   |
41 |         self.buf = &mut S::processXorOne(self._raw_buf, 255);
   |                         ^^^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_xor_one`?

error[E0308]: mismatched types
  --> src/process_xor_const.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.key = self.stream.read_u1()?;
40 | |         self._raw_buf = self.stream.read_bytes_full()?;
41 | |         self.buf = &mut S::processXorOne(self._raw_buf, 255);
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `process_xor_value::ProcessXorValue`
  --> src/process_xor_value.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `key`, `buf`, `_raw_buf`

error[E0609]: no field `stream` on type `&mut process_xor_value::ProcessXorValue`
  --> src/process_xor_value.rs:39:25
   |
39 |         self.key = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut process_xor_value::ProcessXorValue`
  --> src/process_xor_value.rs:40:30
   |
40 |         self._raw_buf = self.stream.read_bytes_full()?;
   |                              ^^^^^^

error[E0599]: no function or associated item named `processXorOne` found for type `S` in the current scope
  --> src/process_xor_value.rs:41:25
   |
41 |         self.buf = &mut S::processXorOne(self._raw_buf, self.key);
   |                         ^^^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_xor_one`?

error[E0308]: mismatched types
  --> src/process_xor_value.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.key = self.stream.read_u1()?;
40 | |         self._raw_buf = self.stream.read_bytes_full()?;
41 | |         self.buf = &mut S::processXorOne(self._raw_buf, self.key);
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `recursive_one::RecursiveOne`
  --> src/recursive_one.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`, `next`

error[E0609]: no field `stream` on type `&mut recursive_one::RecursiveOne`
  --> src/recursive_one.rs:38:25
   |
38 |         self.one = self.stream.read_u1()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut recursive_one::RecursiveOne`
  --> src/recursive_one.rs:41:61
   |
41 |                 self.next = Box::new(RecursiveOne::new(self.stream, self, _root)?);
   |                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/repeat_until_complex.rs:43:85
   |
43 |             self.first.append(Box::new(RepeatUntilComplex__TypeU1::new(self.stream, self, _root)?));
   |                                                                                     ^^^^ expected enum `std::option::Option`, found struct `repeat_until_complex::RepeatUntilComplex`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut repeat_until_complex::RepeatUntilComplex`

error[E0308]: mismatched types
  --> src/recursive_one.rs:41:69
   |
41 |                 self.next = Box::new(RecursiveOne::new(self.stream, self, _root)?);
   |                                                                     ^^^^ expected enum `std::option::Option`, found struct `recursive_one::RecursiveOne`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut recursive_one::RecursiveOne`

error[E0308]: mismatched types
  --> src/repeat_until_complex.rs:43:31
   |
43 |             self.first.append(Box::new(RepeatUntilComplex__TypeU1::new(self.stream, self, _root)?));
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected mutable reference, found struct `std::boxed::Box`
   |
   = note: expected type `&mut std::vec::Vec<std::boxed::Box<repeat_until_complex::RepeatUntilComplex__TypeU1>>`
              found type `std::boxed::Box<repeat_until_complex::RepeatUntilComplex__TypeU1>`

error[E0609]: no field `stream` on type `&mut repeat_until_complex::RepeatUntilComplex`
  --> src/repeat_until_complex.rs:48:70
   |
48 |             let tmpa = Box::new(RepeatUntilComplex__TypeU2::new(self.stream, self, _root)?);
   |                                                                      ^^^^^^

error[E0308]: mismatched types
  --> src/recursive_one.rs:41:29
   |
41 |                 self.next = Box::new(RecursiveOne::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<recursive_one::RecursiveOne>`
help: try using a variant of the expected type
   |
41 |                 self.next = Some(<Box>::new(match ::std::ops::Try::into_result(<RecursiveOne>::new(self.stream,
42 |                                                                   self,
43 |                                                                   _root)) {
44 |                ::std::result::Result::Err(err) =>
45 |                    #[allow(unreachable_code)]
46 |                    return ::std::ops::Try::from_error(::std::convert::From::from(err)),
 ...

error[E0308]: mismatched types
  --> src/recursive_one.rs:40:18
   |
40 |               0 => {
   |  __________________^
41 | |                 self.next = Box::new(RecursiveOne::new(self.stream, self, _root)?);
42 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut recursive_one::RecursiveOne`
  --> src/recursive_one.rs:44:61
   |
44 |                 self.next = Box::new(RecursiveOne::new(self.stream, self, _root)?);
   |                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/repeat_until_complex.rs:48:78
   |
48 |             let tmpa = Box::new(RepeatUntilComplex__TypeU2::new(self.stream, self, _root)?);
   |                                                                              ^^^^ expected enum `std::option::Option`, found struct `repeat_until_complex::RepeatUntilComplex`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut repeat_until_complex::RepeatUntilComplex`

error[E0609]: no field `stream` on type `&mut repeat_until_complex::RepeatUntilComplex`
  --> src/repeat_until_complex.rs:49:78
   |
49 |             self.second.append(Box::new(RepeatUntilComplex__TypeU2::new(self.stream, self, _root)?));
   |                                                                              ^^^^^^

error[E0308]: mismatched types
  --> src/recursive_one.rs:44:69
   |
44 |                 self.next = Box::new(RecursiveOne::new(self.stream, self, _root)?);
   |                                                                     ^^^^ expected enum `std::option::Option`, found struct `recursive_one::RecursiveOne`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut recursive_one::RecursiveOne`

error[E0308]: mismatched types
  --> src/repeat_until_complex.rs:49:86
   |
49 |             self.second.append(Box::new(RepeatUntilComplex__TypeU2::new(self.stream, self, _root)?));
   |                                                                                      ^^^^ expected enum `std::option::Option`, found struct `repeat_until_complex::RepeatUntilComplex`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut repeat_until_complex::RepeatUntilComplex`

error[E0308]: mismatched types
  --> src/recursive_one.rs:44:29
   |
44 |                 self.next = Box::new(RecursiveOne::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<recursive_one::RecursiveOne>`
help: try using a variant of the expected type
   |
44 |                 self.next = Some(<Box>::new(match ::std::ops::Try::into_result(<RecursiveOne>::new(self.stream,
45 |                                                                   self,
46 |                                                                   _root)) {
47 |                ::std::result::Result::Err(err) =>
48 |                    #[allow(unreachable_code)]
49 |                    return ::std::ops::Try::from_error(::std::convert::From::from(err)),
 ...

error[E0308]: mismatched types
  --> src/recursive_one.rs:43:18
   |
43 |               1 => {
   |  __________________^
44 | |                 self.next = Box::new(RecursiveOne::new(self.stream, self, _root)?);
45 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut recursive_one::RecursiveOne`
  --> src/recursive_one.rs:47:61
   |
47 |                 self.next = Box::new(RecursiveOne::new(self.stream, self, _root)?);
   |                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/repeat_until_complex.rs:49:32
   |
49 |             self.second.append(Box::new(RepeatUntilComplex__TypeU2::new(self.stream, self, _root)?));
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected mutable reference, found struct `std::boxed::Box`
   |
   = note: expected type `&mut std::vec::Vec<std::boxed::Box<repeat_until_complex::RepeatUntilComplex__TypeU2>>`
              found type `std::boxed::Box<repeat_until_complex::RepeatUntilComplex__TypeU2>`

error[E0609]: no field `stream` on type `&mut repeat_until_complex::RepeatUntilComplex`
  --> src/repeat_until_complex.rs:54:29
   |
54 |             let tmpa = self.stream.read_u1()?;
   |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut repeat_until_complex::RepeatUntilComplex`
  --> src/repeat_until_complex.rs:55:36
   |
55 |             self.third.append(self.stream.read_u1()?);
   |                                    ^^^^^^

error[E0308]: mismatched types
  --> src/repeat_until_complex.rs:53:9
   |
38 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
53 | /         while {
54 | |             let tmpa = self.stream.read_u1()?;
55 | |             self.third.append(self.stream.read_u1()?);
56 | |             !(tmpa == 0)
57 | |         } { }
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `repeat_until_complex::RepeatUntilComplex__TypeU1`
  --> src/repeat_until_complex.rs:77:11
   |
77 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `count`, `values`

error[E0609]: no field `stream` on type `&mut repeat_until_complex::RepeatUntilComplex__TypeU1`
  --> src/repeat_until_complex.rs:90:27
   |
90 |         self.count = self.stream.read_u1()?;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut repeat_until_complex::RepeatUntilComplex__TypeU1`
  --> src/repeat_until_complex.rs:93:35
   |
93 |             self.values.push(self.stream.read_u1()?);
   |                                   ^^^^^^

error[E0308]: mismatched types
  --> src/repeat_until_complex.rs:92:9
   |
88 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
92 | /         for i in 0..self.count {
93 | |             self.values.push(self.stream.read_u1()?);
94 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `repeat_until_complex::RepeatUntilComplex__TypeU2`
   --> src/repeat_until_complex.rs:114:11
    |
114 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `count`, `values`

error[E0609]: no field `stream` on type `&mut repeat_until_complex::RepeatUntilComplex__TypeU2`
   --> src/repeat_until_complex.rs:127:27
    |
127 |         self.count = self.stream.read_u2le()?;
    |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut repeat_until_complex::RepeatUntilComplex__TypeU2`
   --> src/repeat_until_complex.rs:130:35
    |
130 |             self.values.push(self.stream.read_u2le()?);
    |                                   ^^^^^^

error[E0308]: mismatched types
   --> src/repeat_until_complex.rs:129:9
    |
125 |                                -> Result<()>
    |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
129 | /         for i in 0..self.count {
130 | |             self.values.push(self.stream.read_u2le()?);
131 | |         }
    | |_________^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0308]: mismatched types
  --> src/recursive_one.rs:47:69
   |
47 |                 self.next = Box::new(RecursiveOne::new(self.stream, self, _root)?);
   |                                                                     ^^^^ expected enum `std::option::Option`, found struct `recursive_one::RecursiveOne`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut recursive_one::RecursiveOne`

error[E0609]: no field `stream` on type `repeat_until_s4::RepeatUntilS4`
  --> src/repeat_until_s4.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `entries`, `afterall`

error[E0609]: no field `stream` on type `&mut repeat_until_s4::RepeatUntilS4`
  --> src/repeat_until_s4.rs:41:29
   |
41 |             let tmpa = self.stream.read_s4le()?;
   |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut repeat_until_s4::RepeatUntilS4`
  --> src/repeat_until_s4.rs:42:38
   |
42 |             self.entries.append(self.stream.read_s4le()?);
   |                                      ^^^^^^

error[E0609]: no field `stream` on type `&mut repeat_until_s4::RepeatUntilS4`
  --> src/repeat_until_s4.rs:45:54
   |
45 |         self.afterall = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
   |                                                      ^^^^^^

error[E0308]: mismatched types
  --> src/recursive_one.rs:47:29
   |
47 |                 self.next = Box::new(RecursiveOne::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<recursive_one::RecursiveOne>`
help: try using a variant of the expected type
   |
47 |                 self.next = Some(<Box>::new(match ::std::ops::Try::into_result(<RecursiveOne>::new(self.stream,
48 |                                                                   self,
49 |                                                                   _root)) {
50 |                ::std::result::Result::Err(err) =>
51 |                    #[allow(unreachable_code)]
52 |                    return ::std::ops::Try::from_error(::std::convert::From::from(err)),
 ...

error[E0308]: mismatched types
  --> src/recursive_one.rs:46:18
   |
46 |               2 => {
   |  __________________^
47 | |                 self.next = Box::new(RecursiveOne::new(self.stream, self, _root)?);
48 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut recursive_one::RecursiveOne`
  --> src/recursive_one.rs:50:67
   |
50 |                 self.next = Box::new(RecursiveOne__Fini::new(self.stream, self, _root)?);
   |                                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/repeat_until_s4.rs:45:25
   |
45 |         self.afterall = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                         |
   |                         expected struct `std::string::String`, found enum `std::borrow::Cow`
   |                         help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?).to_string()`
   |
   = note: expected type `std::string::String`
              found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
  --> src/repeat_until_s4.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.entries = vec!();
40 | |         while {
41 | |             let tmpa = self.stream.read_s4le()?;
...  |
45 | |         self.afterall = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
46 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `repeat_until_sized::RepeatUntilSized`
  --> src/repeat_until_sized.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `records`, `_raw_records`

error[E0609]: no field `stream` on type `&mut repeat_until_sized::RepeatUntilSized`
  --> src/repeat_until_sized.rs:43:29
   |
43 |             let tmpb = self.stream.read_bytes(5)?;
   |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut repeat_until_sized::RepeatUntilSized`
  --> src/repeat_until_sized.rs:44:43
   |
44 |             self._raw_records.append(self.stream.read_bytes(5)?);
   |                                           ^^^^^^

error[E0609]: no field `stream` on type `&mut repeat_until_sized::RepeatUntilSized`
  --> src/repeat_until_sized.rs:46:68
   |
46 |             let tmpa = Box::new(RepeatUntilSized__Record::new(self.stream, self, _root)?);
   |                                                                    ^^^^^^

error[E0308]: mismatched types
  --> src/recursive_one.rs:50:75
   |
50 |                 self.next = Box::new(RecursiveOne__Fini::new(self.stream, self, _root)?);
   |                                                                           ^^^^ expected enum `std::option::Option`, found struct `recursive_one::RecursiveOne`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut recursive_one::RecursiveOne`

error[E0308]: mismatched types
  --> src/repeat_until_sized.rs:46:76
   |
46 |             let tmpa = Box::new(RepeatUntilSized__Record::new(self.stream, self, _root)?);
   |                                                                            ^^^^ expected enum `std::option::Option`, found struct `repeat_until_sized::RepeatUntilSized`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut repeat_until_sized::RepeatUntilSized`

error[E0609]: no field `stream` on type `&mut repeat_until_sized::RepeatUntilSized`
  --> src/repeat_until_sized.rs:47:77
   |
47 |             self.records.append(Box::new(RepeatUntilSized__Record::new(self.stream, self, _root)?));
   |                                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/recursive_one.rs:50:29
   |
50 |                 self.next = Box::new(RecursiveOne__Fini::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<recursive_one::RecursiveOne__Fini>`
help: try using a variant of the expected type
   |
50 |                 self.next = Some(<Box>::new(match ::std::ops::Try::into_result(<RecursiveOne__Fini>::new(self.stream,
51 |                                                                         self,
52 |                                                                         _root))
53 |                {
54 |                ::std::result::Result::Err(err) =>
55 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/recursive_one.rs:49:18
   |
49 |               3 => {
   |  __________________^
50 | |                 self.next = Box::new(RecursiveOne__Fini::new(self.stream, self, _root)?);
51 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `recursive_one::RecursiveOne__Fini`
  --> src/recursive_one.rs:71:11
   |
71 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `finisher`

error[E0609]: no field `stream` on type `&mut recursive_one::RecursiveOne__Fini`
  --> src/recursive_one.rs:84:30
   |
84 |         self.finisher = self.stream.read_u2le()?;
   |                              ^^^^^^

error[E0308]: mismatched types
  --> src/recursive_one.rs:83:27
   |
83 |           where Self: Sized {
   |  ___________________________^
84 | |         self.finisher = self.stream.read_u2le()?;
85 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `repeat_eos_struct::RepeatEosStruct`
  --> src/repeat_eos_struct.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `chunks`

error[E0308]: mismatched types
  --> src/repeat_until_sized.rs:47:85
   |
47 |             self.records.append(Box::new(RepeatUntilSized__Record::new(self.stream, self, _root)?));
   |                                                                                     ^^^^ expected enum `std::option::Option`, found struct `repeat_until_sized::RepeatUntilSized`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut repeat_until_sized::RepeatUntilSized`

error[E0308]: mismatched types
  --> src/repeat_eos_struct.rs:37:23
   |
37 |         self.chunks = [];
   |                       ^^
   |                       |
   |                       expected struct `std::vec::Vec`, found array of 0 elements
   |                       help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<repeat_eos_struct::RepeatEosStruct__Chunk>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut repeat_eos_struct::RepeatEosStruct`
  --> src/repeat_eos_struct.rs:38:21
   |
38 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut repeat_eos_struct::RepeatEosStruct`
  --> src/repeat_eos_struct.rs:39:72
   |
39 |             self.chunks.push(Box::new(RepeatEosStruct__Chunk::new(self.stream, self, _root)?));
   |                                                                        ^^^^^^

error[E0308]: mismatched types
  --> src/repeat_until_sized.rs:47:33
   |
47 |             self.records.append(Box::new(RepeatUntilSized__Record::new(self.stream, self, _root)?));
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected mutable reference, found struct `std::boxed::Box`
   |
   = note: expected type `&mut std::vec::Vec<std::boxed::Box<repeat_until_sized::RepeatUntilSized__Record>>`
              found type `std::boxed::Box<repeat_until_sized::RepeatUntilSized__Record>`

error[E0308]: mismatched types
  --> src/repeat_until_sized.rs:42:9
   |
38 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
42 | /         while {
43 | |             let tmpb = self.stream.read_bytes(5)?;
44 | |             self._raw_records.append(self.stream.read_bytes(5)?);
45 | |             let mut io = Cursor::new(tmpb);
...  |
48 | |             !(tmpa.marker == 170)
49 | |         } { }
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `repeat_until_sized::RepeatUntilSized__Record`
  --> src/repeat_until_sized.rs:69:11
   |
69 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `marker`, `body`

error[E0609]: no field `stream` on type `&mut repeat_until_sized::RepeatUntilSized__Record`
  --> src/repeat_until_sized.rs:82:28
   |
82 |         self.marker = self.stream.read_u1()?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut repeat_until_sized::RepeatUntilSized__Record`
  --> src/repeat_until_sized.rs:83:26
   |
83 |         self.body = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0308]: mismatched types
  --> src/repeat_until_sized.rs:81:27
   |
81 |           where Self: Sized {
   |  ___________________________^
82 | |         self.marker = self.stream.read_u1()?;
83 | |         self.body = self.stream.read_u4le()?;
84 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `str_encodings_default::StrEncodingsDefault`
  --> src/str_encodings_default.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `lenOf1`, `str1`, `rest`

error[E0609]: no field `stream` on type `&mut str_encodings_default::StrEncodingsDefault`
  --> src/str_encodings_default.rs:39:28
   |
39 |         self.lenOf1 = self.stream.read_u2le()?;
   |                            ^^^^^^

warning: unreachable expression
  --> src/str_encodings_default.rs:40:9
   |
40 |         self.str1 = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut str_encodings_default::StrEncodingsDefault`
  --> src/str_encodings_default.rs:41:69
   |
41 |         self.rest = Box::new(StrEncodingsDefault__Subtype::new(self.stream, self, _root)?);
   |                                                                     ^^^^^^

error[E0308]: mismatched types
  --> src/repeat_eos_struct.rs:39:80
   |
39 |             self.chunks.push(Box::new(RepeatEosStruct__Chunk::new(self.stream, self, _root)?));
   |                                                                                ^^^^ expected enum `std::option::Option`, found struct `repeat_eos_struct::RepeatEosStruct`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut repeat_eos_struct::RepeatEosStruct`

error[E0308]: mismatched types
  --> src/repeat_eos_struct.rs:38:9
   |
35 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
38 | /         while !self.stream.isEof() {
39 | |             self.chunks.push(Box::new(RepeatEosStruct__Chunk::new(self.stream, self, _root)?));
40 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `repeat_eos_struct::RepeatEosStruct__Chunk`
  --> src/repeat_eos_struct.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `offset`, `len`

error[E0609]: no field `stream` on type `&mut repeat_eos_struct::RepeatEosStruct__Chunk`
  --> src/repeat_eos_struct.rs:73:28
   |
73 |         self.offset = self.stream.read_u4le()?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut repeat_eos_struct::RepeatEosStruct__Chunk`
  --> src/repeat_eos_struct.rs:74:25
   |
74 |         self.len = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/repeat_eos_struct.rs:72:27
   |
72 |           where Self: Sized {
   |  ___________________________^
73 | |         self.offset = self.stream.read_u4le()?;
74 | |         self.len = self.stream.read_u4le()?;
75 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `repeat_eos_u4::RepeatEosU4`
  --> src/repeat_eos_u4.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `numbers`

error[E0308]: mismatched types
  --> src/str_encodings_default.rs:41:77
   |
41 |         self.rest = Box::new(StrEncodingsDefault__Subtype::new(self.stream, self, _root)?);
   |                                                                             ^^^^ expected enum `std::option::Option`, found struct `str_encodings_default::StrEncodingsDefault`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut str_encodings_default::StrEncodingsDefault`

error[E0609]: no field `stream` on type `str_encodings_default::StrEncodingsDefault__Subtype`
  --> src/str_encodings_default.rs:65:11
   |
65 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `lenOf2`, `str2`, `lenOf3`, `str3`, `lenOf4`, `str4`

error[E0609]: no field `stream` on type `&mut str_encodings_default::StrEncodingsDefault__Subtype`
  --> src/str_encodings_default.rs:78:28
   |
78 |         self.lenOf2 = self.stream.read_u2le()?;
   |                            ^^^^^^

warning: unreachable expression
  --> src/str_encodings_default.rs:79:9
   |
79 |         self.str2 = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut str_encodings_default::StrEncodingsDefault__Subtype`
  --> src/str_encodings_default.rs:80:28
   |
80 |         self.lenOf3 = self.stream.read_u2le()?;
   |                            ^^^^^^

warning: unreachable expression
  --> src/str_encodings_default.rs:81:9
   |
81 |         self.str3 = panic!("Unimplemented encoding for bytesToStr: {}", "SJIS");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut str_encodings_default::StrEncodingsDefault__Subtype`
  --> src/str_encodings_default.rs:82:28
   |
82 |         self.lenOf4 = self.stream.read_u2le()?;
   |                            ^^^^^^

warning: unreachable expression
  --> src/str_encodings_default.rs:83:9
   |
83 |         self.str4 = panic!("Unimplemented encoding for bytesToStr: {}", "CP437");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `str_encodings::StrEncodings`
  --> src/str_encodings.rs:31:11
   |
31 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `lenOf1`, `str1`, `lenOf2`, `str2`, `lenOf3` ... and 3 others

error[E0609]: no field `stream` on type `&mut str_encodings::StrEncodings`
  --> src/str_encodings.rs:44:28
   |
44 |         self.lenOf1 = self.stream.read_u2le()?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut str_encodings::StrEncodings`
  --> src/str_encodings.rs:45:50
   |
45 |         self.str1 = String::from_utf8_lossy(self.stream.read_bytes(self.len_of_1)?);
   |                                                  ^^^^^^

error[E0609]: no field `len_of_1` on type `&mut str_encodings::StrEncodings`
  --> src/str_encodings.rs:45:73
   |
45 |         self.str1 = String::from_utf8_lossy(self.stream.read_bytes(self.len_of_1)?);
   |                                                                         ^^^^^^^^

error[E0308]: mismatched types
  --> src/repeat_eos_u4.rs:37:24
   |
37 |         self.numbers = [];
   |                        ^^
   |                        |
   |                        expected struct `std::vec::Vec`, found array of 0 elements
   |                        help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<u32>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut repeat_eos_u4::RepeatEosU4`
  --> src/repeat_eos_u4.rs:38:21
   |
38 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut repeat_eos_u4::RepeatEosU4`
  --> src/repeat_eos_u4.rs:39:36
   |
39 |             self.numbers.push(self.stream.read_u4le()?);
   |                                    ^^^^^^

error[E0308]: mismatched types
  --> src/repeat_eos_u4.rs:38:9
   |
35 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
38 | /         while !self.stream.isEof() {
39 | |             self.numbers.push(self.stream.read_u4le()?);
40 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `repeat_n_struct::RepeatNStruct`
  --> src/repeat_n_struct.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `qty`, `chunks`

error[E0609]: no field `stream` on type `&mut repeat_n_struct::RepeatNStruct`
  --> src/repeat_n_struct.rs:39:25
   |
39 |         self.qty = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut repeat_n_struct::RepeatNStruct`
  --> src/repeat_n_struct.rs:42:70
   |
42 |             self.chunks.push(Box::new(RepeatNStruct__Chunk::new(self.stream, self, _root)?));
   |                                                                      ^^^^^^

error[E0308]: mismatched types
  --> src/str_encodings.rs:45:21
   |
45 |         self.str1 = String::from_utf8_lossy(self.stream.read_bytes(self.len_of_1)?);
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                     |
   |                     expected struct `std::string::String`, found enum `std::borrow::Cow`
   |                     help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes(self.len_of_1)?).to_string()`
   |
   = note: expected type `std::string::String`
              found type `std::borrow::Cow<'_, str>`

error[E0609]: no field `stream` on type `&mut str_encodings::StrEncodings`
  --> src/str_encodings.rs:46:28
   |
46 |         self.lenOf2 = self.stream.read_u2le()?;
   |                            ^^^^^^

warning: unreachable expression
  --> src/str_encodings.rs:47:9
   |
47 |         self.str2 = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut str_encodings::StrEncodings`
  --> src/str_encodings.rs:48:28
   |
48 |         self.lenOf3 = self.stream.read_u2le()?;
   |                            ^^^^^^

warning: unreachable expression
  --> src/str_encodings.rs:49:9
   |
49 |         self.str3 = panic!("Unimplemented encoding for bytesToStr: {}", "SJIS");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut str_encodings::StrEncodings`
  --> src/str_encodings.rs:50:28
   |
50 |         self.lenOf4 = self.stream.read_u2le()?;
   |                            ^^^^^^

error[E0308]: mismatched types
  --> src/repeat_n_struct.rs:42:78
   |
42 |             self.chunks.push(Box::new(RepeatNStruct__Chunk::new(self.stream, self, _root)?));
   |                                                                              ^^^^ expected enum `std::option::Option`, found struct `repeat_n_struct::RepeatNStruct`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut repeat_n_struct::RepeatNStruct`

error[E0308]: mismatched types
  --> src/repeat_n_struct.rs:41:9
   |
37 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
41 | /         for i in 0..self.qty {
42 | |             self.chunks.push(Box::new(RepeatNStruct__Chunk::new(self.stream, self, _root)?));
43 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

warning: unreachable expression
  --> src/str_encodings.rs:51:9
   |
51 |         self.str4 = panic!("Unimplemented encoding for bytesToStr: {}", "CP437");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `repeat_n_struct::RepeatNStruct__Chunk`
  --> src/repeat_n_struct.rs:63:11
   |
63 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `offset`, `len`

error[E0609]: no field `stream` on type `str_eos::StrEos`
  --> src/str_eos.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `str`

error[E0609]: no field `stream` on type `&mut repeat_n_struct::RepeatNStruct__Chunk`
  --> src/repeat_n_struct.rs:76:28
   |
76 |         self.offset = self.stream.read_u4le()?;
   |                            ^^^^^^

warning: unreachable expression
  --> src/str_eos.rs:37:9
   |
37 |         self.str = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut repeat_n_struct::RepeatNStruct__Chunk`
  --> src/repeat_n_struct.rs:77:25
   |
77 |         self.len = self.stream.read_u4le()?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/repeat_n_struct.rs:75:27
   |
75 |           where Self: Sized {
   |  ___________________________^
76 | |         self.offset = self.stream.read_u4le()?;
77 | |         self.len = self.stream.read_u4le()?;
78 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `str_literals2::StrLiterals2`
  --> src/str_literals2.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
error[E0609]: no field `stream` on type `repeat_n_strz_double::RepeatNStrzDouble`
  --> src/repeat_n_strz_double.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   |
   = note: available fields are: `dollar1`, `dollar2`, `hash`, `atSign`

   = note: available fields are: `qty`, `lines1`, `lines2`

error[E0308]: mismatched types
  --> src/str_literals2.rs:39:27
   |
39 |           where Self: Sized {
   |  ___________________________^
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut repeat_n_strz_double::RepeatNStrzDouble`
  --> src/repeat_n_strz_double.rs:40:25
   |
40 |         self.qty = self.stream.read_u4le()?;
   |                         ^^^^^^

warning: unreachable expression
  --> src/repeat_n_strz_double.rs:43:13
   |
43 |             self.lines1.push(panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8"));
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unreachable expression
  --> src/repeat_n_strz_double.rs:47:13
   |
47 |             self.lines2.push(panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8"));
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> src/repeat_n_strz_double.rs:46:9
   |
38 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
46 | /         for i in 0..self.qty / 2 {
47 | |             self.lines2.push(panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8"));
48 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `repeat_n_strz::RepeatNStrz`
  --> src/repeat_n_strz.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `qty`, `lines`

error[E0609]: no field `stream` on type `&mut repeat_n_strz::RepeatNStrz`
  --> src/repeat_n_strz.rs:39:25
   |
39 |         self.qty = self.stream.read_u4le()?;
   |                         ^^^^^^

warning: unreachable expression
  --> src/repeat_n_strz.rs:42:13
   |
42 |             self.lines.push(panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8"));
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> src/repeat_n_strz.rs:41:9
   |
37 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
41 | /         for i in 0..self.qty {
42 | |             self.lines.push(panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8"));
43 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `repeat_until_complex::RepeatUntilComplex`
  --> src/repeat_until_complex.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `first`, `second`, `third`

error[E0609]: no field `stream` on type `&mut repeat_until_complex::RepeatUntilComplex`
  --> src/repeat_until_complex.rs:42:70
   |
42 |             let tmpa = Box::new(RepeatUntilComplex__TypeU1::new(self.stream, self, _root)?);
   |                                                                      ^^^^^^

error[E0308]: mismatched types
  --> src/str_literals2.rs:49:24
   |
49 |         self.dollar1 = "$foo";
   |                        ^^^^^^ expected enum `std::option::Option`, found reference
   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `&'static str`

error[E0308]: mismatched types
  --> src/str_literals2.rs:50:16
   |
50 |         return self.dollar1;
   |                ^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
  --> src/repeat_until_complex.rs:42:78
   |
42 |             let tmpa = Box::new(RepeatUntilComplex__TypeU1::new(self.stream, self, _root)?);
   |                                                                              ^^^^ expected enum `std::option::Option`, found struct `repeat_until_complex::RepeatUntilComplex`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut repeat_until_complex::RepeatUntilComplex`

error[E0609]: no field `stream` on type `&mut repeat_until_complex::RepeatUntilComplex`
  --> src/repeat_until_complex.rs:43:77
   |
43 |             self.first.append(Box::new(RepeatUntilComplex__TypeU1::new(self.stream, self, _root)?));
   |                                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/str_literals2.rs:57:24
   |
57 |         self.dollar2 = "${foo}";
   |                        ^^^^^^^^ expected enum `std::option::Option`, found reference
   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `&'static str`

error[E0308]: mismatched types
  --> src/str_literals2.rs:58:16
   |
58 |         return self.dollar2;
   |                ^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
  --> src/repeat_until_complex.rs:43:85
   |
43 |             self.first.append(Box::new(RepeatUntilComplex__TypeU1::new(self.stream, self, _root)?));
   |                                                                                     ^^^^ expected enum `std::option::Option`, found struct `repeat_until_complex::RepeatUntilComplex`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut repeat_until_complex::RepeatUntilComplex`

error[E0308]: mismatched types
  --> src/str_literals2.rs:65:21
   |
65 |         self.hash = "#{foo}";
   |                     ^^^^^^^^ expected enum `std::option::Option`, found reference
   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `&'static str`

error[E0308]: mismatched types
  --> src/str_literals2.rs:66:16
   |
66 |         return self.hash;
   |                ^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
  --> src/repeat_until_complex.rs:43:31
   |
43 |             self.first.append(Box::new(RepeatUntilComplex__TypeU1::new(self.stream, self, _root)?));
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected mutable reference, found struct `std::boxed::Box`
   |
   = note: expected type `&mut std::vec::Vec<std::boxed::Box<repeat_until_complex::RepeatUntilComplex__TypeU1>>`
              found type `std::boxed::Box<repeat_until_complex::RepeatUntilComplex__TypeU1>`

error[E0609]: no field `stream` on type `&mut repeat_until_complex::RepeatUntilComplex`
  --> src/repeat_until_complex.rs:48:70
   |
48 |             let tmpa = Box::new(RepeatUntilComplex__TypeU2::new(self.stream, self, _root)?);
   |                                                                      ^^^^^^

error[E0308]: mismatched types
  --> src/str_literals2.rs:73:23
   |
73 |         self.atSign = "@foo";
   |                       ^^^^^^ expected enum `std::option::Option`, found reference
   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `&'static str`

error[E0308]: mismatched types
  --> src/str_literals2.rs:74:16
   |
74 |         return self.atSign;
   |                ^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0609]: no field `stream` on type `str_literals::StrLiterals`
  --> src/str_literals.rs:28:11
   |
28 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `octalEatup2`, `backslashes`, `octalEatup`, `doubleQuotes`, `complexStr`

error[E0308]: mismatched types
  --> src/str_literals.rs:40:27
   |
40 |           where Self: Sized {
   |  ___________________________^
41 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/repeat_until_complex.rs:48:78
   |
48 |             let tmpa = Box::new(RepeatUntilComplex__TypeU2::new(self.stream, self, _root)?);
   |                                                                              ^^^^ expected enum `std::option::Option`, found struct `repeat_until_complex::RepeatUntilComplex`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut repeat_until_complex::RepeatUntilComplex`

error[E0609]: no field `stream` on type `&mut repeat_until_complex::RepeatUntilComplex`
  --> src/repeat_until_complex.rs:49:78
   |
49 |             self.second.append(Box::new(RepeatUntilComplex__TypeU2::new(self.stream, self, _root)?));
   |                                                                              ^^^^^^

error[E0308]: mismatched types
  --> src/str_literals.rs:50:28
   |
50 |         self.octalEatup2 = "\0022";
   |                            ^^^^^^^ expected enum `std::option::Option`, found reference
   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `&'static str`

error[E0308]: mismatched types
  --> src/str_literals.rs:51:16
   |
51 |         return self.octalEatup2;
   |                ^^^^^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
  --> src/repeat_until_complex.rs:49:86
   |
49 |             self.second.append(Box::new(RepeatUntilComplex__TypeU2::new(self.stream, self, _root)?));
   |                                                                                      ^^^^ expected enum `std::option::Option`, found struct `repeat_until_complex::RepeatUntilComplex`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut repeat_until_complex::RepeatUntilComplex`

error[E0308]: mismatched types
  --> src/str_literals.rs:58:28
   |
58 |         self.backslashes = "\\\\\\";
   |                            ^^^^^^^^ expected enum `std::option::Option`, found reference
   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `&'static str`

error[E0308]: mismatched types
  --> src/str_literals.rs:59:16
   |
59 |         return self.backslashes;
   |                ^^^^^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
  --> src/repeat_until_complex.rs:49:32
   |
49 |             self.second.append(Box::new(RepeatUntilComplex__TypeU2::new(self.stream, self, _root)?));
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected mutable reference, found struct `std::boxed::Box`
   |
   = note: expected type `&mut std::vec::Vec<std::boxed::Box<repeat_until_complex::RepeatUntilComplex__TypeU2>>`
              found type `std::boxed::Box<repeat_until_complex::RepeatUntilComplex__TypeU2>`

error[E0609]: no field `stream` on type `&mut repeat_until_complex::RepeatUntilComplex`
  --> src/repeat_until_complex.rs:54:29
   |
54 |             let tmpa = self.stream.read_u1()?;
   |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut repeat_until_complex::RepeatUntilComplex`
  --> src/repeat_until_complex.rs:55:36
   |
55 |             self.third.append(self.stream.read_u1()?);
   |                                    ^^^^^^

error[E0308]: mismatched types
  --> src/repeat_until_complex.rs:53:9
   |
38 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
53 | /         while {
54 | |             let tmpa = self.stream.read_u1()?;
55 | |             self.third.append(self.stream.read_u1()?);
56 | |             !(tmpa == 0)
57 | |         } { }
   | |_____________^ expected enum `std::result::Result`, found ()
   |
error[E0308]: mismatched types
  --> src/str_literals.rs:66:27
   |
66 |         self.octalEatup = "\00022";
   |                           ^^^^^^^^ expected enum `std::option::Option`, found reference
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `&'static str`

error[E0308]: mismatched types
  --> src/str_literals.rs:67:16
   |
67 |         return self.octalEatup;
   |                ^^^^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0609]: no field `stream` on type `repeat_until_complex::RepeatUntilComplex__TypeU1`
  --> src/repeat_until_complex.rs:77:11
   |
77 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `count`, `values`

error[E0609]: no field `stream` on type `&mut repeat_until_complex::RepeatUntilComplex__TypeU1`
  --> src/repeat_until_complex.rs:90:27
   |
90 |         self.count = self.stream.read_u1()?;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut repeat_until_complex::RepeatUntilComplex__TypeU1`
  --> src/repeat_until_complex.rs:93:35
   |
93 |             self.values.push(self.stream.read_u1()?);
   |                                   ^^^^^^

error[E0308]: mismatched types
  --> src/repeat_until_complex.rs:92:9
   |
88 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
92 | /         for i in 0..self.count {
93 | |             self.values.push(self.stream.read_u1()?);
94 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `repeat_until_complex::RepeatUntilComplex__TypeU2`
   --> src/repeat_until_complex.rs:114:11
    |
114 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `count`, `values`

error[E0609]: no field `stream` on type `&mut repeat_until_complex::RepeatUntilComplex__TypeU2`
   --> src/repeat_until_complex.rs:127:27
    |
127 |         self.count = self.stream.read_u2le()?;
    |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut repeat_until_complex::RepeatUntilComplex__TypeU2`
   --> src/repeat_until_complex.rs:130:35
    |
130 |             self.values.push(self.stream.read_u2le()?);
    |                                   ^^^^^^

error[E0308]: mismatched types
   --> src/repeat_until_complex.rs:129:9
    |
125 |                                -> Result<()>
    |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
129 | /         for i in 0..self.count {
130 | |             self.values.push(self.stream.read_u2le()?);
131 | |         }
    | |_________^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `repeat_until_s4::RepeatUntilS4`
  --> src/repeat_until_s4.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `entries`, `afterall`

error[E0609]: no field `stream` on type `&mut repeat_until_s4::RepeatUntilS4`
  --> src/repeat_until_s4.rs:41:29
   |
41 |             let tmpa = self.stream.read_s4le()?;
   |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut repeat_until_s4::RepeatUntilS4`
  --> src/repeat_until_s4.rs:42:38
   |
42 |             self.entries.append(self.stream.read_s4le()?);
   |                                      ^^^^^^

error[E0609]: no field `stream` on type `&mut repeat_until_s4::RepeatUntilS4`
  --> src/repeat_until_s4.rs:45:54
   |
45 |         self.afterall = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
   |                                                      ^^^^^^

error[E0308]: mismatched types
  --> src/str_literals.rs:74:29
   |
74 |         self.doubleQuotes = "\"\"\"";
   |                             ^^^^^^^^ expected enum `std::option::Option`, found reference
   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `&'static str`

error[E0308]: mismatched types
  --> src/str_literals.rs:75:16
   |
75 |         return self.doubleQuotes;
   |                ^^^^^^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
  --> src/repeat_until_s4.rs:45:25
   |
45 |         self.afterall = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                         |
   |                         expected struct `std::string::String`, found enum `std::borrow::Cow`
   |                         help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?).to_string()`
   |
   = note: expected type `std::string::String`
              found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
  --> src/repeat_until_s4.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.entries = vec!();
40 | |         while {
41 | |             let tmpa = self.stream.read_s4le()?;
...  |
45 | |         self.afterall = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
46 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `repeat_until_sized::RepeatUntilSized`
  --> src/repeat_until_sized.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `records`, `_raw_records`

error[E0609]: no field `stream` on type `&mut repeat_until_sized::RepeatUntilSized`
  --> src/repeat_until_sized.rs:43:29
   |
43 |             let tmpb = self.stream.read_bytes(5)?;
   |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut repeat_until_sized::RepeatUntilSized`
  --> src/repeat_until_sized.rs:44:43
   |
44 |             self._raw_records.append(self.stream.read_bytes(5)?);
   |                                           ^^^^^^

error[E0609]: no field `stream` on type `&mut repeat_until_sized::RepeatUntilSized`
  --> src/repeat_until_sized.rs:46:68
   |
46 |             let tmpa = Box::new(RepeatUntilSized__Record::new(self.stream, self, _root)?);
   |                                                                    ^^^^^^

error[E0308]: mismatched types
  --> src/str_literals.rs:82:27
   |
82 |         self.complexStr = "\000\001\002\007\010\n\r\t\013\014\033=\007\n$\u{263b}";
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found reference
   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `&'static str`

error[E0308]: mismatched types
  --> src/str_literals.rs:83:16
   |
83 |         return self.complexStr;
   |                ^^^^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0609]: no field `stream` on type `str_pad_term_empty::StrPadTermEmpty`
  --> src/str_pad_term_empty.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ did you mean `strPad`?

warning: unreachable expression
  --> src/str_pad_term_empty.rs:40:9
   |
40 |         self.strPad = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unreachable expression
  --> src/str_pad_term_empty.rs:41:9
   |
41 |         self.strTerm = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unreachable expression
  --> src/str_pad_term_empty.rs:42:9
   |
42 |         self.strTermAndPad = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unreachable expression
  --> src/str_pad_term_empty.rs:43:9
   |
43 |         self.strTermInclude = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `str_pad_term::StrPadTerm`
  --> src/str_pad_term.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ did you mean `strPad`?

warning: unreachable expression
  --> src/str_pad_term.rs:40:9
   |
40 |         self.strPad = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unreachable expression
  --> src/str_pad_term.rs:41:9
   |
41 |         self.strTerm = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unreachable expression
  --> src/str_pad_term.rs:42:9
   |
42 |         self.strTermAndPad = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unreachable expression
  --> src/str_pad_term.rs:43:9
   |
43 |         self.strTermInclude = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `switch_cast::SwitchCast`
  --> src/switch_cast.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `opcodes`, `firstObj`, `secondVal`, `errCast`

error[E0308]: mismatched types
  --> src/repeat_until_sized.rs:46:76
   |
46 |             let tmpa = Box::new(RepeatUntilSized__Record::new(self.stream, self, _root)?);
   |                                                                            ^^^^ expected enum `std::option::Option`, found struct `repeat_until_sized::RepeatUntilSized`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut repeat_until_sized::RepeatUntilSized`

error[E0609]: no field `stream` on type `&mut repeat_until_sized::RepeatUntilSized`
  --> src/repeat_until_sized.rs:47:77
   |
47 |             self.records.append(Box::new(RepeatUntilSized__Record::new(self.stream, self, _root)?));
   |                                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/switch_cast.rs:40:24
   |
40 |         self.opcodes = [];
   |                        ^^
   |                        |
   |                        expected struct `std::vec::Vec`, found array of 0 elements
   |                        help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<switch_cast::SwitchCast__Opcode>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut switch_cast::SwitchCast`
  --> src/switch_cast.rs:41:21
   |
41 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_cast::SwitchCast`
  --> src/switch_cast.rs:42:69
   |
42 |             self.opcodes.push(Box::new(SwitchCast__Opcode::new(self.stream, self, _root)?));
   |                                                                     ^^^^^^

error[E0308]: mismatched types
  --> src/repeat_until_sized.rs:47:85
   |
47 |             self.records.append(Box::new(RepeatUntilSized__Record::new(self.stream, self, _root)?));
   |                                                                                     ^^^^ expected enum `std::option::Option`, found struct `repeat_until_sized::RepeatUntilSized`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut repeat_until_sized::RepeatUntilSized`

error[E0308]: mismatched types
  --> src/switch_cast.rs:42:77
   |
42 |             self.opcodes.push(Box::new(SwitchCast__Opcode::new(self.stream, self, _root)?));
   |                                                                             ^^^^ expected enum `std::option::Option`, found struct `switch_cast::SwitchCast`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_cast::SwitchCast`

error[E0308]: mismatched types
  --> src/switch_cast.rs:41:9
   |
38 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
41 | /         while !self.stream.isEof() {
42 | |             self.opcodes.push(Box::new(SwitchCast__Opcode::new(self.stream, self, _root)?));
43 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/repeat_until_sized.rs:47:33
   |
47 |             self.records.append(Box::new(RepeatUntilSized__Record::new(self.stream, self, _root)?));
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected mutable reference, found struct `std::boxed::Box`
   |
   = note: expected type `&mut std::vec::Vec<std::boxed::Box<repeat_until_sized::RepeatUntilSized__Record>>`
              found type `std::boxed::Box<repeat_until_sized::RepeatUntilSized__Record>`

error[E0308]: mismatched types
  --> src/repeat_until_sized.rs:42:9
   |
38 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
42 | /         while {
43 | |             let tmpb = self.stream.read_bytes(5)?;
44 | |             self._raw_records.append(self.stream.read_bytes(5)?);
45 | |             let mut io = Cursor::new(tmpb);
...  |
48 | |             !(tmpa.marker == 170)
49 | |         } { }
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `repeat_until_sized::RepeatUntilSized__Record`
  --> src/repeat_until_sized.rs:69:11
   |
69 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `marker`, `body`

error[E0609]: no field `stream` on type `&mut repeat_until_sized::RepeatUntilSized__Record`
  --> src/repeat_until_sized.rs:82:28
   |
82 |         self.marker = self.stream.read_u1()?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut repeat_until_sized::RepeatUntilSized__Record`
  --> src/repeat_until_sized.rs:83:26
   |
83 |         self.body = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0308]: mismatched types
  --> src/repeat_until_sized.rs:81:27
   |
81 |           where Self: Sized {
   |  ___________________________^
82 | |         self.marker = self.stream.read_u1()?;
83 | |         self.body = self.stream.read_u4le()?;
84 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `str_encodings_default::StrEncodingsDefault`
  --> src/str_encodings_default.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `lenOf1`, `str1`, `rest`

error[E0609]: no field `stream` on type `&mut str_encodings_default::StrEncodingsDefault`
  --> src/str_encodings_default.rs:39:28
   |
39 |         self.lenOf1 = self.stream.read_u2le()?;
   |                            ^^^^^^

warning: unreachable expression
  --> src/str_encodings_default.rs:40:9
   |
40 |         self.str1 = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut str_encodings_default::StrEncodingsDefault`
  --> src/str_encodings_default.rs:41:69
   |
41 |         self.rest = Box::new(StrEncodingsDefault__Subtype::new(self.stream, self, _root)?);
   |                                                                     ^^^^^^

error[E0308]: mismatched types
  --> src/switch_cast.rs:53:25
   |
53 |         self.firstObj = self.opcodes[0].body;
   |                         ^^^^^^^^^^^^^^^^^^^^ expected struct `switch_cast::SwitchCast__Strval`, found trait kaitai_struct::KaitaiStruct
   |
   = note: expected type `std::option::Option<std::boxed::Box<switch_cast::SwitchCast__Strval>>`
              found type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`

error[E0308]: mismatched types
  --> src/switch_cast.rs:54:16
   |
54 |         return self.firstObj;
   |                ^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `value` on type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
  --> src/switch_cast.rs:61:47
   |
61 |         self.secondVal = self.opcodes[1].body.value;
   |                                               ^^^^^

error[E0308]: mismatched types
  --> src/switch_cast.rs:62:16
   |
62 |         return self.secondVal;
   |                ^^^^^^^^^^^^^^ expected u8, found enum `std::option::Option`
   |
   = note: expected type `u8`
              found type `std::option::Option<u8>`

error[E0308]: mismatched types
  --> src/str_encodings_default.rs:41:77
   |
41 |         self.rest = Box::new(StrEncodingsDefault__Subtype::new(self.stream, self, _root)?);
   |                                                                             ^^^^ expected enum `std::option::Option`, found struct `str_encodings_default::StrEncodingsDefault`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut str_encodings_default::StrEncodingsDefault`

error[E0609]: no field `stream` on type `str_encodings_default::StrEncodingsDefault__Subtype`
  --> src/str_encodings_default.rs:65:11
   |
65 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `lenOf2`, `str2`, `lenOf3`, `str3`, `lenOf4`, `str4`

error[E0609]: no field `stream` on type `&mut str_encodings_default::StrEncodingsDefault__Subtype`
  --> src/str_encodings_default.rs:78:28
   |
78 |         self.lenOf2 = self.stream.read_u2le()?;
   |                            ^^^^^^

warning: unreachable expression
  --> src/str_encodings_default.rs:79:9
   |
79 |         self.str2 = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut str_encodings_default::StrEncodingsDefault__Subtype`
  --> src/str_encodings_default.rs:80:28
   |
80 |         self.lenOf3 = self.stream.read_u2le()?;
   |                            ^^^^^^

warning: unreachable expression
  --> src/str_encodings_default.rs:81:9
   |
81 |         self.str3 = panic!("Unimplemented encoding for bytesToStr: {}", "SJIS");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut str_encodings_default::StrEncodingsDefault__Subtype`
  --> src/str_encodings_default.rs:82:28
   |
82 |         self.lenOf4 = self.stream.read_u2le()?;
   |                            ^^^^^^

warning: unreachable expression
  --> src/str_encodings_default.rs:83:9
   |
83 |         self.str4 = panic!("Unimplemented encoding for bytesToStr: {}", "CP437");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `str_encodings::StrEncodings`
  --> src/str_encodings.rs:31:11
   |
31 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `lenOf1`, `str1`, `lenOf2`, `str2`, `lenOf3` ... and 3 others

error[E0609]: no field `stream` on type `&mut str_encodings::StrEncodings`
  --> src/str_encodings.rs:44:28
   |
44 |         self.lenOf1 = self.stream.read_u2le()?;
   |                            ^^^^^^

error[E0609]: no field `stream` on type `&mut str_encodings::StrEncodings`
  --> src/str_encodings.rs:45:50
   |
45 |         self.str1 = String::from_utf8_lossy(self.stream.read_bytes(self.len_of_1)?);
   |                                                  ^^^^^^

error[E0609]: no field `len_of_1` on type `&mut str_encodings::StrEncodings`
  --> src/str_encodings.rs:45:73
   |
45 |         self.str1 = String::from_utf8_lossy(self.stream.read_bytes(self.len_of_1)?);
   |                                                                         ^^^^^^^^

error[E0308]: mismatched types
  --> src/switch_cast.rs:69:24
   |
69 |         self.errCast = self.opcodes[2].body;
   |                        ^^^^^^^^^^^^^^^^^^^^ expected struct `switch_cast::SwitchCast__Strval`, found trait kaitai_struct::KaitaiStruct
   |
   = note: expected type `std::option::Option<std::boxed::Box<switch_cast::SwitchCast__Strval>>`
              found type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`

error[E0308]: mismatched types
  --> src/switch_cast.rs:70:16
   |
70 |         return self.errCast;
   |                ^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `switch_cast::SwitchCast__Opcode`
  --> src/switch_cast.rs:87:11
   |
87 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `code`, `body`

error[E0609]: no field `stream` on type `&mut switch_cast::SwitchCast__Opcode`
   --> src/switch_cast.rs:100:26
    |
100 |         self.code = self.stream.read_u1()?;
    |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_cast::SwitchCast__Opcode`
   --> src/switch_cast.rs:103:67
    |
103 |                 self.body = Box::new(SwitchCast__Intval::new(self.stream, self, _root)?);
    |                                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/str_encodings.rs:45:21
   |
45 |         self.str1 = String::from_utf8_lossy(self.stream.read_bytes(self.len_of_1)?);
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                     |
   |                     expected struct `std::string::String`, found enum `std::borrow::Cow`
   |                     help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes(self.len_of_1)?).to_string()`
   |
   = note: expected type `std::string::String`
              found type `std::borrow::Cow<'_, str>`

error[E0609]: no field `stream` on type `&mut str_encodings::StrEncodings`
  --> src/str_encodings.rs:46:28
   |
46 |         self.lenOf2 = self.stream.read_u2le()?;
   |                            ^^^^^^

error[E0308]: mismatched types
   --> src/switch_cast.rs:103:75
    |
103 |                 self.body = Box::new(SwitchCast__Intval::new(self.stream, self, _root)?);
    |                                                                           ^^^^ expected enum `std::option::Option`, found struct `switch_cast::SwitchCast__Opcode`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut switch_cast::SwitchCast__Opcode`

warning: unreachable expression
  --> src/str_encodings.rs:47:9
   |
47 |         self.str2 = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut str_encodings::StrEncodings`
  --> src/str_encodings.rs:48:28
   |
48 |         self.lenOf3 = self.stream.read_u2le()?;
   |                            ^^^^^^

warning: unreachable expression
  --> src/str_encodings.rs:49:9
   |
49 |         self.str3 = panic!("Unimplemented encoding for bytesToStr: {}", "SJIS");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `&mut str_encodings::StrEncodings`
  --> src/str_encodings.rs:50:28
   |
50 |         self.lenOf4 = self.stream.read_u2le()?;
   |                            ^^^^^^

warning: unreachable expression
  --> src/str_encodings.rs:51:9
   |
51 |         self.str4 = panic!("Unimplemented encoding for bytesToStr: {}", "CP437");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `str_eos::StrEos`
  --> src/str_eos.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `str`

warning: unreachable expression
  --> src/str_eos.rs:37:9
   |
37 |         self.str = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `str_literals2::StrLiterals2`
  --> src/str_literals2.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `dollar1`, `dollar2`, `hash`, `atSign`

error[E0308]: mismatched types
  --> src/str_literals2.rs:39:27
   |
39 |           where Self: Sized {
   |  ___________________________^
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
   --> src/switch_cast.rs:103:29
    |
103 |                 self.body = Box::new(SwitchCast__Intval::new(self.stream, self, _root)?);
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
    |
    = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `std::boxed::Box<switch_cast::SwitchCast__Intval>`
help: try using a variant of the expected type
    |
103 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchCast__Intval>::new(self.stream,
104 |                                                                         self,
105 |                                                                         _root))
106 |                {
107 |                ::std::result::Result::Err(err) =>
108 |                    #[allow(unreachable_code)]
  ...

error[E0308]: mismatched types
   --> src/switch_cast.rs:102:19
    |
102 |               73 => {
    |  ___________________^
103 | |                 self.body = Box::new(SwitchCast__Intval::new(self.stream, self, _root)?);
104 | |             },
    | |_____________^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `&mut switch_cast::SwitchCast__Opcode`
   --> src/switch_cast.rs:106:67
    |
106 |                 self.body = Box::new(SwitchCast__Strval::new(self.stream, self, _root)?);
    |                                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/str_literals2.rs:49:24
   |
49 |         self.dollar1 = "$foo";
   |                        ^^^^^^ expected enum `std::option::Option`, found reference
   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `&'static str`

error[E0308]: mismatched types
  --> src/str_literals2.rs:50:16
   |
50 |         return self.dollar1;
   |                ^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
   --> src/switch_cast.rs:106:75
    |
106 |                 self.body = Box::new(SwitchCast__Strval::new(self.stream, self, _root)?);
    |                                                                           ^^^^ expected enum `std::option::Option`, found struct `switch_cast::SwitchCast__Opcode`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut switch_cast::SwitchCast__Opcode`

error[E0308]: mismatched types
  --> src/str_literals2.rs:57:24
   |
57 |         self.dollar2 = "${foo}";
   |                        ^^^^^^^^ expected enum `std::option::Option`, found reference
   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `&'static str`

error[E0308]: mismatched types
  --> src/str_literals2.rs:58:16
   |
58 |         return self.dollar2;
   |                ^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
   --> src/switch_cast.rs:106:29
    |
106 |                 self.body = Box::new(SwitchCast__Strval::new(self.stream, self, _root)?);
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
    |
    = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `std::boxed::Box<switch_cast::SwitchCast__Strval>`
help: try using a variant of the expected type
    |
106 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchCast__Strval>::new(self.stream,
107 |                                                                         self,
108 |                                                                         _root))
109 |                {
110 |                ::std::result::Result::Err(err) =>
111 |                    #[allow(unreachable_code)]
  ...

error[E0308]: mismatched types
   --> src/switch_cast.rs:105:19
    |
105 |               83 => {
    |  ___________________^
106 | |                 self.body = Box::new(SwitchCast__Strval::new(self.stream, self, _root)?);
107 | |             },
    | |_____________^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_cast::SwitchCast__Intval`
   --> src/switch_cast.rs:127:11
    |
127 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut switch_cast::SwitchCast__Intval`
   --> src/switch_cast.rs:140:27
    |
140 |         self.value = self.stream.read_u1()?;
    |                           ^^^^^^

error[E0308]: mismatched types
   --> src/switch_cast.rs:139:27
    |
139 |           where Self: Sized {
    |  ___________________________^
140 | |         self.value = self.stream.read_u1()?;
141 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0308]: mismatched types
  --> src/str_literals2.rs:65:21
   |
65 |         self.hash = "#{foo}";
   |                     ^^^^^^^^ expected enum `std::option::Option`, found reference
   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `&'static str`

error[E0308]: mismatched types
  --> src/str_literals2.rs:66:16
   |
66 |         return self.hash;
   |                ^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0609]: no field `stream` on type `switch_cast::SwitchCast__Strval`
   --> src/switch_cast.rs:159:11
    |
159 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut switch_cast::SwitchCast__Strval`
   --> src/switch_cast.rs:172:51
    |
172 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/str_literals2.rs:73:23
   |
73 |         self.atSign = "@foo";
   |                       ^^^^^^ expected enum `std::option::Option`, found reference
   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `&'static str`

error[E0308]: mismatched types
  --> src/str_literals2.rs:74:16
   |
74 |         return self.atSign;
   |                ^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0609]: no field `stream` on type `str_literals::StrLiterals`
  --> src/str_literals.rs:28:11
   |
28 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `octalEatup2`, `backslashes`, `octalEatup`, `doubleQuotes`, `complexStr`

error[E0308]: mismatched types
  --> src/str_literals.rs:40:27
   |
40 |           where Self: Sized {
   |  ___________________________^
41 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
   --> src/switch_cast.rs:172:22
    |
172 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                      |
    |                      expected struct `std::string::String`, found enum `std::borrow::Cow`
    |                      help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?).to_string()`
    |
    = note: expected type `std::string::String`
               found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
   --> src/switch_cast.rs:171:27
    |
171 |           where Self: Sized {
    |  ___________________________^
172 | |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
173 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_integers2::SwitchIntegers2`
  --> src/switch_integers2.rs:28:11
   |
28 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `code`, `len`, `ham`, `padding`, `lenModStr`

error[E0609]: no field `stream` on type `&mut switch_integers2::SwitchIntegers2`
  --> src/switch_integers2.rs:41:26
   |
41 |         self.code = self.stream.read_u1()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_integers2::SwitchIntegers2`
  --> src/switch_integers2.rs:44:33
   |
44 |                 self.len = self.stream.read_u1()?;
   |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_integers2::SwitchIntegers2`
  --> src/switch_integers2.rs:47:33
   |
47 |                 self.len = self.stream.read_u2le()?;
   |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_integers2::SwitchIntegers2`
  --> src/switch_integers2.rs:50:33
   |
50 |                 self.len = self.stream.read_u4le()?;
   |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_integers2::SwitchIntegers2`
  --> src/switch_integers2.rs:53:33
   |
53 |                 self.len = self.stream.read_u8le()?;
   |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_integers2::SwitchIntegers2`
  --> src/switch_integers2.rs:56:25
   |
56 |         self.ham = self.stream.read_bytes(self.len)?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_integers2::SwitchIntegers2`
  --> src/switch_integers2.rs:58:33
   |
58 |             self.padding = self.stream.read_u1()?;
   |                                 ^^^^^^

error[E0308]: mismatched types
  --> src/switch_integers2.rs:57:25
   |
57 |           if self.len > 3 {
   |  _________________________^
58 | |             self.padding = self.stream.read_u1()?;
59 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/str_literals.rs:50:28
   |
50 |         self.octalEatup2 = "\0022";
   |                            ^^^^^^^ expected enum `std::option::Option`, found reference
   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `&'static str`

error[E0308]: mismatched types
  --> src/str_literals.rs:51:16
   |
51 |         return self.octalEatup2;
   |                ^^^^^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
  --> src/switch_integers2.rs:69:26
   |
69 |         self.lenModStr = ((self.len * 2) - 1).to_string();
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                          |
   |                          expected enum `std::option::Option`, found struct `std::string::String`
   |                          help: try using a variant of the expected type: `Some((self.len * 2 - 1).to_string())`
   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `std::string::String`

error[E0308]: mismatched types
  --> src/switch_integers2.rs:70:16
   |
70 |         return self.lenModStr;
   |                ^^^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0609]: no field `stream` on type `switch_integers::SwitchIntegers`
  --> src/switch_integers.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `opcodes`

error[E0308]: mismatched types
  --> src/str_literals.rs:58:28
   |
58 |         self.backslashes = "\\\\\\";
   |                            ^^^^^^^^ expected enum `std::option::Option`, found reference
   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `&'static str`

error[E0308]: mismatched types
  --> src/str_literals.rs:59:16
   |
59 |         return self.backslashes;
   |                ^^^^^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
  --> src/switch_integers.rs:37:24
   |
37 |         self.opcodes = [];
   |                        ^^
   |                        |
   |                        expected struct `std::vec::Vec`, found array of 0 elements
   |                        help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<switch_integers::SwitchIntegers__Opcode>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut switch_integers::SwitchIntegers`
  --> src/switch_integers.rs:38:21
   |
38 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_integers::SwitchIntegers`
  --> src/switch_integers.rs:39:73
   |
39 |             self.opcodes.push(Box::new(SwitchIntegers__Opcode::new(self.stream, self, _root)?));
   |                                                                         ^^^^^^

error[E0308]: mismatched types
  --> src/str_literals.rs:66:27
   |
66 |         self.octalEatup = "\00022";
   |                           ^^^^^^^^ expected enum `std::option::Option`, found reference
   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `&'static str`

error[E0308]: mismatched types
  --> src/str_literals.rs:67:16
   |
67 |         return self.octalEatup;
   |                ^^^^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
  --> src/switch_integers.rs:39:81
   |
39 |             self.opcodes.push(Box::new(SwitchIntegers__Opcode::new(self.stream, self, _root)?));
   |                                                                                 ^^^^ expected enum `std::option::Option`, found struct `switch_integers::SwitchIntegers`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_integers::SwitchIntegers`

error[E0308]: mismatched types
  --> src/switch_integers.rs:38:9
   |
35 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
38 | /         while !self.stream.isEof() {
39 | |             self.opcodes.push(Box::new(SwitchIntegers__Opcode::new(self.stream, self, _root)?));
40 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_integers::SwitchIntegers__Opcode`
  --> src/switch_integers.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `code`, `body`

error[E0609]: no field `stream` on type `&mut switch_integers::SwitchIntegers__Opcode`
  --> src/switch_integers.rs:73:26
   |
73 |         self.code = self.stream.read_u1()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_integers::SwitchIntegers__Opcode`
  --> src/switch_integers.rs:76:34
   |
76 |                 self.body = self.stream.read_u1()?;
   |                                  ^^^^^^

error[E0308]: mismatched types
  --> src/switch_integers.rs:75:18
   |
75 |               1 => {
   |  __________________^
76 | |                 self.body = self.stream.read_u1()?;
77 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut switch_integers::SwitchIntegers__Opcode`
  --> src/switch_integers.rs:79:34
   |
79 |                 self.body = self.stream.read_u2le()?;
   |                                  ^^^^^^

error[E0308]: mismatched types
  --> src/switch_integers.rs:78:18
   |
78 |               2 => {
   |  __________________^
79 | |                 self.body = self.stream.read_u2le()?;
80 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut switch_integers::SwitchIntegers__Opcode`
  --> src/switch_integers.rs:82:34
   |
82 |                 self.body = self.stream.read_u4le()?;
   |                                  ^^^^^^

error[E0308]: mismatched types
  --> src/switch_integers.rs:81:18
   |
81 |               4 => {
   |  __________________^
82 | |                 self.body = self.stream.read_u4le()?;
83 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut switch_integers::SwitchIntegers__Opcode`
  --> src/switch_integers.rs:85:34
   |
85 |                 self.body = self.stream.read_u8le()?;
   |                                  ^^^^^^

error[E0308]: mismatched types
  --> src/switch_integers.rs:84:18
   |
84 |               8 => {
   |  __________________^
85 | |                 self.body = self.stream.read_u8le()?;
86 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_manual_enum::SwitchManualEnum`
  --> src/switch_manual_enum.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `opcodes`

error[E0308]: mismatched types
  --> src/str_literals.rs:74:29
   |
74 |         self.doubleQuotes = "\"\"\"";
   |                             ^^^^^^^^ expected enum `std::option::Option`, found reference
   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `&'static str`

error[E0308]: mismatched types
  --> src/str_literals.rs:75:16
   |
75 |         return self.doubleQuotes;
   |                ^^^^^^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0308]: mismatched types
  --> src/switch_manual_enum.rs:37:24
   |
37 |         self.opcodes = [];
   |                        ^^
   |                        |
   |                        expected struct `std::vec::Vec`, found array of 0 elements
   |                        help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<switch_manual_enum::SwitchManualEnum__Opcode>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut switch_manual_enum::SwitchManualEnum`
  --> src/switch_manual_enum.rs:38:21
   |
38 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_enum::SwitchManualEnum`
  --> src/switch_manual_enum.rs:39:75
   |
39 |             self.opcodes.push(Box::new(SwitchManualEnum__Opcode::new(self.stream, self, _root)?));
   |                                                                           ^^^^^^

error[E0308]: mismatched types
  --> src/str_literals.rs:82:27
   |
82 |         self.complexStr = "\000\001\002\007\010\n\r\t\013\014\033=\007\n$\u{263b}";
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found reference
   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `&'static str`

error[E0308]: mismatched types
  --> src/str_literals.rs:83:16
   |
83 |         return self.complexStr;
   |                ^^^^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0609]: no field `stream` on type `str_pad_term_empty::StrPadTermEmpty`
  --> src/str_pad_term_empty.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ did you mean `strPad`?

warning: unreachable expression
  --> src/str_pad_term_empty.rs:40:9
   |
40 |         self.strPad = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unreachable expression
  --> src/str_pad_term_empty.rs:41:9
   |
41 |         self.strTerm = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unreachable expression
  --> src/str_pad_term_empty.rs:42:9
   |
42 |         self.strTermAndPad = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unreachable expression
  --> src/str_pad_term_empty.rs:43:9
   |
43 |         self.strTermInclude = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `str_pad_term::StrPadTerm`
  --> src/str_pad_term.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ did you mean `strPad`?

warning: unreachable expression
  --> src/str_pad_term.rs:40:9
   |
40 |         self.strPad = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unreachable expression
  --> src/str_pad_term.rs:41:9
   |
41 |         self.strTerm = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unreachable expression
  --> src/str_pad_term.rs:42:9
   |
42 |         self.strTermAndPad = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unreachable expression
  --> src/str_pad_term.rs:43:9
   |
43 |         self.strTermInclude = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `switch_cast::SwitchCast`
  --> src/switch_cast.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `opcodes`, `firstObj`, `secondVal`, `errCast`

error[E0308]: mismatched types
  --> src/switch_manual_enum.rs:39:83
   |
39 |             self.opcodes.push(Box::new(SwitchManualEnum__Opcode::new(self.stream, self, _root)?));
   |                                                                                   ^^^^ expected enum `std::option::Option`, found struct `switch_manual_enum::SwitchManualEnum`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_enum::SwitchManualEnum`

error[E0308]: mismatched types
  --> src/switch_manual_enum.rs:38:9
   |
35 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
38 | /         while !self.stream.isEof() {
39 | |             self.opcodes.push(Box::new(SwitchManualEnum__Opcode::new(self.stream, self, _root)?));
40 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0277]: the trait bound `switch_manual_enum::SwitchManualEnum__Opcode__CodeEnum: std::default::Default` is not satisfied
  --> src/switch_manual_enum.rs:48:5
   |
48 |     pub code: Box<SwitchManualEnum__Opcode__CodeEnum>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `switch_manual_enum::SwitchManualEnum__Opcode__CodeEnum`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<switch_manual_enum::SwitchManualEnum__Opcode__CodeEnum>`
   = note: required by `std::default::Default::default`

error[E0609]: no field `stream` on type `switch_manual_enum::SwitchManualEnum__Opcode`
  --> src/switch_manual_enum.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `code`, `body`

error[E0609]: no field `stream` on type `&mut switch_manual_enum::SwitchManualEnum__Opcode`
  --> src/switch_manual_enum.rs:73:26
   |
73 |         self.code = self.stream.read_u1()?;
   |                          ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_enum.rs:75:13
   |
75 |             SwitchManualEnum__Opcode__CodeEnum::INTVAL => {
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `switch_manual_enum::SwitchManualEnum__Opcode__CodeEnum`
   |
   = note: expected type `std::boxed::Box<switch_manual_enum::SwitchManualEnum__Opcode__CodeEnum>`
              found type `switch_manual_enum::SwitchManualEnum__Opcode__CodeEnum`

error[E0308]: mismatched types
  --> src/switch_manual_enum.rs:78:13
   |
78 |             SwitchManualEnum__Opcode__CodeEnum::STRVAL => {
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `switch_manual_enum::SwitchManualEnum__Opcode__CodeEnum`
   |
   = note: expected type `std::boxed::Box<switch_manual_enum::SwitchManualEnum__Opcode__CodeEnum>`
              found type `switch_manual_enum::SwitchManualEnum__Opcode__CodeEnum`

error[E0609]: no field `stream` on type `&mut switch_manual_enum::SwitchManualEnum__Opcode`
  --> src/switch_manual_enum.rs:76:81
   |
76 |                 self.body = Box::new(SwitchManualEnum__Opcode__Intval::new(self.stream, self, _root)?);
   |                                                                                 ^^^^^^

error[E0308]: mismatched types
  --> src/switch_cast.rs:40:24
   |
40 |         self.opcodes = [];
   |                        ^^
   |                        |
   |                        expected struct `std::vec::Vec`, found array of 0 elements
   |                        help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<switch_cast::SwitchCast__Opcode>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut switch_cast::SwitchCast`
  --> src/switch_cast.rs:41:21
   |
41 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_cast::SwitchCast`
  --> src/switch_cast.rs:42:69
   |
42 |             self.opcodes.push(Box::new(SwitchCast__Opcode::new(self.stream, self, _root)?));
   |                                                                     ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_enum.rs:76:89
   |
76 |                 self.body = Box::new(SwitchManualEnum__Opcode__Intval::new(self.stream, self, _root)?);
   |                                                                                         ^^^^ expected enum `std::option::Option`, found struct `switch_manual_enum::SwitchManualEnum__Opcode`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_enum::SwitchManualEnum__Opcode`

error[E0308]: mismatched types
  --> src/switch_cast.rs:42:77
   |
42 |             self.opcodes.push(Box::new(SwitchCast__Opcode::new(self.stream, self, _root)?));
   |                                                                             ^^^^ expected enum `std::option::Option`, found struct `switch_cast::SwitchCast`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_cast::SwitchCast`

error[E0308]: mismatched types
  --> src/switch_cast.rs:41:9
   |
38 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
41 | /         while !self.stream.isEof() {
42 | |             self.opcodes.push(Box::new(SwitchCast__Opcode::new(self.stream, self, _root)?));
43 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/switch_manual_enum.rs:76:29
   |
76 |                 self.body = Box::new(SwitchManualEnum__Opcode__Intval::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_enum::SwitchManualEnum__Opcode__Intval>`
help: try using a variant of the expected type
   |
76 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualEnum__Opcode__Intval>::new(self.stream,
77 |                                                                                       self,
78 |                                                                                       _root))
79 |                {
80 |                ::std::result::Result::Err(err) =>
81 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_enum.rs:75:59
   |
75 |               SwitchManualEnum__Opcode__CodeEnum::INTVAL => {
   |  ___________________________________________________________^
76 | |                 self.body = Box::new(SwitchManualEnum__Opcode__Intval::new(self.stream, self, _root)?);
77 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut switch_manual_enum::SwitchManualEnum__Opcode`
  --> src/switch_manual_enum.rs:79:81
   |
79 |                 self.body = Box::new(SwitchManualEnum__Opcode__Strval::new(self.stream, self, _root)?);
   |                                                                                 ^^^^^^

error[E0308]: mismatched types
  --> src/switch_cast.rs:53:25
   |
53 |         self.firstObj = self.opcodes[0].body;
   |                         ^^^^^^^^^^^^^^^^^^^^ expected struct `switch_cast::SwitchCast__Strval`, found trait kaitai_struct::KaitaiStruct
   |
   = note: expected type `std::option::Option<std::boxed::Box<switch_cast::SwitchCast__Strval>>`
              found type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`

error[E0308]: mismatched types
  --> src/switch_cast.rs:54:16
   |
54 |         return self.firstObj;
   |                ^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `value` on type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
  --> src/switch_cast.rs:61:47
   |
61 |         self.secondVal = self.opcodes[1].body.value;
   |                                               ^^^^^

error[E0308]: mismatched types
  --> src/switch_cast.rs:62:16
   |
62 |         return self.secondVal;
   |                ^^^^^^^^^^^^^^ expected u8, found enum `std::option::Option`
   |
   = note: expected type `u8`
              found type `std::option::Option<u8>`

error[E0308]: mismatched types
  --> src/switch_manual_enum.rs:79:89
   |
79 |                 self.body = Box::new(SwitchManualEnum__Opcode__Strval::new(self.stream, self, _root)?);
   |                                                                                         ^^^^ expected enum `std::option::Option`, found struct `switch_manual_enum::SwitchManualEnum__Opcode`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_enum::SwitchManualEnum__Opcode`

error[E0308]: mismatched types
  --> src/switch_manual_enum.rs:79:29
   |
79 |                 self.body = Box::new(SwitchManualEnum__Opcode__Strval::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_enum::SwitchManualEnum__Opcode__Strval>`
help: try using a variant of the expected type
   |
79 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualEnum__Opcode__Strval>::new(self.stream,
80 |                                                                                       self,
81 |                                                                                       _root))
82 |                {
83 |                ::std::result::Result::Err(err) =>
84 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_enum.rs:78:59
   |
78 |               SwitchManualEnum__Opcode__CodeEnum::STRVAL => {
   |  ___________________________________________________________^
79 | |                 self.body = Box::new(SwitchManualEnum__Opcode__Strval::new(self.stream, self, _root)?);
80 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_manual_enum::SwitchManualEnum__Opcode__Intval`
   --> src/switch_manual_enum.rs:104:11
    |
104 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut switch_manual_enum::SwitchManualEnum__Opcode__Intval`
   --> src/switch_manual_enum.rs:117:27
    |
117 |         self.value = self.stream.read_u1()?;
    |                           ^^^^^^

error[E0308]: mismatched types
  --> src/switch_cast.rs:69:24
   |
69 |         self.errCast = self.opcodes[2].body;
   |                        ^^^^^^^^^^^^^^^^^^^^ expected struct `switch_cast::SwitchCast__Strval`, found trait kaitai_struct::KaitaiStruct
   |
   = note: expected type `std::option::Option<std::boxed::Box<switch_cast::SwitchCast__Strval>>`
              found type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`

error[E0308]: mismatched types
  --> src/switch_cast.rs:70:16
   |
70 |         return self.errCast;
   |                ^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0308]: mismatched types
   --> src/switch_manual_enum.rs:116:27
    |
116 |           where Self: Sized {
    |  ___________________________^
117 | |         self.value = self.stream.read_u1()?;
118 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_cast::SwitchCast__Opcode`
  --> src/switch_cast.rs:87:11
   |
87 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `code`, `body`

error[E0609]: no field `stream` on type `switch_manual_enum::SwitchManualEnum__Opcode__Strval`
   --> src/switch_manual_enum.rs:136:11
    |
136 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut switch_cast::SwitchCast__Opcode`
   --> src/switch_cast.rs:100:26
    |
100 |         self.code = self.stream.read_u1()?;
    |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_enum::SwitchManualEnum__Opcode__Strval`
   --> src/switch_manual_enum.rs:149:51
    |
149 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                                                   ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_cast::SwitchCast__Opcode`
   --> src/switch_cast.rs:103:67
    |
103 |                 self.body = Box::new(SwitchCast__Intval::new(self.stream, self, _root)?);
    |                                                                   ^^^^^^

error[E0308]: mismatched types
   --> src/switch_manual_enum.rs:149:22
    |
149 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                      |
    |                      expected struct `std::string::String`, found enum `std::borrow::Cow`
    |                      help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?).to_string()`
    |
    = note: expected type `std::string::String`
               found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
   --> src/switch_manual_enum.rs:148:27
    |
148 |           where Self: Sized {
    |  ___________________________^
149 | |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
150 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0308]: mismatched types
   --> src/switch_cast.rs:103:75
    |
103 |                 self.body = Box::new(SwitchCast__Intval::new(self.stream, self, _root)?);
    |                                                                           ^^^^ expected enum `std::option::Option`, found struct `switch_cast::SwitchCast__Opcode`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut switch_cast::SwitchCast__Opcode`

error[E0609]: no field `stream` on type `switch_manual_int_else::SwitchManualIntElse`
  --> src/switch_manual_int_else.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `opcodes`

error[E0308]: mismatched types
   --> src/switch_cast.rs:103:29
    |
103 |                 self.body = Box::new(SwitchCast__Intval::new(self.stream, self, _root)?);
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
    |
    = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `std::boxed::Box<switch_cast::SwitchCast__Intval>`
help: try using a variant of the expected type
    |
103 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchCast__Intval>::new(self.stream,
104 |                                                                         self,
105 |                                                                         _root))
106 |                {
107 |                ::std::result::Result::Err(err) =>
108 |                    #[allow(unreachable_code)]
  ...

error[E0308]: mismatched types
   --> src/switch_cast.rs:102:19
    |
102 |               73 => {
    |  ___________________^
103 | |                 self.body = Box::new(SwitchCast__Intval::new(self.stream, self, _root)?);
104 | |             },
    | |_____________^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `&mut switch_cast::SwitchCast__Opcode`
   --> src/switch_cast.rs:106:67
    |
106 |                 self.body = Box::new(SwitchCast__Strval::new(self.stream, self, _root)?);
    |                                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_int_else.rs:37:24
   |
37 |         self.opcodes = [];
   |                        ^^
   |                        |
   |                        expected struct `std::vec::Vec`, found array of 0 elements
   |                        help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<switch_manual_int_else::SwitchManualIntElse__Opcode>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut switch_manual_int_else::SwitchManualIntElse`
  --> src/switch_manual_int_else.rs:38:21
   |
38 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_int_else::SwitchManualIntElse`
  --> src/switch_manual_int_else.rs:39:78
   |
39 |             self.opcodes.push(Box::new(SwitchManualIntElse__Opcode::new(self.stream, self, _root)?));
   |                                                                              ^^^^^^

error[E0308]: mismatched types
   --> src/switch_cast.rs:106:75
    |
106 |                 self.body = Box::new(SwitchCast__Strval::new(self.stream, self, _root)?);
    |                                                                           ^^^^ expected enum `std::option::Option`, found struct `switch_cast::SwitchCast__Opcode`
    |
    = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `&mut switch_cast::SwitchCast__Opcode`

error[E0308]: mismatched types
  --> src/switch_manual_int_else.rs:39:86
   |
39 |             self.opcodes.push(Box::new(SwitchManualIntElse__Opcode::new(self.stream, self, _root)?));
   |                                                                                      ^^^^ expected enum `std::option::Option`, found struct `switch_manual_int_else::SwitchManualIntElse`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_int_else::SwitchManualIntElse`

error[E0308]: mismatched types
  --> src/switch_manual_int_else.rs:38:9
   |
35 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
38 | /         while !self.stream.isEof() {
39 | |             self.opcodes.push(Box::new(SwitchManualIntElse__Opcode::new(self.stream, self, _root)?));
40 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_manual_int_else::SwitchManualIntElse__Opcode`
  --> src/switch_manual_int_else.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `code`, `body`

error[E0609]: no field `stream` on type `&mut switch_manual_int_else::SwitchManualIntElse__Opcode`
  --> src/switch_manual_int_else.rs:73:26
   |
73 |         self.code = self.stream.read_u1()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_int_else::SwitchManualIntElse__Opcode`
  --> src/switch_manual_int_else.rs:76:84
   |
76 |                 self.body = Box::new(SwitchManualIntElse__Opcode__Intval::new(self.stream, self, _root)?);
   |                                                                                    ^^^^^^

error[E0308]: mismatched types
   --> src/switch_cast.rs:106:29
    |
106 |                 self.body = Box::new(SwitchCast__Strval::new(self.stream, self, _root)?);
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
    |
    = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
               found type `std::boxed::Box<switch_cast::SwitchCast__Strval>`
help: try using a variant of the expected type
    |
106 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchCast__Strval>::new(self.stream,
107 |                                                                         self,
108 |                                                                         _root))
109 |                {
110 |                ::std::result::Result::Err(err) =>
111 |                    #[allow(unreachable_code)]
  ...

error[E0308]: mismatched types
   --> src/switch_cast.rs:105:19
    |
105 |               83 => {
    |  ___________________^
106 | |                 self.body = Box::new(SwitchCast__Strval::new(self.stream, self, _root)?);
107 | |             },
    | |_____________^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_cast::SwitchCast__Intval`
   --> src/switch_cast.rs:127:11
    |
127 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut switch_cast::SwitchCast__Intval`
   --> src/switch_cast.rs:140:27
    |
140 |         self.value = self.stream.read_u1()?;
    |                           ^^^^^^

error[E0308]: mismatched types
   --> src/switch_cast.rs:139:27
    |
139 |           where Self: Sized {
    |  ___________________________^
140 | |         self.value = self.stream.read_u1()?;
141 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_cast::SwitchCast__Strval`
   --> src/switch_cast.rs:159:11
    |
159 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut switch_cast::SwitchCast__Strval`
   --> src/switch_cast.rs:172:51
    |
172 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_int_else.rs:76:92
   |
76 |                 self.body = Box::new(SwitchManualIntElse__Opcode__Intval::new(self.stream, self, _root)?);
   |                                                                                            ^^^^ expected enum `std::option::Option`, found struct `switch_manual_int_else::SwitchManualIntElse__Opcode`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_int_else::SwitchManualIntElse__Opcode`

error[E0308]: mismatched types
   --> src/switch_cast.rs:172:22
    |
172 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                      |
    |                      expected struct `std::string::String`, found enum `std::borrow::Cow`
    |                      help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?).to_string()`
    |
    = note: expected type `std::string::String`
               found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
   --> src/switch_cast.rs:171:27
    |
171 |           where Self: Sized {
    |  ___________________________^
172 | |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
173 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_integers2::SwitchIntegers2`
  --> src/switch_integers2.rs:28:11
   |
28 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `code`, `len`, `ham`, `padding`, `lenModStr`

error[E0609]: no field `stream` on type `&mut switch_integers2::SwitchIntegers2`
  --> src/switch_integers2.rs:41:26
   |
41 |         self.code = self.stream.read_u1()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_integers2::SwitchIntegers2`
  --> src/switch_integers2.rs:44:33
   |
44 |                 self.len = self.stream.read_u1()?;
   |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_integers2::SwitchIntegers2`
  --> src/switch_integers2.rs:47:33
   |
47 |                 self.len = self.stream.read_u2le()?;
   |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_integers2::SwitchIntegers2`
  --> src/switch_integers2.rs:50:33
   |
50 |                 self.len = self.stream.read_u4le()?;
   |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_integers2::SwitchIntegers2`
  --> src/switch_integers2.rs:53:33
   |
53 |                 self.len = self.stream.read_u8le()?;
   |                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_integers2::SwitchIntegers2`
  --> src/switch_integers2.rs:56:25
   |
56 |         self.ham = self.stream.read_bytes(self.len)?;
   |                         ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_int_else.rs:76:29
   |
76 |                 self.body = Box::new(SwitchManualIntElse__Opcode__Intval::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_int_else::SwitchManualIntElse__Opcode__Intval>`
help: try using a variant of the expected type
   |
76 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualIntElse__Opcode__Intval>::new(self.stream,
77 |                                                                                          self,
78 |                                                                                          _root))
79 |                {
80 |                ::std::result::Result::Err(err) =>
81 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_int_else.rs:75:19
   |
75 |               73 => {
   |  ___________________^
76 | |                 self.body = Box::new(SwitchManualIntElse__Opcode__Intval::new(self.stream, self, _root)?);
77 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut switch_integers2::SwitchIntegers2`
  --> src/switch_integers2.rs:58:33
   |
58 |             self.padding = self.stream.read_u1()?;
   |                                 ^^^^^^

error[E0308]: mismatched types
  --> src/switch_integers2.rs:57:25
   |
57 |           if self.len > 3 {
   |  _________________________^
58 | |             self.padding = self.stream.read_u1()?;
59 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut switch_manual_int_else::SwitchManualIntElse__Opcode`
  --> src/switch_manual_int_else.rs:79:84
   |
79 |                 self.body = Box::new(SwitchManualIntElse__Opcode__Strval::new(self.stream, self, _root)?);
   |                                                                                    ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_int_else.rs:79:92
   |
79 |                 self.body = Box::new(SwitchManualIntElse__Opcode__Strval::new(self.stream, self, _root)?);
   |                                                                                            ^^^^ expected enum `std::option::Option`, found struct `switch_manual_int_else::SwitchManualIntElse__Opcode`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_int_else::SwitchManualIntElse__Opcode`

error[E0308]: mismatched types
  --> src/switch_integers2.rs:69:26
   |
69 |         self.lenModStr = ((self.len * 2) - 1).to_string();
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                          |
   |                          expected enum `std::option::Option`, found struct `std::string::String`
   |                          help: try using a variant of the expected type: `Some((self.len * 2 - 1).to_string())`
   |
   = note: expected type `std::option::Option<std::string::String>`
              found type `std::string::String`

error[E0308]: mismatched types
  --> src/switch_integers2.rs:70:16
   |
70 |         return self.lenModStr;
   |                ^^^^^^^^^^^^^^ expected struct `std::string::String`, found enum `std::option::Option`
   |
   = note: expected type `std::string::String`
              found type `std::option::Option<std::string::String>`

error[E0609]: no field `stream` on type `switch_integers::SwitchIntegers`
  --> src/switch_integers.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `opcodes`

error[E0308]: mismatched types
  --> src/switch_integers.rs:37:24
   |
37 |         self.opcodes = [];
   |                        ^^
   |                        |
   |                        expected struct `std::vec::Vec`, found array of 0 elements
   |                        help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<switch_integers::SwitchIntegers__Opcode>>`
              found type `[_; 0]`

error[E0308]: mismatched types
  --> src/switch_manual_int_else.rs:79:29
   |
79 |                 self.body = Box::new(SwitchManualIntElse__Opcode__Strval::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_int_else::SwitchManualIntElse__Opcode__Strval>`
help: try using a variant of the expected type
   |
79 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualIntElse__Opcode__Strval>::new(self.stream,
80 |                                                                                          self,
81 |                                                                                          _root))
82 |                {
83 |                ::std::result::Result::Err(err) =>
84 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_int_else.rs:78:19
   |
78 |               83 => {
   |  ___________________^
79 | |                 self.body = Box::new(SwitchManualIntElse__Opcode__Strval::new(self.stream, self, _root)?);
80 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut switch_integers::SwitchIntegers`
  --> src/switch_integers.rs:38:21
   |
38 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_int_else::SwitchManualIntElse__Opcode`
  --> src/switch_manual_int_else.rs:82:85
   |
82 |                 self.body = Box::new(SwitchManualIntElse__Opcode__Noneval::new(self.stream, self, _root)?);
   |                                                                                     ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_integers::SwitchIntegers`
  --> src/switch_integers.rs:39:73
   |
39 |             self.opcodes.push(Box::new(SwitchIntegers__Opcode::new(self.stream, self, _root)?));
   |                                                                         ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_int_else.rs:82:93
   |
82 |                 self.body = Box::new(SwitchManualIntElse__Opcode__Noneval::new(self.stream, self, _root)?);
   |                                                                                             ^^^^ expected enum `std::option::Option`, found struct `switch_manual_int_else::SwitchManualIntElse__Opcode`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_int_else::SwitchManualIntElse__Opcode`

error[E0308]: mismatched types
  --> src/switch_integers.rs:39:81
   |
39 |             self.opcodes.push(Box::new(SwitchIntegers__Opcode::new(self.stream, self, _root)?));
   |                                                                                 ^^^^ expected enum `std::option::Option`, found struct `switch_integers::SwitchIntegers`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_integers::SwitchIntegers`

error[E0308]: mismatched types
  --> src/switch_integers.rs:38:9
   |
35 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
38 | /         while !self.stream.isEof() {
39 | |             self.opcodes.push(Box::new(SwitchIntegers__Opcode::new(self.stream, self, _root)?));
40 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_integers::SwitchIntegers__Opcode`
  --> src/switch_integers.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `code`, `body`

error[E0609]: no field `stream` on type `&mut switch_integers::SwitchIntegers__Opcode`
  --> src/switch_integers.rs:73:26
   |
73 |         self.code = self.stream.read_u1()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_integers::SwitchIntegers__Opcode`
  --> src/switch_integers.rs:76:34
   |
76 |                 self.body = self.stream.read_u1()?;
   |                                  ^^^^^^

error[E0308]: mismatched types
  --> src/switch_integers.rs:75:18
   |
75 |               1 => {
   |  __________________^
76 | |                 self.body = self.stream.read_u1()?;
77 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut switch_integers::SwitchIntegers__Opcode`
  --> src/switch_integers.rs:79:34
   |
79 |                 self.body = self.stream.read_u2le()?;
   |                                  ^^^^^^

error[E0308]: mismatched types
  --> src/switch_integers.rs:78:18
   |
78 |               2 => {
   |  __________________^
79 | |                 self.body = self.stream.read_u2le()?;
80 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut switch_integers::SwitchIntegers__Opcode`
  --> src/switch_integers.rs:82:34
   |
82 |                 self.body = self.stream.read_u4le()?;
   |                                  ^^^^^^

error[E0308]: mismatched types
  --> src/switch_integers.rs:81:18
   |
81 |               4 => {
   |  __________________^
82 | |                 self.body = self.stream.read_u4le()?;
83 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut switch_integers::SwitchIntegers__Opcode`
  --> src/switch_integers.rs:85:34
   |
85 |                 self.body = self.stream.read_u8le()?;
   |                                  ^^^^^^

error[E0308]: mismatched types
  --> src/switch_integers.rs:84:18
   |
84 |               8 => {
   |  __________________^
85 | |                 self.body = self.stream.read_u8le()?;
86 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_manual_enum::SwitchManualEnum`
  --> src/switch_manual_enum.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `opcodes`

error[E0308]: mismatched types
  --> src/switch_manual_int_else.rs:82:29
   |
82 |                 self.body = Box::new(SwitchManualIntElse__Opcode__Noneval::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_int_else::SwitchManualIntElse__Opcode__Noneval>`
help: try using a variant of the expected type
   |
82 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualIntElse__Opcode__Noneval>::new(self.stream,
83 |                                                                                           self,
84 |                                                                                           _root))
85 |                {
86 |                ::std::result::Result::Err(err) =>
87 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_int_else.rs:81:18
   |
81 |               _ => {
   |  __________________^
82 | |                 self.body = Box::new(SwitchManualIntElse__Opcode__Noneval::new(self.stream, self, _root)?);
83 | |             }
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_manual_int_else::SwitchManualIntElse__Opcode__Intval`
   --> src/switch_manual_int_else.rs:103:11
    |
103 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut switch_manual_int_else::SwitchManualIntElse__Opcode__Intval`
   --> src/switch_manual_int_else.rs:116:27
    |
116 |         self.value = self.stream.read_u1()?;
    |                           ^^^^^^

error[E0308]: mismatched types
   --> src/switch_manual_int_else.rs:115:27
    |
115 |           where Self: Sized {
    |  ___________________________^
116 | |         self.value = self.stream.read_u1()?;
117 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_manual_int_else::SwitchManualIntElse__Opcode__Strval`
   --> src/switch_manual_int_else.rs:135:11
    |
135 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut switch_manual_int_else::SwitchManualIntElse__Opcode__Strval`
   --> src/switch_manual_int_else.rs:148:51
    |
148 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_enum.rs:37:24
   |
37 |         self.opcodes = [];
   |                        ^^
   |                        |
   |                        expected struct `std::vec::Vec`, found array of 0 elements
   |                        help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<switch_manual_enum::SwitchManualEnum__Opcode>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut switch_manual_enum::SwitchManualEnum`
  --> src/switch_manual_enum.rs:38:21
   |
38 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_enum::SwitchManualEnum`
  --> src/switch_manual_enum.rs:39:75
   |
39 |             self.opcodes.push(Box::new(SwitchManualEnum__Opcode::new(self.stream, self, _root)?));
   |                                                                           ^^^^^^

error[E0308]: mismatched types
   --> src/switch_manual_int_else.rs:148:22
    |
148 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                      |
    |                      expected struct `std::string::String`, found enum `std::borrow::Cow`
    |                      help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?).to_string()`
    |
    = note: expected type `std::string::String`
               found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
   --> src/switch_manual_int_else.rs:147:27
    |
147 |           where Self: Sized {
    |  ___________________________^
148 | |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
149 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_manual_int_else::SwitchManualIntElse__Opcode__Noneval`
   --> src/switch_manual_int_else.rs:167:11
    |
167 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `filler`

error[E0308]: mismatched types
  --> src/switch_manual_enum.rs:39:83
   |
39 |             self.opcodes.push(Box::new(SwitchManualEnum__Opcode::new(self.stream, self, _root)?));
   |                                                                                   ^^^^ expected enum `std::option::Option`, found struct `switch_manual_enum::SwitchManualEnum`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_enum::SwitchManualEnum`

error[E0308]: mismatched types
  --> src/switch_manual_enum.rs:38:9
   |
35 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
38 | /         while !self.stream.isEof() {
39 | |             self.opcodes.push(Box::new(SwitchManualEnum__Opcode::new(self.stream, self, _root)?));
40 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut switch_manual_int_else::SwitchManualIntElse__Opcode__Noneval`
   --> src/switch_manual_int_else.rs:180:28
    |
180 |         self.filler = self.stream.read_u4le()?;
    |                            ^^^^^^

error[E0308]: mismatched types
   --> src/switch_manual_int_else.rs:179:27
    |
179 |           where Self: Sized {
    |  ___________________________^
180 | |         self.filler = self.stream.read_u4le()?;
181 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
error[E0277]: the trait bound `switch_manual_enum::SwitchManualEnum__Opcode__CodeEnum: std::default::Default` is not satisfied
  --> src/switch_manual_enum.rs:48:5
   |
48 |     pub code: Box<SwitchManualEnum__Opcode__CodeEnum>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `switch_manual_enum::SwitchManualEnum__Opcode__CodeEnum`
    |
   |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<switch_manual_enum::SwitchManualEnum__Opcode__CodeEnum>`

   = note: required by `std::default::Default::default`

error[E0609]: no field `stream` on type `switch_manual_enum::SwitchManualEnum__Opcode`
  --> src/switch_manual_enum.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `code`, `body`

error[E0609]: no field `stream` on type `switch_manual_int::SwitchManualInt`
  --> src/switch_manual_int.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `opcodes`

error[E0609]: no field `stream` on type `&mut switch_manual_enum::SwitchManualEnum__Opcode`
  --> src/switch_manual_enum.rs:73:26
   |
73 |         self.code = self.stream.read_u1()?;
   |                          ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_enum.rs:75:13
   |
75 |             SwitchManualEnum__Opcode__CodeEnum::INTVAL => {
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `switch_manual_enum::SwitchManualEnum__Opcode__CodeEnum`
   |
   = note: expected type `std::boxed::Box<switch_manual_enum::SwitchManualEnum__Opcode__CodeEnum>`
              found type `switch_manual_enum::SwitchManualEnum__Opcode__CodeEnum`

error[E0308]: mismatched types
  --> src/switch_manual_enum.rs:78:13
   |
78 |             SwitchManualEnum__Opcode__CodeEnum::STRVAL => {
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::boxed::Box`, found enum `switch_manual_enum::SwitchManualEnum__Opcode__CodeEnum`
   |
   = note: expected type `std::boxed::Box<switch_manual_enum::SwitchManualEnum__Opcode__CodeEnum>`
              found type `switch_manual_enum::SwitchManualEnum__Opcode__CodeEnum`

error[E0609]: no field `stream` on type `&mut switch_manual_enum::SwitchManualEnum__Opcode`
  --> src/switch_manual_enum.rs:76:81
   |
76 |                 self.body = Box::new(SwitchManualEnum__Opcode__Intval::new(self.stream, self, _root)?);
   |                                                                                 ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_int.rs:37:24
   |
37 |         self.opcodes = [];
   |                        ^^
   |                        |
   |                        expected struct `std::vec::Vec`, found array of 0 elements
   |                        help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<switch_manual_int::SwitchManualInt__Opcode>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut switch_manual_int::SwitchManualInt`
  --> src/switch_manual_int.rs:38:21
   |
38 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_int::SwitchManualInt`
  --> src/switch_manual_int.rs:39:74
   |
39 |             self.opcodes.push(Box::new(SwitchManualInt__Opcode::new(self.stream, self, _root)?));
   |                                                                          ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_enum.rs:76:89
   |
76 |                 self.body = Box::new(SwitchManualEnum__Opcode__Intval::new(self.stream, self, _root)?);
   |                                                                                         ^^^^ expected enum `std::option::Option`, found struct `switch_manual_enum::SwitchManualEnum__Opcode`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_enum::SwitchManualEnum__Opcode`

error[E0308]: mismatched types
  --> src/switch_manual_int.rs:39:82
   |
39 |             self.opcodes.push(Box::new(SwitchManualInt__Opcode::new(self.stream, self, _root)?));
   |                                                                                  ^^^^ expected enum `std::option::Option`, found struct `switch_manual_int::SwitchManualInt`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_int::SwitchManualInt`

error[E0308]: mismatched types
  --> src/switch_manual_int.rs:38:9
   |
35 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
38 | /         while !self.stream.isEof() {
39 | |             self.opcodes.push(Box::new(SwitchManualInt__Opcode::new(self.stream, self, _root)?));
40 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_manual_int::SwitchManualInt__Opcode`
  --> src/switch_manual_int.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `code`, `body`

error[E0308]: mismatched types
  --> src/switch_manual_enum.rs:76:29
   |
76 |                 self.body = Box::new(SwitchManualEnum__Opcode__Intval::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_enum::SwitchManualEnum__Opcode__Intval>`
help: try using a variant of the expected type
   |
76 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualEnum__Opcode__Intval>::new(self.stream,
77 |                                                                                       self,
78 |                                                                                       _root))
79 |                {
80 |                ::std::result::Result::Err(err) =>
81 |                    #[allow(unreachable_code)]
 ...

error[E0609]: no field `stream` on type `&mut switch_manual_int::SwitchManualInt__Opcode`
  --> src/switch_manual_int.rs:73:26
   |
73 |         self.code = self.stream.read_u1()?;
   |                          ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_enum.rs:75:59
   |
75 |               SwitchManualEnum__Opcode__CodeEnum::INTVAL => {
   |  ___________________________________________________________^
76 | |                 self.body = Box::new(SwitchManualEnum__Opcode__Intval::new(self.stream, self, _root)?);
77 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut switch_manual_enum::SwitchManualEnum__Opcode`
  --> src/switch_manual_enum.rs:79:81
   |
79 |                 self.body = Box::new(SwitchManualEnum__Opcode__Strval::new(self.stream, self, _root)?);
   |                                                                                 ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_int::SwitchManualInt__Opcode`
  --> src/switch_manual_int.rs:76:80
   |
76 |                 self.body = Box::new(SwitchManualInt__Opcode__Intval::new(self.stream, self, _root)?);
   |                                                                                ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_int.rs:76:88
   |
76 |                 self.body = Box::new(SwitchManualInt__Opcode__Intval::new(self.stream, self, _root)?);
   |                                                                                        ^^^^ expected enum `std::option::Option`, found struct `switch_manual_int::SwitchManualInt__Opcode`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_int::SwitchManualInt__Opcode`

error[E0308]: mismatched types
  --> src/switch_manual_enum.rs:79:89
   |
79 |                 self.body = Box::new(SwitchManualEnum__Opcode__Strval::new(self.stream, self, _root)?);
   |                                                                                         ^^^^ expected enum `std::option::Option`, found struct `switch_manual_enum::SwitchManualEnum__Opcode`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_enum::SwitchManualEnum__Opcode`

error[E0308]: mismatched types
  --> src/switch_manual_enum.rs:79:29
   |
79 |                 self.body = Box::new(SwitchManualEnum__Opcode__Strval::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_enum::SwitchManualEnum__Opcode__Strval>`
help: try using a variant of the expected type
   |
79 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualEnum__Opcode__Strval>::new(self.stream,
80 |                                                                                       self,
81 |                                                                                       _root))
82 |                {
83 |                ::std::result::Result::Err(err) =>
84 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_enum.rs:78:59
   |
78 |               SwitchManualEnum__Opcode__CodeEnum::STRVAL => {
   |  ___________________________________________________________^
79 | |                 self.body = Box::new(SwitchManualEnum__Opcode__Strval::new(self.stream, self, _root)?);
80 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_manual_enum::SwitchManualEnum__Opcode__Intval`
   --> src/switch_manual_enum.rs:104:11
    |
104 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut switch_manual_enum::SwitchManualEnum__Opcode__Intval`
   --> src/switch_manual_enum.rs:117:27
    |
117 |         self.value = self.stream.read_u1()?;
    |                           ^^^^^^

error[E0308]: mismatched types
   --> src/switch_manual_enum.rs:116:27
    |
116 |           where Self: Sized {
    |  ___________________________^
117 | |         self.value = self.stream.read_u1()?;
118 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0308]: mismatched types
  --> src/switch_manual_int.rs:76:29
   |
76 |                 self.body = Box::new(SwitchManualInt__Opcode__Intval::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_int::SwitchManualInt__Opcode__Intval>`
help: try using a variant of the expected type
   |
76 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualInt__Opcode__Intval>::new(self.stream,
77 |                                                                                      self,
78 |                                                                                      _root))
79 |                {
80 |                ::std::result::Result::Err(err) =>
81 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_int.rs:75:19
   |
75 |               73 => {
   |  ___________________^
76 | |                 self.body = Box::new(SwitchManualInt__Opcode__Intval::new(self.stream, self, _root)?);
77 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_manual_enum::SwitchManualEnum__Opcode__Strval`
   --> src/switch_manual_enum.rs:136:11
    |
136 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut switch_manual_int::SwitchManualInt__Opcode`
  --> src/switch_manual_int.rs:79:80
   |
79 |                 self.body = Box::new(SwitchManualInt__Opcode__Strval::new(self.stream, self, _root)?);
   |                                                                                ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_enum::SwitchManualEnum__Opcode__Strval`
   --> src/switch_manual_enum.rs:149:51
    |
149 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_int.rs:79:88
   |
79 |                 self.body = Box::new(SwitchManualInt__Opcode__Strval::new(self.stream, self, _root)?);
   |                                                                                        ^^^^ expected enum `std::option::Option`, found struct `switch_manual_int::SwitchManualInt__Opcode`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_int::SwitchManualInt__Opcode`

error[E0308]: mismatched types
   --> src/switch_manual_enum.rs:149:22
    |
149 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                      |
    |                      expected struct `std::string::String`, found enum `std::borrow::Cow`
    |                      help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?).to_string()`
    |
    = note: expected type `std::string::String`
               found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
   --> src/switch_manual_enum.rs:148:27
    |
148 |           where Self: Sized {
    |  ___________________________^
149 | |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
150 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_manual_int_else::SwitchManualIntElse`
  --> src/switch_manual_int_else.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `opcodes`

error[E0308]: mismatched types
  --> src/switch_manual_int.rs:79:29
   |
79 |                 self.body = Box::new(SwitchManualInt__Opcode__Strval::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_int::SwitchManualInt__Opcode__Strval>`
help: try using a variant of the expected type
   |
79 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualInt__Opcode__Strval>::new(self.stream,
80 |                                                                                      self,
81 |                                                                                      _root))
82 |                {
83 |                ::std::result::Result::Err(err) =>
84 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_int.rs:78:19
   |
78 |               83 => {
   |  ___________________^
79 | |                 self.body = Box::new(SwitchManualInt__Opcode__Strval::new(self.stream, self, _root)?);
80 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_manual_int::SwitchManualInt__Opcode__Intval`
   --> src/switch_manual_int.rs:100:11
    |
100 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut switch_manual_int::SwitchManualInt__Opcode__Intval`
   --> src/switch_manual_int.rs:113:27
    |
113 |         self.value = self.stream.read_u1()?;
    |                           ^^^^^^

error[E0308]: mismatched types
   --> src/switch_manual_int.rs:112:27
    |
112 |           where Self: Sized {
    |  ___________________________^
113 | |         self.value = self.stream.read_u1()?;
114 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_manual_int::SwitchManualInt__Opcode__Strval`
   --> src/switch_manual_int.rs:132:11
    |
132 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut switch_manual_int::SwitchManualInt__Opcode__Strval`
   --> src/switch_manual_int.rs:145:51
    |
145 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_int_else.rs:37:24
   |
37 |         self.opcodes = [];
   |                        ^^
   |                        |
   |                        expected struct `std::vec::Vec`, found array of 0 elements
   |                        help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<switch_manual_int_else::SwitchManualIntElse__Opcode>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut switch_manual_int_else::SwitchManualIntElse`
  --> src/switch_manual_int_else.rs:38:21
   |
38 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_int_else::SwitchManualIntElse`
  --> src/switch_manual_int_else.rs:39:78
   |
39 |             self.opcodes.push(Box::new(SwitchManualIntElse__Opcode::new(self.stream, self, _root)?));
   |                                                                              ^^^^^^

error[E0308]: mismatched types
   --> src/switch_manual_int.rs:145:22
    |
145 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                      |
    |                      expected struct `std::string::String`, found enum `std::borrow::Cow`
    |                      help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?).to_string()`
    |
    = note: expected type `std::string::String`
               found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
   --> src/switch_manual_int.rs:144:27
    |
144 |           where Self: Sized {
    |  ___________________________^
145 | |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
146 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_manual_int_size_else::SwitchManualIntSizeElse`
  --> src/switch_manual_int_size_else.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `chunks`

error[E0308]: mismatched types
  --> src/switch_manual_int_else.rs:39:86
   |
39 |             self.opcodes.push(Box::new(SwitchManualIntElse__Opcode::new(self.stream, self, _root)?));
   |                                                                                      ^^^^ expected enum `std::option::Option`, found struct `switch_manual_int_else::SwitchManualIntElse`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_int_else::SwitchManualIntElse`

error[E0308]: mismatched types
  --> src/switch_manual_int_else.rs:38:9
   |
35 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
38 | /         while !self.stream.isEof() {
39 | |             self.opcodes.push(Box::new(SwitchManualIntElse__Opcode::new(self.stream, self, _root)?));
40 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_manual_int_else::SwitchManualIntElse__Opcode`
  --> src/switch_manual_int_else.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `code`, `body`

error[E0609]: no field `stream` on type `&mut switch_manual_int_else::SwitchManualIntElse__Opcode`
  --> src/switch_manual_int_else.rs:73:26
   |
73 |         self.code = self.stream.read_u1()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_int_else::SwitchManualIntElse__Opcode`
  --> src/switch_manual_int_else.rs:76:84
   |
76 |                 self.body = Box::new(SwitchManualIntElse__Opcode__Intval::new(self.stream, self, _root)?);
   |                                                                                    ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_int_size_else.rs:38:23
   |
38 |         self.chunks = [];
   |                       ^^
   |                       |
   |                       expected struct `std::vec::Vec`, found array of 0 elements
   |                       help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse`
  --> src/switch_manual_int_size_else.rs:39:21
   |
39 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse`
  --> src/switch_manual_int_size_else.rs:40:80
   |
40 |             self.chunks.push(Box::new(SwitchManualIntSizeElse__Chunk::new(self.stream, self, _root)?));
   |                                                                                ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_int_else.rs:76:92
   |
76 |                 self.body = Box::new(SwitchManualIntElse__Opcode__Intval::new(self.stream, self, _root)?);
   |                                                                                            ^^^^ expected enum `std::option::Option`, found struct `switch_manual_int_else::SwitchManualIntElse__Opcode`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_int_else::SwitchManualIntElse__Opcode`

error[E0308]: mismatched types
  --> src/switch_manual_int_size_else.rs:40:88
   |
40 |             self.chunks.push(Box::new(SwitchManualIntSizeElse__Chunk::new(self.stream, self, _root)?));
   |                                                                                        ^^^^ expected enum `std::option::Option`, found struct `switch_manual_int_size_else::SwitchManualIntSizeElse`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse`

error[E0308]: mismatched types
  --> src/switch_manual_int_size_else.rs:39:9
   |
36 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
39 | /         while !self.stream.isEof() {
40 | |             self.chunks.push(Box::new(SwitchManualIntSizeElse__Chunk::new(self.stream, self, _root)?));
41 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:62:11
   |
62 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `code`, `size`, `body`

error[E0609]: no field `stream` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:75:26
   |
75 |         self.code = self.stream.read_u1()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:76:26
   |
76 |         self.size = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0609]: no field `_raw_body` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:79:22
   |
79 |                 self._raw_body = self.stream.read_bytes(self.size)?;
   |                      ^^^^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:79:39
   |
79 |                 self._raw_body = self.stream.read_bytes(self.size)?;
   |                                       ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_int_else.rs:76:29
   |
76 |                 self.body = Box::new(SwitchManualIntElse__Opcode__Intval::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_int_else::SwitchManualIntElse__Opcode__Intval>`
help: try using a variant of the expected type
   |
76 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualIntElse__Opcode__Intval>::new(self.stream,
77 |                                                                                          self,
78 |                                                                                          _root))
79 |                {
80 |                ::std::result::Result::Err(err) =>
81 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_int_else.rs:75:19
   |
75 |               73 => {
   |  ___________________^
76 | |                 self.body = Box::new(SwitchManualIntElse__Opcode__Intval::new(self.stream, self, _root)?);
77 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `_raw_body` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:80:47
   |
80 |                 let mut io = Cursor::new(self._raw_body);
   |                                               ^^^^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_int_else::SwitchManualIntElse__Opcode`
  --> src/switch_manual_int_else.rs:79:84
   |
79 |                 self.body = Box::new(SwitchManualIntElse__Opcode__Strval::new(self.stream, self, _root)?);
   |                                                                                    ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:81:90
   |
81 |                 self.body = Box::new(SwitchManualIntSizeElse__Chunk__ChunkMeta::new(self.stream, self, _root)?);
   |                                                                                          ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_int_else.rs:79:92
   |
79 |                 self.body = Box::new(SwitchManualIntElse__Opcode__Strval::new(self.stream, self, _root)?);
   |                                                                                            ^^^^ expected enum `std::option::Option`, found struct `switch_manual_int_else::SwitchManualIntElse__Opcode`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_int_else::SwitchManualIntElse__Opcode`

error[E0308]: mismatched types
  --> src/switch_manual_int_size_else.rs:81:98
   |
81 |                 self.body = Box::new(SwitchManualIntSizeElse__Chunk__ChunkMeta::new(self.stream, self, _root)?);
   |                                                                                                  ^^^^ expected enum `std::option::Option`, found struct `switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`

error[E0308]: mismatched types
  --> src/switch_manual_int_else.rs:79:29
   |
79 |                 self.body = Box::new(SwitchManualIntElse__Opcode__Strval::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_int_else::SwitchManualIntElse__Opcode__Strval>`
help: try using a variant of the expected type
   |
79 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualIntElse__Opcode__Strval>::new(self.stream,
80 |                                                                                          self,
81 |                                                                                          _root))
82 |                {
83 |                ::std::result::Result::Err(err) =>
84 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_int_else.rs:78:19
   |
78 |               83 => {
   |  ___________________^
79 | |                 self.body = Box::new(SwitchManualIntElse__Opcode__Strval::new(self.stream, self, _root)?);
80 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/switch_manual_int_size_else.rs:81:29
   |
81 |                 self.body = Box::new(SwitchManualIntSizeElse__Chunk__ChunkMeta::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk__ChunkMeta>`
help: try using a variant of the expected type
   |
81 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualIntSizeElse__Chunk__ChunkMeta>::new(self.stream,
82 |                                                                                                self,
83 |                                                                                                _root))
84 |                {
85 |                ::std::result::Result::Err(err) =>
86 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_int_size_else.rs:78:19
   |
78 |               17 => {
   |  ___________________^
79 | |                 self._raw_body = self.stream.read_bytes(self.size)?;
80 | |                 let mut io = Cursor::new(self._raw_body);
81 | |                 self.body = Box::new(SwitchManualIntSizeElse__Chunk__ChunkMeta::new(self.stream, self, _root)?);
82 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut switch_manual_int_else::SwitchManualIntElse__Opcode`
  --> src/switch_manual_int_else.rs:82:85
   |
82 |                 self.body = Box::new(SwitchManualIntElse__Opcode__Noneval::new(self.stream, self, _root)?);
   |                                                                                     ^^^^^^

error[E0609]: no field `_raw_body` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:84:22
   |
84 |                 self._raw_body = self.stream.read_bytes(self.size)?;
   |                      ^^^^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:84:39
   |
84 |                 self._raw_body = self.stream.read_bytes(self.size)?;
   |                                       ^^^^^^

error[E0609]: no field `_raw_body` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:85:47
   |
85 |                 let mut io = Cursor::new(self._raw_body);
   |                                               ^^^^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:86:89
   |
86 |                 self.body = Box::new(SwitchManualIntSizeElse__Chunk__ChunkDir::new(self.stream, self, _root)?);
   |                                                                                         ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_int_size_else.rs:86:97
   |
86 |                 self.body = Box::new(SwitchManualIntSizeElse__Chunk__ChunkDir::new(self.stream, self, _root)?);
   |                                                                                                 ^^^^ expected enum `std::option::Option`, found struct `switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
error[E0308]: mismatched types
  --> src/switch_manual_int_else.rs:82:93
   |
82 |                 self.body = Box::new(SwitchManualIntElse__Opcode__Noneval::new(self.stream, self, _root)?);
   |                                                                                             ^^^^ expected enum `std::option::Option`, found struct `switch_manual_int_else::SwitchManualIntElse__Opcode`
   |
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`

   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_int_else::SwitchManualIntElse__Opcode`

error[E0308]: mismatched types
  --> src/switch_manual_int_else.rs:82:29
   |
82 |                 self.body = Box::new(SwitchManualIntElse__Opcode__Noneval::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_int_else::SwitchManualIntElse__Opcode__Noneval>`
help: try using a variant of the expected type
   |
82 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualIntElse__Opcode__Noneval>::new(self.stream,
83 |                                                                                           self,
84 |                                                                                           _root))
85 |                {
86 |                ::std::result::Result::Err(err) =>
87 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_int_else.rs:81:18
   |
81 |               _ => {
   |  __________________^
82 | |                 self.body = Box::new(SwitchManualIntElse__Opcode__Noneval::new(self.stream, self, _root)?);
83 | |             }
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/switch_manual_int_size_else.rs:86:29
   |
86 |                 self.body = Box::new(SwitchManualIntSizeElse__Chunk__ChunkDir::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk__ChunkDir>`
help: try using a variant of the expected type
   |
86 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualIntSizeElse__Chunk__ChunkDir>::new(self.stream,
87 |                                                                                               self,
88 |                                                                                               _root))
89 |                {
90 |                ::std::result::Result::Err(err) =>
91 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_int_size_else.rs:83:19
   |
83 |               34 => {
   |  ___________________^
84 | |                 self._raw_body = self.stream.read_bytes(self.size)?;
85 | |                 let mut io = Cursor::new(self._raw_body);
86 | |                 self.body = Box::new(SwitchManualIntSizeElse__Chunk__ChunkDir::new(self.stream, self, _root)?);
87 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `_raw_body` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:89:22
   |
89 |                 self._raw_body = self.stream.read_bytes(self.size)?;
   |                      ^^^^^^^^^

error[E0609]: no field `stream` on type `switch_manual_int_else::SwitchManualIntElse__Opcode__Intval`
   --> src/switch_manual_int_else.rs:103:11
    |
103 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:89:39
   |
89 |                 self._raw_body = self.stream.read_bytes(self.size)?;
   |                                       ^^^^^^

error[E0609]: no field `_raw_body` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:90:47
   |
90 |                 let mut io = Cursor::new(self._raw_body);
   |                                               ^^^^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:91:86
   |
91 |                 self.body = Box::new(SwitchManualIntSizeElse__Chunk__Dummy::new(self.stream, self, _root)?);
   |                                                                                      ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_int_else::SwitchManualIntElse__Opcode__Intval`
   --> src/switch_manual_int_else.rs:116:27
    |
116 |         self.value = self.stream.read_u1()?;
    |                           ^^^^^^

error[E0308]: mismatched types
   --> src/switch_manual_int_else.rs:115:27
    |
115 |           where Self: Sized {
    |  ___________________________^
116 | |         self.value = self.stream.read_u1()?;
117 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_manual_int_else::SwitchManualIntElse__Opcode__Strval`
   --> src/switch_manual_int_else.rs:135:11
    |
135 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut switch_manual_int_else::SwitchManualIntElse__Opcode__Strval`
   --> src/switch_manual_int_else.rs:148:51
    |
148 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_int_size_else.rs:91:94
   |
91 |                 self.body = Box::new(SwitchManualIntSizeElse__Chunk__Dummy::new(self.stream, self, _root)?);
   |                                                                                              ^^^^ expected enum `std::option::Option`, found struct `switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`

error[E0308]: mismatched types
   --> src/switch_manual_int_else.rs:148:22
    |
148 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                      |
    |                      expected struct `std::string::String`, found enum `std::borrow::Cow`
    |                      help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?).to_string()`
    |
    = note: expected type `std::string::String`
               found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
   --> src/switch_manual_int_else.rs:147:27
    |
147 |           where Self: Sized {
    |  ___________________________^
148 | |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
149 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_manual_int_else::SwitchManualIntElse__Opcode__Noneval`
   --> src/switch_manual_int_else.rs:167:11
    |
167 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `filler`

error[E0609]: no field `stream` on type `&mut switch_manual_int_else::SwitchManualIntElse__Opcode__Noneval`
   --> src/switch_manual_int_else.rs:180:28
    |
180 |         self.filler = self.stream.read_u4le()?;
    |                            ^^^^^^

error[E0308]: mismatched types
   --> src/switch_manual_int_else.rs:179:27
    |
179 |           where Self: Sized {
    |  ___________________________^
180 | |         self.filler = self.stream.read_u4le()?;
181 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_manual_int::SwitchManualInt`
  --> src/switch_manual_int.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `opcodes`

error[E0308]: mismatched types
  --> src/switch_manual_int_size_else.rs:91:29
   |
91 |                 self.body = Box::new(SwitchManualIntSizeElse__Chunk__Dummy::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk__Dummy>`
help: try using a variant of the expected type
   |
91 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualIntSizeElse__Chunk__Dummy>::new(self.stream,
92 |                                                                                            self,
93 |                                                                                            _root))
94 |                {
95 |                ::std::result::Result::Err(err) =>
96 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_int_size_else.rs:88:18
   |
88 |               _ => {
   |  __________________^
89 | |                 self._raw_body = self.stream.read_bytes(self.size)?;
90 | |                 let mut io = Cursor::new(self._raw_body);
91 | |                 self.body = Box::new(SwitchManualIntSizeElse__Chunk__Dummy::new(self.stream, self, _root)?);
92 | |             }
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk__ChunkMeta`
   --> src/switch_manual_int_size_else.rs:113:11
    |
113 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `title`, `author`

warning: unreachable expression
   --> src/switch_manual_int_size_else.rs:126:9
    |
126 |         self.title = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unreachable expression
   --> src/switch_manual_int_size_else.rs:127:9
    |
127 |         self.author = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk__ChunkDir`
   --> src/switch_manual_int_size_else.rs:146:11
    |
146 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `entries`

error[E0308]: mismatched types
  --> src/switch_manual_int.rs:37:24
   |
37 |         self.opcodes = [];
   |                        ^^
   |                        |
   |                        expected struct `std::vec::Vec`, found array of 0 elements
   |                        help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<switch_manual_int::SwitchManualInt__Opcode>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut switch_manual_int::SwitchManualInt`
  --> src/switch_manual_int.rs:38:21
   |
38 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_int::SwitchManualInt`
  --> src/switch_manual_int.rs:39:74
   |
39 |             self.opcodes.push(Box::new(SwitchManualInt__Opcode::new(self.stream, self, _root)?));
   |                                                                          ^^^^^^

error[E0308]: mismatched types
   --> src/switch_manual_int_size_else.rs:159:24
    |
159 |         self.entries = [];
    |                        ^^
    |                        |
    |                        expected struct `std::vec::Vec`, found array of 0 elements
    |                        help: try using a conversion method: `[].to_vec()`
    |
    = note: expected type `std::vec::Vec<std::string::String>`
               found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk__ChunkDir`
   --> src/switch_manual_int_size_else.rs:160:21
    |
160 |         while !self.stream.isEof() {
    |                     ^^^^^^

warning: unreachable expression
   --> src/switch_manual_int_size_else.rs:161:13
    |
161 |             self.entries.push(panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8"));
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> src/switch_manual_int_size_else.rs:160:9
    |
157 |                                -> Result<()>
    |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
160 | /         while !self.stream.isEof() {
161 | |             self.entries.push(panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8"));
162 | |         }
    | |_________^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk__Dummy`
   --> src/switch_manual_int_size_else.rs:181:11
    |
181 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `rest`

error[E0609]: no field `stream` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk__Dummy`
   --> src/switch_manual_int_size_else.rs:194:26
    |
194 |         self.rest = self.stream.read_bytes_full()?;
    |                          ^^^^^^

error[E0308]: mismatched types
   --> src/switch_manual_int_size_else.rs:193:27
    |
193 |           where Self: Sized {
    |  ___________________________^
194 | |         self.rest = self.stream.read_bytes_full()?;
195 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_manual_str_else::SwitchManualStrElse`
  --> src/switch_manual_str_else.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `opcodes`

error[E0308]: mismatched types
  --> src/switch_manual_int.rs:39:82
   |
39 |             self.opcodes.push(Box::new(SwitchManualInt__Opcode::new(self.stream, self, _root)?));
   |                                                                                  ^^^^ expected enum `std::option::Option`, found struct `switch_manual_int::SwitchManualInt`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_int::SwitchManualInt`

error[E0308]: mismatched types
  --> src/switch_manual_int.rs:38:9
   |
35 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
38 | /         while !self.stream.isEof() {
39 | |             self.opcodes.push(Box::new(SwitchManualInt__Opcode::new(self.stream, self, _root)?));
40 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_manual_int::SwitchManualInt__Opcode`
  --> src/switch_manual_int.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `code`, `body`

error[E0609]: no field `stream` on type `&mut switch_manual_int::SwitchManualInt__Opcode`
  --> src/switch_manual_int.rs:73:26
   |
73 |         self.code = self.stream.read_u1()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_int::SwitchManualInt__Opcode`
  --> src/switch_manual_int.rs:76:80
   |
76 |                 self.body = Box::new(SwitchManualInt__Opcode__Intval::new(self.stream, self, _root)?);
   |                                                                                ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:37:24
   |
37 |         self.opcodes = [];
   |                        ^^
   |                        |
   |                        expected struct `std::vec::Vec`, found array of 0 elements
   |                        help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<switch_manual_str_else::SwitchManualStrElse__Opcode>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut switch_manual_str_else::SwitchManualStrElse`
  --> src/switch_manual_str_else.rs:38:21
   |
38 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_str_else::SwitchManualStrElse`
  --> src/switch_manual_str_else.rs:39:78
   |
39 |             self.opcodes.push(Box::new(SwitchManualStrElse__Opcode::new(self.stream, self, _root)?));
   |                                                                              ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_int.rs:76:88
   |
76 |                 self.body = Box::new(SwitchManualInt__Opcode__Intval::new(self.stream, self, _root)?);
   |                                                                                        ^^^^ expected enum `std::option::Option`, found struct `switch_manual_int::SwitchManualInt__Opcode`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_int::SwitchManualInt__Opcode`

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:39:86
   |
39 |             self.opcodes.push(Box::new(SwitchManualStrElse__Opcode::new(self.stream, self, _root)?));
   |                                                                                      ^^^^ expected enum `std::option::Option`, found struct `switch_manual_str_else::SwitchManualStrElse`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_str_else::SwitchManualStrElse`

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:38:9
   |
35 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
38 | /         while !self.stream.isEof() {
39 | |             self.opcodes.push(Box::new(SwitchManualStrElse__Opcode::new(self.stream, self, _root)?));
40 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_manual_str_else::SwitchManualStrElse__Opcode`
  --> src/switch_manual_str_else.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `code`, `body`

error[E0609]: no field `stream` on type `&mut switch_manual_str_else::SwitchManualStrElse__Opcode`
  --> src/switch_manual_str_else.rs:73:50
   |
73 |         self.code = String::from_utf8_lossy(self.stream.read_bytes(1)?);
   |                                                  ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_int.rs:76:29
   |
76 |                 self.body = Box::new(SwitchManualInt__Opcode__Intval::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_int::SwitchManualInt__Opcode__Intval>`
help: try using a variant of the expected type
   |
76 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualInt__Opcode__Intval>::new(self.stream,
77 |                                                                                      self,
78 |                                                                                      _root))
79 |                {
80 |                ::std::result::Result::Err(err) =>
81 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_int.rs:75:19
   |
75 |               73 => {
   |  ___________________^
76 | |                 self.body = Box::new(SwitchManualInt__Opcode__Intval::new(self.stream, self, _root)?);
77 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut switch_manual_int::SwitchManualInt__Opcode`
  --> src/switch_manual_int.rs:79:80
   |
79 |                 self.body = Box::new(SwitchManualInt__Opcode__Strval::new(self.stream, self, _root)?);
   |                                                                                ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:73:21
   |
73 |         self.code = String::from_utf8_lossy(self.stream.read_bytes(1)?);
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                     |
   |                     expected struct `std::string::String`, found enum `std::borrow::Cow`
   |                     help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes(1)?).to_string()`
   |
   = note: expected type `std::string::String`
              found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:75:13
   |
75 |             "I" => {
   |             ^^^ expected struct `std::string::String`, found reference
   |
   = note: expected type `std::string::String`
              found type `&'static str`

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:78:13
   |
78 |             "S" => {
   |             ^^^ expected struct `std::string::String`, found reference
   |
   = note: expected type `std::string::String`
              found type `&'static str`

error[E0609]: no field `stream` on type `&mut switch_manual_str_else::SwitchManualStrElse__Opcode`
  --> src/switch_manual_str_else.rs:76:84
   |
76 |                 self.body = Box::new(SwitchManualStrElse__Opcode__Intval::new(self.stream, self, _root)?);
   |                                                                                    ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_int.rs:79:88
   |
79 |                 self.body = Box::new(SwitchManualInt__Opcode__Strval::new(self.stream, self, _root)?);
   |                                                                                        ^^^^ expected enum `std::option::Option`, found struct `switch_manual_int::SwitchManualInt__Opcode`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_int::SwitchManualInt__Opcode`

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:76:92
   |
76 |                 self.body = Box::new(SwitchManualStrElse__Opcode__Intval::new(self.stream, self, _root)?);
   |                                                                                            ^^^^ expected enum `std::option::Option`, found struct `switch_manual_str_else::SwitchManualStrElse__Opcode`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_str_else::SwitchManualStrElse__Opcode`

error[E0308]: mismatched types
  --> src/switch_manual_int.rs:79:29
   |
79 |                 self.body = Box::new(SwitchManualInt__Opcode__Strval::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_int::SwitchManualInt__Opcode__Strval>`
help: try using a variant of the expected type
   |
79 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualInt__Opcode__Strval>::new(self.stream,
80 |                                                                                      self,
81 |                                                                                      _root))
82 |                {
83 |                ::std::result::Result::Err(err) =>
84 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_int.rs:78:19
   |
78 |               83 => {
   |  ___________________^
79 | |                 self.body = Box::new(SwitchManualInt__Opcode__Strval::new(self.stream, self, _root)?);
80 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_manual_int::SwitchManualInt__Opcode__Intval`
   --> src/switch_manual_int.rs:100:11
    |
100 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut switch_manual_int::SwitchManualInt__Opcode__Intval`
   --> src/switch_manual_int.rs:113:27
    |
113 |         self.value = self.stream.read_u1()?;
    |                           ^^^^^^

error[E0308]: mismatched types
   --> src/switch_manual_int.rs:112:27
    |
112 |           where Self: Sized {
    |  ___________________________^
113 | |         self.value = self.stream.read_u1()?;
114 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_manual_int::SwitchManualInt__Opcode__Strval`
   --> src/switch_manual_int.rs:132:11
    |
132 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut switch_manual_int::SwitchManualInt__Opcode__Strval`
   --> src/switch_manual_int.rs:145:51
    |
145 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:76:29
   |
76 |                 self.body = Box::new(SwitchManualStrElse__Opcode__Intval::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_str_else::SwitchManualStrElse__Opcode__Intval>`
help: try using a variant of the expected type
   |
76 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualStrElse__Opcode__Intval>::new(self.stream,
77 |                                                                                          self,
78 |                                                                                          _root))
79 |                {
80 |                ::std::result::Result::Err(err) =>
81 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:75:20
   |
75 |               "I" => {
   |  ____________________^
76 | |                 self.body = Box::new(SwitchManualStrElse__Opcode__Intval::new(self.stream, self, _root)?);
77 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut switch_manual_str_else::SwitchManualStrElse__Opcode`
  --> src/switch_manual_str_else.rs:79:84
   |
79 |                 self.body = Box::new(SwitchManualStrElse__Opcode__Strval::new(self.stream, self, _root)?);
   |                                                                                    ^^^^^^

error[E0308]: mismatched types
   --> src/switch_manual_int.rs:145:22
    |
145 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                      |
    |                      expected struct `std::string::String`, found enum `std::borrow::Cow`
    |                      help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?).to_string()`
    |
    = note: expected type `std::string::String`
               found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
   --> src/switch_manual_int.rs:144:27
    |
144 |           where Self: Sized {
    |  ___________________________^
145 | |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
146 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_manual_int_size_else::SwitchManualIntSizeElse`
  --> src/switch_manual_int_size_else.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `chunks`

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:79:92
   |
79 |                 self.body = Box::new(SwitchManualStrElse__Opcode__Strval::new(self.stream, self, _root)?);
   |                                                                                            ^^^^ expected enum `std::option::Option`, found struct `switch_manual_str_else::SwitchManualStrElse__Opcode`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_str_else::SwitchManualStrElse__Opcode`

error[E0308]: mismatched types
  --> src/switch_manual_int_size_else.rs:38:23
   |
38 |         self.chunks = [];
   |                       ^^
   |                       |
   |                       expected struct `std::vec::Vec`, found array of 0 elements
   |                       help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse`
  --> src/switch_manual_int_size_else.rs:39:21
   |
39 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse`
  --> src/switch_manual_int_size_else.rs:40:80
   |
40 |             self.chunks.push(Box::new(SwitchManualIntSizeElse__Chunk::new(self.stream, self, _root)?));
   |                                                                                ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:79:29
   |
79 |                 self.body = Box::new(SwitchManualStrElse__Opcode__Strval::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_str_else::SwitchManualStrElse__Opcode__Strval>`
help: try using a variant of the expected type
   |
79 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualStrElse__Opcode__Strval>::new(self.stream,
80 |                                                                                          self,
81 |                                                                                          _root))
82 |                {
83 |                ::std::result::Result::Err(err) =>
84 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:78:20
   |
78 |               "S" => {
   |  ____________________^
79 | |                 self.body = Box::new(SwitchManualStrElse__Opcode__Strval::new(self.stream, self, _root)?);
80 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut switch_manual_str_else::SwitchManualStrElse__Opcode`
  --> src/switch_manual_str_else.rs:82:85
   |
82 |                 self.body = Box::new(SwitchManualStrElse__Opcode__Noneval::new(self.stream, self, _root)?);
   |                                                                                     ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_int_size_else.rs:40:88
   |
40 |             self.chunks.push(Box::new(SwitchManualIntSizeElse__Chunk::new(self.stream, self, _root)?));
   |                                                                                        ^^^^ expected enum `std::option::Option`, found struct `switch_manual_int_size_else::SwitchManualIntSizeElse`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse`

error[E0308]: mismatched types
  --> src/switch_manual_int_size_else.rs:39:9
   |
36 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
39 | /         while !self.stream.isEof() {
40 | |             self.chunks.push(Box::new(SwitchManualIntSizeElse__Chunk::new(self.stream, self, _root)?));
41 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:62:11
   |
62 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `code`, `size`, `body`

error[E0609]: no field `stream` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:75:26
   |
75 |         self.code = self.stream.read_u1()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:76:26
   |
76 |         self.size = self.stream.read_u4le()?;
   |                          ^^^^^^

error[E0609]: no field `_raw_body` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:79:22
   |
79 |                 self._raw_body = self.stream.read_bytes(self.size)?;
   |                      ^^^^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:79:39
   |
79 |                 self._raw_body = self.stream.read_bytes(self.size)?;
   |                                       ^^^^^^

error[E0609]: no field `_raw_body` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:80:47
   |
80 |                 let mut io = Cursor::new(self._raw_body);
   |                                               ^^^^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:81:90
   |
81 |                 self.body = Box::new(SwitchManualIntSizeElse__Chunk__ChunkMeta::new(self.stream, self, _root)?);
   |                                                                                          ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:82:93
   |
82 |                 self.body = Box::new(SwitchManualStrElse__Opcode__Noneval::new(self.stream, self, _root)?);
   |                                                                                             ^^^^ expected enum `std::option::Option`, found struct `switch_manual_str_else::SwitchManualStrElse__Opcode`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_str_else::SwitchManualStrElse__Opcode`

error[E0308]: mismatched types
  --> src/switch_manual_int_size_else.rs:81:98
   |
81 |                 self.body = Box::new(SwitchManualIntSizeElse__Chunk__ChunkMeta::new(self.stream, self, _root)?);
   |                                                                                                  ^^^^ expected enum `std::option::Option`, found struct `switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:82:29
   |
82 |                 self.body = Box::new(SwitchManualStrElse__Opcode__Noneval::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_str_else::SwitchManualStrElse__Opcode__Noneval>`
help: try using a variant of the expected type
   |
82 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualStrElse__Opcode__Noneval>::new(self.stream,
83 |                                                                                           self,
84 |                                                                                           _root))
85 |                {
86 |                ::std::result::Result::Err(err) =>
87 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:81:18
   |
81 |               _ => {
   |  __________________^
82 | |                 self.body = Box::new(SwitchManualStrElse__Opcode__Noneval::new(self.stream, self, _root)?);
83 | |             }
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_manual_str_else::SwitchManualStrElse__Opcode__Intval`
   --> src/switch_manual_str_else.rs:103:11
    |
103 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut switch_manual_str_else::SwitchManualStrElse__Opcode__Intval`
   --> src/switch_manual_str_else.rs:116:27
    |
116 |         self.value = self.stream.read_u1()?;
    |                           ^^^^^^

error[E0308]: mismatched types
   --> src/switch_manual_str_else.rs:115:27
    |
115 |           where Self: Sized {
    |  ___________________________^
116 | |         self.value = self.stream.read_u1()?;
117 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_manual_str_else::SwitchManualStrElse__Opcode__Strval`
   --> src/switch_manual_str_else.rs:135:11
    |
135 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut switch_manual_str_else::SwitchManualStrElse__Opcode__Strval`
   --> src/switch_manual_str_else.rs:148:51
    |
148 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_int_size_else.rs:81:29
   |
81 |                 self.body = Box::new(SwitchManualIntSizeElse__Chunk__ChunkMeta::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk__ChunkMeta>`
help: try using a variant of the expected type
   |
81 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualIntSizeElse__Chunk__ChunkMeta>::new(self.stream,
82 |                                                                                                self,
83 |                                                                                                _root))
84 |                {
85 |                ::std::result::Result::Err(err) =>
86 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_int_size_else.rs:78:19
   |
78 |               17 => {
   |  ___________________^
79 | |                 self._raw_body = self.stream.read_bytes(self.size)?;
80 | |                 let mut io = Cursor::new(self._raw_body);
81 | |                 self.body = Box::new(SwitchManualIntSizeElse__Chunk__ChunkMeta::new(self.stream, self, _root)?);
82 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `_raw_body` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:84:22
   |
84 |                 self._raw_body = self.stream.read_bytes(self.size)?;
   |                      ^^^^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:84:39
   |
84 |                 self._raw_body = self.stream.read_bytes(self.size)?;
   |                                       ^^^^^^

error[E0609]: no field `_raw_body` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:85:47
   |
85 |                 let mut io = Cursor::new(self._raw_body);
   |                                               ^^^^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:86:89
   |
86 |                 self.body = Box::new(SwitchManualIntSizeElse__Chunk__ChunkDir::new(self.stream, self, _root)?);
   |                                                                                         ^^^^^^

error[E0308]: mismatched types
   --> src/switch_manual_str_else.rs:148:22
    |
148 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                      |
    |                      expected struct `std::string::String`, found enum `std::borrow::Cow`
    |                      help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?).to_string()`
    |
    = note: expected type `std::string::String`
               found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
   --> src/switch_manual_str_else.rs:147:27
    |
147 |           where Self: Sized {
    |  ___________________________^
148 | |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
149 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_manual_str_else::SwitchManualStrElse__Opcode__Noneval`
   --> src/switch_manual_str_else.rs:167:11
    |
167 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `filler`

error[E0609]: no field `stream` on type `&mut switch_manual_str_else::SwitchManualStrElse__Opcode__Noneval`
   --> src/switch_manual_str_else.rs:180:28
    |
180 |         self.filler = self.stream.read_u4le()?;
    |                            ^^^^^^

error[E0308]: mismatched types
   --> src/switch_manual_str_else.rs:179:27
    |
179 |           where Self: Sized {
    |  ___________________________^
180 | |         self.filler = self.stream.read_u4le()?;
181 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_manual_str::SwitchManualStr`
  --> src/switch_manual_str.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `opcodes`

error[E0308]: mismatched types
  --> src/switch_manual_int_size_else.rs:86:97
   |
86 |                 self.body = Box::new(SwitchManualIntSizeElse__Chunk__ChunkDir::new(self.stream, self, _root)?);
   |                                                                                                 ^^^^ expected enum `std::option::Option`, found struct `switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`

error[E0308]: mismatched types
  --> src/switch_manual_str.rs:37:24
   |
37 |         self.opcodes = [];
   |                        ^^
   |                        |
   |                        expected struct `std::vec::Vec`, found array of 0 elements
   |                        help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<switch_manual_str::SwitchManualStr__Opcode>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut switch_manual_str::SwitchManualStr`
  --> src/switch_manual_str.rs:38:21
   |
38 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_str::SwitchManualStr`
  --> src/switch_manual_str.rs:39:74
   |
39 |             self.opcodes.push(Box::new(SwitchManualStr__Opcode::new(self.stream, self, _root)?));
   |                                                                          ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_int_size_else.rs:86:29
   |
86 |                 self.body = Box::new(SwitchManualIntSizeElse__Chunk__ChunkDir::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk__ChunkDir>`
help: try using a variant of the expected type
   |
86 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualIntSizeElse__Chunk__ChunkDir>::new(self.stream,
87 |                                                                                               self,
88 |                                                                                               _root))
89 |                {
90 |                ::std::result::Result::Err(err) =>
91 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_int_size_else.rs:83:19
   |
83 |               34 => {
   |  ___________________^
84 | |                 self._raw_body = self.stream.read_bytes(self.size)?;
85 | |                 let mut io = Cursor::new(self._raw_body);
86 | |                 self.body = Box::new(SwitchManualIntSizeElse__Chunk__ChunkDir::new(self.stream, self, _root)?);
87 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `_raw_body` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:89:22
   |
89 |                 self._raw_body = self.stream.read_bytes(self.size)?;
   |                      ^^^^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:89:39
   |
89 |                 self._raw_body = self.stream.read_bytes(self.size)?;
   |                                       ^^^^^^

error[E0609]: no field `_raw_body` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:90:47
   |
90 |                 let mut io = Cursor::new(self._raw_body);
   |                                               ^^^^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
  --> src/switch_manual_int_size_else.rs:91:86
   |
91 |                 self.body = Box::new(SwitchManualIntSizeElse__Chunk__Dummy::new(self.stream, self, _root)?);
   |                                                                                      ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_str.rs:39:82
   |
39 |             self.opcodes.push(Box::new(SwitchManualStr__Opcode::new(self.stream, self, _root)?));
   |                                                                                  ^^^^ expected enum `std::option::Option`, found struct `switch_manual_str::SwitchManualStr`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_str::SwitchManualStr`

error[E0308]: mismatched types
  --> src/switch_manual_str.rs:38:9
   |
35 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
38 | /         while !self.stream.isEof() {
39 | |             self.opcodes.push(Box::new(SwitchManualStr__Opcode::new(self.stream, self, _root)?));
40 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_manual_str::SwitchManualStr__Opcode`
  --> src/switch_manual_str.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `code`, `body`

error[E0609]: no field `stream` on type `&mut switch_manual_str::SwitchManualStr__Opcode`
  --> src/switch_manual_str.rs:73:50
   |
73 |         self.code = String::from_utf8_lossy(self.stream.read_bytes(1)?);
   |                                                  ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_int_size_else.rs:91:94
   |
91 |                 self.body = Box::new(SwitchManualIntSizeElse__Chunk__Dummy::new(self.stream, self, _root)?);
   |                                                                                              ^^^^ expected enum `std::option::Option`, found struct `switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk`

error[E0308]: mismatched types
  --> src/switch_manual_str.rs:73:21
   |
73 |         self.code = String::from_utf8_lossy(self.stream.read_bytes(1)?);
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                     |
   |                     expected struct `std::string::String`, found enum `std::borrow::Cow`
   |                     help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes(1)?).to_string()`
   |
   = note: expected type `std::string::String`
              found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
  --> src/switch_manual_str.rs:75:13
   |
75 |             "I" => {
   |             ^^^ expected struct `std::string::String`, found reference
   |
   = note: expected type `std::string::String`
              found type `&'static str`

error[E0308]: mismatched types
  --> src/switch_manual_str.rs:78:13
   |
78 |             "S" => {
   |             ^^^ expected struct `std::string::String`, found reference
   |
   = note: expected type `std::string::String`
              found type `&'static str`

error[E0609]: no field `stream` on type `&mut switch_manual_str::SwitchManualStr__Opcode`
  --> src/switch_manual_str.rs:76:80
   |
76 |                 self.body = Box::new(SwitchManualStr__Opcode__Intval::new(self.stream, self, _root)?);
   |                                                                                ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_int_size_else.rs:91:29
   |
91 |                 self.body = Box::new(SwitchManualIntSizeElse__Chunk__Dummy::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk__Dummy>`
help: try using a variant of the expected type
   |
91 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualIntSizeElse__Chunk__Dummy>::new(self.stream,
92 |                                                                                            self,
93 |                                                                                            _root))
94 |                {
95 |                ::std::result::Result::Err(err) =>
96 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_int_size_else.rs:88:18
   |
88 |               _ => {
   |  __________________^
89 | |                 self._raw_body = self.stream.read_bytes(self.size)?;
90 | |                 let mut io = Cursor::new(self._raw_body);
91 | |                 self.body = Box::new(SwitchManualIntSizeElse__Chunk__Dummy::new(self.stream, self, _root)?);
92 | |             }
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk__ChunkMeta`
   --> src/switch_manual_int_size_else.rs:113:11
    |
113 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `title`, `author`

warning: unreachable expression
   --> src/switch_manual_int_size_else.rs:126:9
    |
126 |         self.title = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unreachable expression
   --> src/switch_manual_int_size_else.rs:127:9
    |
127 |         self.author = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0609]: no field `stream` on type `switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk__ChunkDir`
   --> src/switch_manual_int_size_else.rs:146:11
    |
146 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `entries`

error[E0308]: mismatched types
  --> src/switch_manual_str.rs:76:88
   |
76 |                 self.body = Box::new(SwitchManualStr__Opcode__Intval::new(self.stream, self, _root)?);
   |                                                                                        ^^^^ expected enum `std::option::Option`, found struct `switch_manual_str::SwitchManualStr__Opcode`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_str::SwitchManualStr__Opcode`

error[E0308]: mismatched types
   --> src/switch_manual_int_size_else.rs:159:24
    |
159 |         self.entries = [];
    |                        ^^
    |                        |
    |                        expected struct `std::vec::Vec`, found array of 0 elements
    |                        help: try using a conversion method: `[].to_vec()`
    |
    = note: expected type `std::vec::Vec<std::string::String>`
               found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk__ChunkDir`
   --> src/switch_manual_int_size_else.rs:160:21
    |
160 |         while !self.stream.isEof() {
    |                     ^^^^^^

warning: unreachable expression
   --> src/switch_manual_int_size_else.rs:161:13
    |
161 |             self.entries.push(panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8"));
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
   --> src/switch_manual_int_size_else.rs:160:9
    |
157 |                                -> Result<()>
    |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
160 | /         while !self.stream.isEof() {
161 | |             self.entries.push(panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8"));
162 | |         }
    | |_________^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk__Dummy`
   --> src/switch_manual_int_size_else.rs:181:11
    |
181 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `rest`

error[E0609]: no field `stream` on type `&mut switch_manual_int_size_else::SwitchManualIntSizeElse__Chunk__Dummy`
   --> src/switch_manual_int_size_else.rs:194:26
    |
194 |         self.rest = self.stream.read_bytes_full()?;
    |                          ^^^^^^

error[E0308]: mismatched types
   --> src/switch_manual_int_size_else.rs:193:27
    |
193 |           where Self: Sized {
    |  ___________________________^
194 | |         self.rest = self.stream.read_bytes_full()?;
195 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_manual_str_else::SwitchManualStrElse`
  --> src/switch_manual_str_else.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `opcodes`

error[E0308]: mismatched types
  --> src/switch_manual_str.rs:76:29
   |
76 |                 self.body = Box::new(SwitchManualStr__Opcode__Intval::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_str::SwitchManualStr__Opcode__Intval>`
help: try using a variant of the expected type
   |
76 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualStr__Opcode__Intval>::new(self.stream,
77 |                                                                                      self,
78 |                                                                                      _root))
79 |                {
80 |                ::std::result::Result::Err(err) =>
81 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_str.rs:75:20
   |
75 |               "I" => {
   |  ____________________^
76 | |                 self.body = Box::new(SwitchManualStr__Opcode__Intval::new(self.stream, self, _root)?);
77 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut switch_manual_str::SwitchManualStr__Opcode`
  --> src/switch_manual_str.rs:79:80
   |
79 |                 self.body = Box::new(SwitchManualStr__Opcode__Strval::new(self.stream, self, _root)?);
   |                                                                                ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:37:24
   |
37 |         self.opcodes = [];
   |                        ^^
   |                        |
   |                        expected struct `std::vec::Vec`, found array of 0 elements
   |                        help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<switch_manual_str_else::SwitchManualStrElse__Opcode>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut switch_manual_str_else::SwitchManualStrElse`
  --> src/switch_manual_str_else.rs:38:21
   |
38 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_str_else::SwitchManualStrElse`
  --> src/switch_manual_str_else.rs:39:78
   |
39 |             self.opcodes.push(Box::new(SwitchManualStrElse__Opcode::new(self.stream, self, _root)?));
   |                                                                              ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_str.rs:79:88
   |
79 |                 self.body = Box::new(SwitchManualStr__Opcode__Strval::new(self.stream, self, _root)?);
   |                                                                                        ^^^^ expected enum `std::option::Option`, found struct `switch_manual_str::SwitchManualStr__Opcode`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_str::SwitchManualStr__Opcode`

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:39:86
   |
39 |             self.opcodes.push(Box::new(SwitchManualStrElse__Opcode::new(self.stream, self, _root)?));
   |                                                                                      ^^^^ expected enum `std::option::Option`, found struct `switch_manual_str_else::SwitchManualStrElse`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_str_else::SwitchManualStrElse`

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:38:9
   |
35 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
38 | /         while !self.stream.isEof() {
39 | |             self.opcodes.push(Box::new(SwitchManualStrElse__Opcode::new(self.stream, self, _root)?));
40 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_manual_str_else::SwitchManualStrElse__Opcode`
  --> src/switch_manual_str_else.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `code`, `body`

error[E0609]: no field `stream` on type `&mut switch_manual_str_else::SwitchManualStrElse__Opcode`
  --> src/switch_manual_str_else.rs:73:50
   |
73 |         self.code = String::from_utf8_lossy(self.stream.read_bytes(1)?);
   |                                                  ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_str.rs:79:29
   |
79 |                 self.body = Box::new(SwitchManualStr__Opcode__Strval::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_str::SwitchManualStr__Opcode__Strval>`
help: try using a variant of the expected type
   |
79 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualStr__Opcode__Strval>::new(self.stream,
80 |                                                                                      self,
81 |                                                                                      _root))
82 |                {
83 |                ::std::result::Result::Err(err) =>
84 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_str.rs:78:20
   |
78 |               "S" => {
   |  ____________________^
79 | |                 self.body = Box::new(SwitchManualStr__Opcode__Strval::new(self.stream, self, _root)?);
80 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_manual_str::SwitchManualStr__Opcode__Intval`
   --> src/switch_manual_str.rs:100:11
    |
100 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut switch_manual_str::SwitchManualStr__Opcode__Intval`
   --> src/switch_manual_str.rs:113:27
    |
113 |         self.value = self.stream.read_u1()?;
    |                           ^^^^^^

error[E0308]: mismatched types
   --> src/switch_manual_str.rs:112:27
    |
112 |           where Self: Sized {
    |  ___________________________^
113 | |         self.value = self.stream.read_u1()?;
114 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_manual_str::SwitchManualStr__Opcode__Strval`
   --> src/switch_manual_str.rs:132:11
    |
132 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut switch_manual_str::SwitchManualStr__Opcode__Strval`
   --> src/switch_manual_str.rs:145:51
    |
145 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:73:21
   |
73 |         self.code = String::from_utf8_lossy(self.stream.read_bytes(1)?);
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                     |
   |                     expected struct `std::string::String`, found enum `std::borrow::Cow`
   |                     help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes(1)?).to_string()`
   |
   = note: expected type `std::string::String`
              found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:75:13
   |
75 |             "I" => {
   |             ^^^ expected struct `std::string::String`, found reference
   |
   = note: expected type `std::string::String`
              found type `&'static str`

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:78:13
   |
78 |             "S" => {
   |             ^^^ expected struct `std::string::String`, found reference
   |
   = note: expected type `std::string::String`
              found type `&'static str`

error[E0609]: no field `stream` on type `&mut switch_manual_str_else::SwitchManualStrElse__Opcode`
  --> src/switch_manual_str_else.rs:76:84
   |
76 |                 self.body = Box::new(SwitchManualStrElse__Opcode__Intval::new(self.stream, self, _root)?);
   |                                                                                    ^^^^^^

error[E0308]: mismatched types
   --> src/switch_manual_str.rs:145:22
    |
145 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                      |
    |                      expected struct `std::string::String`, found enum `std::borrow::Cow`
    |                      help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?).to_string()`
    |
    = note: expected type `std::string::String`
               found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
   --> src/switch_manual_str.rs:144:27
    |
144 |           where Self: Sized {
    |  ___________________________^
145 | |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
146 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_multi_bool_ops::SwitchMultiBoolOps`
  --> src/switch_multi_bool_ops.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `opcodes`

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:76:92
   |
76 |                 self.body = Box::new(SwitchManualStrElse__Opcode__Intval::new(self.stream, self, _root)?);
   |                                                                                            ^^^^ expected enum `std::option::Option`, found struct `switch_manual_str_else::SwitchManualStrElse__Opcode`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_str_else::SwitchManualStrElse__Opcode`

error[E0308]: mismatched types
  --> src/switch_multi_bool_ops.rs:37:24
   |
37 |         self.opcodes = [];
   |                        ^^
   |                        |
   |                        expected struct `std::vec::Vec`, found array of 0 elements
   |                        help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<switch_multi_bool_ops::SwitchMultiBoolOps__Opcode>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut switch_multi_bool_ops::SwitchMultiBoolOps`
  --> src/switch_multi_bool_ops.rs:38:21
   |
38 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_multi_bool_ops::SwitchMultiBoolOps`
  --> src/switch_multi_bool_ops.rs:39:77
   |
39 |             self.opcodes.push(Box::new(SwitchMultiBoolOps__Opcode::new(self.stream, self, _root)?));
   |                                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:76:29
   |
76 |                 self.body = Box::new(SwitchManualStrElse__Opcode__Intval::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_str_else::SwitchManualStrElse__Opcode__Intval>`
help: try using a variant of the expected type
   |
76 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualStrElse__Opcode__Intval>::new(self.stream,
77 |                                                                                          self,
78 |                                                                                          _root))
79 |                {
80 |                ::std::result::Result::Err(err) =>
81 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:75:20
   |
75 |               "I" => {
   |  ____________________^
76 | |                 self.body = Box::new(SwitchManualStrElse__Opcode__Intval::new(self.stream, self, _root)?);
77 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut switch_manual_str_else::SwitchManualStrElse__Opcode`
  --> src/switch_manual_str_else.rs:79:84
   |
79 |                 self.body = Box::new(SwitchManualStrElse__Opcode__Strval::new(self.stream, self, _root)?);
   |                                                                                    ^^^^^^

error[E0308]: mismatched types
  --> src/switch_multi_bool_ops.rs:39:85
   |
39 |             self.opcodes.push(Box::new(SwitchMultiBoolOps__Opcode::new(self.stream, self, _root)?));
   |                                                                                     ^^^^ expected enum `std::option::Option`, found struct `switch_multi_bool_ops::SwitchMultiBoolOps`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_multi_bool_ops::SwitchMultiBoolOps`

error[E0308]: mismatched types
  --> src/switch_multi_bool_ops.rs:38:9
   |
35 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
38 | /         while !self.stream.isEof() {
39 | |             self.opcodes.push(Box::new(SwitchMultiBoolOps__Opcode::new(self.stream, self, _root)?));
40 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_multi_bool_ops::SwitchMultiBoolOps__Opcode`
  --> src/switch_multi_bool_ops.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `code`, `body`

error[E0609]: no field `stream` on type `&mut switch_multi_bool_ops::SwitchMultiBoolOps__Opcode`
  --> src/switch_multi_bool_ops.rs:73:26
   |
73 |         self.code = self.stream.read_u1()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_multi_bool_ops::SwitchMultiBoolOps__Opcode`
  --> src/switch_multi_bool_ops.rs:76:34
   |
76 |                 self.body = self.stream.read_u1()?;
   |                                  ^^^^^^

error[E0308]: mismatched types
  --> src/switch_multi_bool_ops.rs:75:18
   |
75 |               1 => {
   |  __________________^
76 | |                 self.body = self.stream.read_u1()?;
77 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut switch_multi_bool_ops::SwitchMultiBoolOps__Opcode`
  --> src/switch_multi_bool_ops.rs:79:34
   |
79 |                 self.body = self.stream.read_u2le()?;
   |                                  ^^^^^^

error[E0308]: mismatched types
  --> src/switch_multi_bool_ops.rs:78:18
   |
78 |               2 => {
   |  __________________^
79 | |                 self.body = self.stream.read_u2le()?;
80 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut switch_multi_bool_ops::SwitchMultiBoolOps__Opcode`
  --> src/switch_multi_bool_ops.rs:82:34
   |
82 |                 self.body = self.stream.read_u4le()?;
   |                                  ^^^^^^

error[E0308]: mismatched types
  --> src/switch_multi_bool_ops.rs:81:18
   |
81 |               4 => {
   |  __________________^
82 | |                 self.body = self.stream.read_u4le()?;
83 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut switch_multi_bool_ops::SwitchMultiBoolOps__Opcode`
  --> src/switch_multi_bool_ops.rs:85:34
   |
85 |                 self.body = self.stream.read_u8le()?;
   |                                  ^^^^^^

error[E0308]: mismatched types
  --> src/switch_multi_bool_ops.rs:84:18
   |
84 |               8 => {
   |  __________________^
85 | |                 self.body = self.stream.read_u8le()?;
86 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `term_bytes::TermBytes`
  --> src/term_bytes.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `s1`, `s2`, `s3`

error[E0609]: no field `stream` on type `&mut term_bytes::TermBytes`
  --> src/term_bytes.rs:39:24
   |
39 |         self.s1 = self.stream.read_bytes_term(124, false, true, true)?;
   |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut term_bytes::TermBytes`
  --> src/term_bytes.rs:40:24
   |
40 |         self.s2 = self.stream.read_bytes_term(124, false, false, true)?;
   |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut term_bytes::TermBytes`
  --> src/term_bytes.rs:41:24
   |
41 |         self.s3 = self.stream.read_bytes_term(64, true, true, true)?;
   |                        ^^^^^^

error[E0308]: mismatched types
  --> src/term_bytes.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.s1 = self.stream.read_bytes_term(124, false, true, true)?;
40 | |         self.s2 = self.stream.read_bytes_term(124, false, false, true)?;
41 | |         self.s3 = self.stream.read_bytes_term(64, true, true, true)?;
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `term_strz::TermStrz`
  --> src/term_strz.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `s1`, `s2`, `s3`

warning: unreachable expression
  --> src/term_strz.rs:39:9
   |
39 |         self.s1 = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unreachable expression
  --> src/term_strz.rs:40:9
   |
40 |         self.s2 = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unreachable expression
  --> src/term_strz.rs:41:9
   |
41 |         self.s3 = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0277]: the trait bound `ts_packet_header::TsPacketHeader__AdaptationFieldControlEnum: std::default::Default` is not satisfied
  --> src/ts_packet_header.rs:23:5
   |
23 |     pub adaptationFieldControl: Box<TsPacketHeader__AdaptationFieldControlEnum>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `ts_packet_header::TsPacketHeader__AdaptationFieldControlEnum`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<ts_packet_header::TsPacketHeader__AdaptationFieldControlEnum>`
   = note: required by `std::default::Default::default`

error[E0609]: no field `stream` on type `ts_packet_header::TsPacketHeader`
  --> src/ts_packet_header.rs:36:11
   |
36 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `syncByte`, `transportErrorIndicator`, `payloadUnitStartIndicator`, `transportPriority`, `pid` ... and 4 others

error[E0609]: no field `stream` on type `&mut ts_packet_header::TsPacketHeader`
  --> src/ts_packet_header.rs:49:30
   |
49 |         self.syncByte = self.stream.read_u1()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut ts_packet_header::TsPacketHeader`
  --> src/ts_packet_header.rs:50:45
   |
50 |         self.transportErrorIndicator = self.stream.read_bits_int(1)? != 0;
   |                                             ^^^^^^

error[E0609]: no field `stream` on type `&mut ts_packet_header::TsPacketHeader`
  --> src/ts_packet_header.rs:51:47
   |
51 |         self.payloadUnitStartIndicator = self.stream.read_bits_int(1)? != 0;
   |                                               ^^^^^^

error[E0609]: no field `stream` on type `&mut ts_packet_header::TsPacketHeader`
  --> src/ts_packet_header.rs:52:39
   |
52 |         self.transportPriority = self.stream.read_bits_int(1)? != 0;
   |                                       ^^^^^^

error[E0609]: no field `stream` on type `&mut ts_packet_header::TsPacketHeader`
  --> src/ts_packet_header.rs:53:25
   |
53 |         self.pid = self.stream.read_bits_int(13)?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut ts_packet_header::TsPacketHeader`
  --> src/ts_packet_header.rs:54:48
   |
54 |         self.transportScramblingControl = self.stream.read_bits_int(2)?;
   |                                                ^^^^^^

error[E0609]: no field `stream` on type `&mut ts_packet_header::TsPacketHeader`
  --> src/ts_packet_header.rs:55:44
   |
55 |         self.adaptationFieldControl = self.stream.read_bits_int(2)?;
   |                                            ^^^^^^

error[E0609]: no field `stream` on type `&mut ts_packet_header::TsPacketHeader`
  --> src/ts_packet_header.rs:56:39
   |
56 |         self.continuityCounter = self.stream.read_bits_int(4)?;
   |                                       ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:79:92
   |
79 |                 self.body = Box::new(SwitchManualStrElse__Opcode__Strval::new(self.stream, self, _root)?);
   |                                                                                            ^^^^ expected enum `std::option::Option`, found struct `switch_manual_str_else::SwitchManualStrElse__Opcode`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_str_else::SwitchManualStrElse__Opcode`

error[E0609]: no field `stream` on type `&mut ts_packet_header::TsPacketHeader`
  --> src/ts_packet_header.rs:57:14
   |
57 |         self.stream.alignToByte();
   |              ^^^^^^

error[E0609]: no field `stream` on type `&mut ts_packet_header::TsPacketHeader`
  --> src/ts_packet_header.rs:58:36
   |
58 |         self.tsPacketRemain = self.stream.read_bytes(184)?;
   |                                    ^^^^^^

error[E0308]: mismatched types
  --> src/ts_packet_header.rs:48:27
   |
48 |           where Self: Sized {
   |  ___________________________^
49 | |         self.syncByte = self.stream.read_u1()?;
50 | |         self.transportErrorIndicator = self.stream.read_bits_int(1)? != 0;
51 | |         self.payloadUnitStartIndicator = self.stream.read_bits_int(1)? != 0;
...  |
58 | |         self.tsPacketRemain = self.stream.read_bytes(184)?;
59 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `type_int_unary_op::TypeIntUnaryOp`
  --> src/type_int_unary_op.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `valueS2`, `valueS8`, `unaryS2`, `unaryS8`

error[E0609]: no field `stream` on type `&mut type_int_unary_op::TypeIntUnaryOp`
  --> src/type_int_unary_op.rs:40:29
   |
40 |         self.valueS2 = self.stream.read_s2le()?;
   |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut type_int_unary_op::TypeIntUnaryOp`
  --> src/type_int_unary_op.rs:41:29
   |
41 |         self.valueS8 = self.stream.read_s8le()?;
   |                             ^^^^^^

error[E0308]: mismatched types
  --> src/type_int_unary_op.rs:39:27
   |
39 |           where Self: Sized {
   |  ___________________________^
40 | |         self.valueS2 = self.stream.read_s2le()?;
41 | |         self.valueS8 = self.stream.read_s8le()?;
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `value_s2` on type `&mut type_int_unary_op::TypeIntUnaryOp`
  --> src/type_int_unary_op.rs:51:31
   |
51 |         self.unaryS2 = -(self.value_s2);
   |                               ^^^^^^^^

error[E0308]: mismatched types
  --> src/type_int_unary_op.rs:52:16
   |
52 |         return self.unaryS2;
   |                ^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0609]: no field `value_s8` on type `&mut type_int_unary_op::TypeIntUnaryOp`
  --> src/type_int_unary_op.rs:59:31
   |
59 |         self.unaryS8 = -(self.value_s8);
   |                               ^^^^^^^^

error[E0308]: mismatched types
  --> src/type_int_unary_op.rs:60:16
   |
60 |         return self.unaryS8;
   |                ^^^^^^^^^^^^ expected i64, found enum `std::option::Option`
   |
   = note: expected type `i64`
              found type `std::option::Option<i64>`

error[E0609]: no field `stream` on type `type_ternary::TypeTernary`
  --> src/type_ternary.rs:32:11
   |
32 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `difWoHack`, `difWithHack`, `_raw_difWoHack`, `_raw_difWithHack`, `_raw__raw_difWithHack` ... and 3 others

error[E0609]: no field `is_hack` on type `&mut type_ternary::TypeTernary`
  --> src/type_ternary.rs:45:19
   |
45 |         if !(self.is_hack) {
   |                   ^^^^^^^

error[E0609]: no field `stream` on type `&mut type_ternary::TypeTernary`
  --> src/type_ternary.rs:46:40
   |
46 |             self._raw_difWoHack = self.stream.read_bytes(1)?;
   |                                        ^^^^^^

error[E0609]: no field `stream` on type `&mut type_ternary::TypeTernary`
  --> src/type_ternary.rs:48:68
   |
48 |             self.difWoHack = Box::new(TypeTernary__Dummy::new(self.stream, self, _root)?);
   |                                                                    ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:79:29
   |
79 |                 self.body = Box::new(SwitchManualStrElse__Opcode__Strval::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_str_else::SwitchManualStrElse__Opcode__Strval>`
help: try using a variant of the expected type
   |
79 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualStrElse__Opcode__Strval>::new(self.stream,
80 |                                                                                          self,
81 |                                                                                          _root))
82 |                {
83 |                ::std::result::Result::Err(err) =>
84 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:78:20
   |
78 |               "S" => {
   |  ____________________^
79 | |                 self.body = Box::new(SwitchManualStrElse__Opcode__Strval::new(self.stream, self, _root)?);
80 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut switch_manual_str_else::SwitchManualStrElse__Opcode`
  --> src/switch_manual_str_else.rs:82:85
   |
82 |                 self.body = Box::new(SwitchManualStrElse__Opcode__Noneval::new(self.stream, self, _root)?);
   |                                                                                     ^^^^^^

error[E0308]: mismatched types
  --> src/type_ternary.rs:48:76
   |
48 |             self.difWoHack = Box::new(TypeTernary__Dummy::new(self.stream, self, _root)?);
   |                                                                            ^^^^ expected enum `std::option::Option`, found struct `type_ternary::TypeTernary`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut type_ternary::TypeTernary`

error[E0609]: no field `stream` on type `&mut type_ternary::TypeTernary`
  --> src/type_ternary.rs:50:43
   |
50 |         self._raw__raw_difWithHack = self.stream.read_bytes(1)?;
   |                                           ^^^^^^

error[E0599]: no function or associated item named `processXorOne` found for type `S` in the current scope
  --> src/type_ternary.rs:51:38
   |
51 |         self._raw_difWithHack = &mut S::processXorOne(self._raw__raw_difWithHack, 3);
   |                                      ^^^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_xor_one`?

error[E0609]: no field `stream` on type `&mut type_ternary::TypeTernary`
  --> src/type_ternary.rs:53:66
   |
53 |         self.difWithHack = Box::new(TypeTernary__Dummy::new(self.stream, self, _root)?);
   |                                                                  ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:82:93
   |
82 |                 self.body = Box::new(SwitchManualStrElse__Opcode__Noneval::new(self.stream, self, _root)?);
   |                                                                                             ^^^^ expected enum `std::option::Option`, found struct `switch_manual_str_else::SwitchManualStrElse__Opcode`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_str_else::SwitchManualStrElse__Opcode`

error[E0308]: mismatched types
  --> src/type_ternary.rs:53:74
   |
53 |         self.difWithHack = Box::new(TypeTernary__Dummy::new(self.stream, self, _root)?);
   |                                                                          ^^^^ expected enum `std::option::Option`, found struct `type_ternary::TypeTernary`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut type_ternary::TypeTernary`

error[E0308]: mismatched types
  --> src/type_ternary.rs:44:27
   |
44 |           where Self: Sized {
   |  ___________________________^
45 | |         if !(self.is_hack) {
46 | |             self._raw_difWoHack = self.stream.read_bytes(1)?;
47 | |             let mut io = Cursor::new(self._raw_difWoHack);
...  |
53 | |         self.difWithHack = Box::new(TypeTernary__Dummy::new(self.stream, self, _root)?);
54 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:82:29
   |
82 |                 self.body = Box::new(SwitchManualStrElse__Opcode__Noneval::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_str_else::SwitchManualStrElse__Opcode__Noneval>`
help: try using a variant of the expected type
   |
82 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualStrElse__Opcode__Noneval>::new(self.stream,
83 |                                                                                           self,
84 |                                                                                           _root))
85 |                {
86 |                ::std::result::Result::Err(err) =>
87 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_str_else.rs:81:18
   |
81 |               _ => {
   |  __________________^
82 | |                 self.body = Box::new(SwitchManualStrElse__Opcode__Noneval::new(self.stream, self, _root)?);
83 | |             }
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_manual_str_else::SwitchManualStrElse__Opcode__Intval`
   --> src/switch_manual_str_else.rs:103:11
    |
103 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut switch_manual_str_else::SwitchManualStrElse__Opcode__Intval`
   --> src/switch_manual_str_else.rs:116:27
    |
116 |         self.value = self.stream.read_u1()?;
    |                           ^^^^^^

error[E0308]: mismatched types
   --> src/switch_manual_str_else.rs:115:27
    |
115 |           where Self: Sized {
    |  ___________________________^
116 | |         self.value = self.stream.read_u1()?;
117 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_manual_str_else::SwitchManualStrElse__Opcode__Strval`
   --> src/switch_manual_str_else.rs:135:11
    |
135 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut switch_manual_str_else::SwitchManualStrElse__Opcode__Strval`
   --> src/switch_manual_str_else.rs:148:51
    |
148 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                                                   ^^^^^^

error[E0308]: mismatched types
  --> src/type_ternary.rs:63:23
   |
63 |         self.isHack = true;
   |                       ^^^^
   |                       |
   |                       expected enum `std::option::Option`, found bool
   |                       help: try using a variant of the expected type: `Some(true)`
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/type_ternary.rs:64:16
   |
64 |         return self.isHack;
   |                ^^^^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0609]: no field `is_hack` on type `&mut type_ternary::TypeTernary`
  --> src/type_ternary.rs:71:30
   |
71 |         self.dif = if !(self.is_hack) { self.dif_wo_hack } else { self.dif_with_hack};
   |                              ^^^^^^^

error[E0609]: no field `dif_wo_hack` on type `&mut type_ternary::TypeTernary`
  --> src/type_ternary.rs:71:46
   |
71 |         self.dif = if !(self.is_hack) { self.dif_wo_hack } else { self.dif_with_hack};
   |                                              ^^^^^^^^^^^

error[E0609]: no field `dif_with_hack` on type `&mut type_ternary::TypeTernary`
  --> src/type_ternary.rs:71:72
   |
71 |         self.dif = if !(self.is_hack) { self.dif_wo_hack } else { self.dif_with_hack};
   |                                                                        ^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> src/type_ternary.rs:72:16
   |
72 |         return self.dif;
   |                ^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `value` on type `std::option::Option<std::boxed::Box<type_ternary::TypeTernary__Dummy>>`
  --> src/type_ternary.rs:79:34
   |
79 |         self.difValue = self.dif.value;
   |                                  ^^^^^

error[E0308]: mismatched types
  --> src/type_ternary.rs:80:16
   |
80 |         return self.difValue;
   |                ^^^^^^^^^^^^^ expected u8, found enum `std::option::Option`
   |
   = note: expected type `u8`
              found type `std::option::Option<u8>`

error[E0609]: no field `stream` on type `type_ternary::TypeTernary__Dummy`
  --> src/type_ternary.rs:96:11
   |
96 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut type_ternary::TypeTernary__Dummy`
   --> src/type_ternary.rs:109:27
    |
109 |         self.value = self.stream.read_u1()?;
    |                           ^^^^^^

error[E0308]: mismatched types
   --> src/type_ternary.rs:108:27
    |
108 |           where Self: Sized {
    |  ___________________________^
109 | |         self.value = self.stream.read_u1()?;
110 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `type_ternary_opaque::TypeTernaryOpaque`
  --> src/type_ternary_opaque.rs:32:11
   |
32 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `difWoHack`, `difWithHack`, `_raw_difWoHack`, `_raw_difWithHack`, `_raw__raw_difWithHack` ... and 2 others

error[E0609]: no field `is_hack` on type `&mut type_ternary_opaque::TypeTernaryOpaque`
  --> src/type_ternary_opaque.rs:45:19
   |
45 |         if !(self.is_hack) {
   |                   ^^^^^^^

error[E0609]: no field `stream` on type `&mut type_ternary_opaque::TypeTernaryOpaque`
  --> src/type_ternary_opaque.rs:46:40
   |
46 |             self._raw_difWoHack = self.stream.read_bytes(12)?;
   |                                        ^^^^^^

error[E0609]: no field `stream` on type `&mut type_ternary_opaque::TypeTernaryOpaque`
  --> src/type_ternary_opaque.rs:48:58
   |
48 |             self.difWoHack = Box::new(TermStrz::new(self.stream, self, _root)?);
   |                                                          ^^^^^^

error[E0308]: mismatched types
   --> src/switch_manual_str_else.rs:148:22
    |
148 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                      |
    |                      expected struct `std::string::String`, found enum `std::borrow::Cow`
    |                      help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?).to_string()`
    |
    = note: expected type `std::string::String`
               found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
   --> src/switch_manual_str_else.rs:147:27
    |
147 |           where Self: Sized {
    |  ___________________________^
148 | |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
149 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_manual_str_else::SwitchManualStrElse__Opcode__Noneval`
   --> src/switch_manual_str_else.rs:167:11
    |
167 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `filler`

error[E0609]: no field `stream` on type `&mut switch_manual_str_else::SwitchManualStrElse__Opcode__Noneval`
   --> src/switch_manual_str_else.rs:180:28
    |
180 |         self.filler = self.stream.read_u4le()?;
    |                            ^^^^^^

error[E0308]: mismatched types
   --> src/switch_manual_str_else.rs:179:27
    |
179 |           where Self: Sized {
    |  ___________________________^
180 | |         self.filler = self.stream.read_u4le()?;
181 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_manual_str::SwitchManualStr`
  --> src/switch_manual_str.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `opcodes`

error[E0308]: mismatched types
  --> src/type_ternary_opaque.rs:48:66
   |
48 |             self.difWoHack = Box::new(TermStrz::new(self.stream, self, _root)?);
   |                                                                  ^^^^ expected enum `std::option::Option`, found struct `type_ternary_opaque::TypeTernaryOpaque`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut type_ternary_opaque::TypeTernaryOpaque`

error[E0609]: no field `is_hack` on type `&mut type_ternary_opaque::TypeTernaryOpaque`
  --> src/type_ternary_opaque.rs:50:17
   |
50 |         if self.is_hack {
   |                 ^^^^^^^

error[E0609]: no field `stream` on type `&mut type_ternary_opaque::TypeTernaryOpaque`
  --> src/type_ternary_opaque.rs:51:47
   |
51 |             self._raw__raw_difWithHack = self.stream.read_bytes(12)?;
   |                                               ^^^^^^

error[E0599]: no function or associated item named `processXorOne` found for type `S` in the current scope
  --> src/type_ternary_opaque.rs:52:42
   |
52 |             self._raw_difWithHack = &mut S::processXorOne(self._raw__raw_difWithHack, 3);
   |                                          ^^^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_xor_one`?

error[E0609]: no field `stream` on type `&mut type_ternary_opaque::TypeTernaryOpaque`
  --> src/type_ternary_opaque.rs:54:60
   |
54 |             self.difWithHack = Box::new(TermStrz::new(self.stream, self, _root)?);
   |                                                            ^^^^^^

error[E0308]: mismatched types
  --> src/type_ternary_opaque.rs:54:68
   |
54 |             self.difWithHack = Box::new(TermStrz::new(self.stream, self, _root)?);
   |                                                                    ^^^^ expected enum `std::option::Option`, found struct `type_ternary_opaque::TypeTernaryOpaque`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut type_ternary_opaque::TypeTernaryOpaque`

error[E0308]: mismatched types
  --> src/switch_manual_str.rs:37:24
   |
37 |         self.opcodes = [];
   |                        ^^
   |                        |
   |                        expected struct `std::vec::Vec`, found array of 0 elements
   |                        help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<switch_manual_str::SwitchManualStr__Opcode>>`
              found type `[_; 0]`

error[E0308]: mismatched types
  --> src/type_ternary_opaque.rs:50:25
   |
50 |           if self.is_hack {
   |  _________________________^
51 | |             self._raw__raw_difWithHack = self.stream.read_bytes(12)?;
52 | |             self._raw_difWithHack = &mut S::processXorOne(self._raw__raw_difWithHack, 3);
53 | |             let mut io = Cursor::new(self._raw_difWithHack);
54 | |             self.difWithHack = Box::new(TermStrz::new(self.stream, self, _root)?);
55 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut switch_manual_str::SwitchManualStr`
  --> src/switch_manual_str.rs:38:21
   |
38 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_manual_str::SwitchManualStr`
  --> src/switch_manual_str.rs:39:74
   |
39 |             self.opcodes.push(Box::new(SwitchManualStr__Opcode::new(self.stream, self, _root)?));
   |                                                                          ^^^^^^

error[E0308]: mismatched types
  --> src/type_ternary_opaque.rs:65:23
   |
65 |         self.isHack = false;
   |                       ^^^^^
   |                       |
   |                       expected enum `std::option::Option`, found bool
   |                       help: try using a variant of the expected type: `Some(false)`
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/type_ternary_opaque.rs:66:16
   |
66 |         return self.isHack;
   |                ^^^^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0609]: no field `is_hack` on type `&mut type_ternary_opaque::TypeTernaryOpaque`
  --> src/type_ternary_opaque.rs:73:30
   |
73 |         self.dif = if !(self.is_hack) { self.dif_wo_hack } else { self.dif_with_hack};
   |                              ^^^^^^^

error[E0609]: no field `dif_wo_hack` on type `&mut type_ternary_opaque::TypeTernaryOpaque`
  --> src/type_ternary_opaque.rs:73:46
   |
73 |         self.dif = if !(self.is_hack) { self.dif_wo_hack } else { self.dif_with_hack};
   |                                              ^^^^^^^^^^^

error[E0609]: no field `dif_with_hack` on type `&mut type_ternary_opaque::TypeTernaryOpaque`
  --> src/type_ternary_opaque.rs:73:72
   |
73 |         self.dif = if !(self.is_hack) { self.dif_wo_hack } else { self.dif_with_hack};
   |                                                                        ^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> src/type_ternary_opaque.rs:74:16
   |
74 |         return self.dif;
   |                ^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `user_type::UserType`
  --> src/user_type.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`

error[E0308]: mismatched types
  --> src/switch_manual_str.rs:39:82
   |
39 |             self.opcodes.push(Box::new(SwitchManualStr__Opcode::new(self.stream, self, _root)?));
   |                                                                                  ^^^^ expected enum `std::option::Option`, found struct `switch_manual_str::SwitchManualStr`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_str::SwitchManualStr`

error[E0609]: no field `stream` on type `&mut user_type::UserType`
  --> src/user_type.rs:37:56
   |
37 |         self.one = Box::new(UserType__Header::new(self.stream, self, _root)?);
   |                                                        ^^^^^^

error[E0308]: mismatched types
  --> src/switch_manual_str.rs:38:9
   |
35 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
38 | /         while !self.stream.isEof() {
39 | |             self.opcodes.push(Box::new(SwitchManualStr__Opcode::new(self.stream, self, _root)?));
40 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_manual_str::SwitchManualStr__Opcode`
  --> src/switch_manual_str.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `code`, `body`

error[E0609]: no field `stream` on type `&mut switch_manual_str::SwitchManualStr__Opcode`
  --> src/switch_manual_str.rs:73:50
   |
73 |         self.code = String::from_utf8_lossy(self.stream.read_bytes(1)?);
   |                                                  ^^^^^^

error[E0308]: mismatched types
  --> src/user_type.rs:37:64
   |
37 |         self.one = Box::new(UserType__Header::new(self.stream, self, _root)?);
   |                                                                ^^^^ expected enum `std::option::Option`, found struct `user_type::UserType`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut user_type::UserType`

error[E0308]: mismatched types
  --> src/user_type.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |         self.one = Box::new(UserType__Header::new(self.stream, self, _root)?);
38 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `user_type::UserType__Header`
  --> src/user_type.rs:57:11
   |
57 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `width`, `height`

error[E0609]: no field `stream` on type `&mut user_type::UserType__Header`
  --> src/user_type.rs:70:27
   |
70 |         self.width = self.stream.read_u4le()?;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut user_type::UserType__Header`
  --> src/user_type.rs:71:28
   |
71 |         self.height = self.stream.read_u4le()?;
   |                            ^^^^^^

error[E0308]: mismatched types
  --> src/user_type.rs:69:27
   |
69 |           where Self: Sized {
   |  ___________________________^
70 | |         self.width = self.stream.read_u4le()?;
71 | |         self.height = self.stream.read_u4le()?;
72 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `yaml_ints::YamlInts`
  --> src/yaml_ints.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `testU4Dec`, `testU4Hex`, `testU8Dec`, `testU8Hex`

error[E0308]: mismatched types
  --> src/yaml_ints.rs:39:27
   |
39 |           where Self: Sized {
   |  ___________________________^
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/switch_manual_str.rs:73:21
   |
73 |         self.code = String::from_utf8_lossy(self.stream.read_bytes(1)?);
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |                     |
   |                     expected struct `std::string::String`, found enum `std::borrow::Cow`
   |                     help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes(1)?).to_string()`
   |
   = note: expected type `std::string::String`
              found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
  --> src/switch_manual_str.rs:75:13
   |
75 |             "I" => {
   |             ^^^ expected struct `std::string::String`, found reference
   |
   = note: expected type `std::string::String`
              found type `&'static str`

error[E0308]: mismatched types
  --> src/switch_manual_str.rs:78:13
   |
78 |             "S" => {
   |             ^^^ expected struct `std::string::String`, found reference
   |
   = note: expected type `std::string::String`
              found type `&'static str`

error[E0609]: no field `stream` on type `&mut switch_manual_str::SwitchManualStr__Opcode`
  --> src/switch_manual_str.rs:76:80
   |
76 |                 self.body = Box::new(SwitchManualStr__Opcode__Intval::new(self.stream, self, _root)?);
   |                                                                                ^^^^^^

error[E0308]: mismatched types
  --> src/yaml_ints.rs:49:26
   |
49 |         self.testU4Dec = 4294967295;
   |                          ^^^^^^^^^^
   |                          |
   |                          expected enum `std::option::Option`, found integral variable
   |                          help: try using a variant of the expected type: `Some(4294967295)`
   |
   = note: expected type `std::option::Option<i32>`
              found type `{integer}`

error[E0308]: mismatched types
  --> src/yaml_ints.rs:50:16
   |
50 |         return self.testU4Dec;
   |                ^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0308]: mismatched types
  --> src/switch_manual_str.rs:76:88
   |
76 |                 self.body = Box::new(SwitchManualStr__Opcode__Intval::new(self.stream, self, _root)?);
   |                                                                                        ^^^^ expected enum `std::option::Option`, found struct `switch_manual_str::SwitchManualStr__Opcode`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_str::SwitchManualStr__Opcode`

error[E0308]: mismatched types
  --> src/yaml_ints.rs:57:26
   |
57 |         self.testU4Hex = 4294967295;
   |                          ^^^^^^^^^^
   |                          |
   |                          expected enum `std::option::Option`, found integral variable
   |                          help: try using a variant of the expected type: `Some(4294967295)`
   |
   = note: expected type `std::option::Option<i32>`
              found type `{integer}`

error[E0308]: mismatched types
  --> src/yaml_ints.rs:58:16
   |
58 |         return self.testU4Hex;
   |                ^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0308]: mismatched types
  --> src/switch_manual_str.rs:76:29
   |
76 |                 self.body = Box::new(SwitchManualStr__Opcode__Intval::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_str::SwitchManualStr__Opcode__Intval>`
help: try using a variant of the expected type
   |
76 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualStr__Opcode__Intval>::new(self.stream,
77 |                                                                                      self,
78 |                                                                                      _root))
79 |                {
80 |                ::std::result::Result::Err(err) =>
81 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_str.rs:75:20
   |
75 |               "I" => {
   |  ____________________^
76 | |                 self.body = Box::new(SwitchManualStr__Opcode__Intval::new(self.stream, self, _root)?);
77 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut switch_manual_str::SwitchManualStr__Opcode`
  --> src/switch_manual_str.rs:79:80
   |
79 |                 self.body = Box::new(SwitchManualStr__Opcode__Strval::new(self.stream, self, _root)?);
   |                                                                                ^^^^^^

error[E0308]: mismatched types
  --> src/yaml_ints.rs:65:26
   |
65 |         self.testU8Dec = 18446744073709551615;
   |                          ^^^^^^^^^^^^^^^^^^^^
   |                          |
   |                          expected enum `std::option::Option`, found integral variable
   |                          help: try using a variant of the expected type: `Some(18446744073709551615)`
   |
   = note: expected type `std::option::Option<i32>`
              found type `{integer}`

error[E0308]: mismatched types
  --> src/yaml_ints.rs:66:16
   |
66 |         return self.testU8Dec;
   |                ^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0308]: mismatched types
  --> src/switch_manual_str.rs:79:88
   |
79 |                 self.body = Box::new(SwitchManualStr__Opcode__Strval::new(self.stream, self, _root)?);
   |                                                                                        ^^^^ expected enum `std::option::Option`, found struct `switch_manual_str::SwitchManualStr__Opcode`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_manual_str::SwitchManualStr__Opcode`

error[E0308]: mismatched types
  --> src/yaml_ints.rs:73:26
   |
73 |         self.testU8Hex = 18446744073709551615;
   |                          ^^^^^^^^^^^^^^^^^^^^
   |                          |
   |                          expected enum `std::option::Option`, found integral variable
   |                          help: try using a variant of the expected type: `Some(18446744073709551615)`
   |
   = note: expected type `std::option::Option<i32>`
              found type `{integer}`

error[E0308]: mismatched types
  --> src/yaml_ints.rs:74:16
   |
74 |         return self.testU8Hex;
   |                ^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `zlib_with_header_78::ZlibWithHeader78`
  --> src/zlib_with_header_78.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `data`, `_raw_data`

error[E0609]: no field `stream` on type `&mut zlib_with_header_78::ZlibWithHeader78`
  --> src/zlib_with_header_78.rs:38:31
   |
38 |         self._raw_data = self.stream.read_bytes_full()?;
   |                               ^^^^^^

error[E0599]: no function or associated item named `processZlib` found for type `S` in the current scope
  --> src/zlib_with_header_78.rs:39:26
   |
39 |         self.data = &mut S::processZlib(self._raw_data);
   |                          ^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_zlib`?

error[E0308]: mismatched types
  --> src/zlib_with_header_78.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self._raw_data = self.stream.read_bytes_full()?;
39 | |         self.data = &mut S::processZlib(self._raw_data);
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error: aborting due to 2197 previous errors

Some errors occurred: E0277, E0308, E0317, E0369, E0425, E0432, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error[E0308]: mismatched types
  --> src/switch_manual_str.rs:79:29
   |
79 |                 self.body = Box::new(SwitchManualStr__Opcode__Strval::new(self.stream, self, _root)?);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found struct `std::boxed::Box`
   |
   = note: expected type `std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `std::boxed::Box<switch_manual_str::SwitchManualStr__Opcode__Strval>`
help: try using a variant of the expected type
   |
79 |                 self.body = Some(<Box>::new(match ::std::ops::Try::into_result(<SwitchManualStr__Opcode__Strval>::new(self.stream,
80 |                                                                                      self,
81 |                                                                                      _root))
82 |                {
83 |                ::std::result::Result::Err(err) =>
84 |                    #[allow(unreachable_code)]
 ...

error[E0308]: mismatched types
  --> src/switch_manual_str.rs:78:20
   |
78 |               "S" => {
   |  ____________________^
79 | |                 self.body = Box::new(SwitchManualStr__Opcode__Strval::new(self.stream, self, _root)?);
80 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_manual_str::SwitchManualStr__Opcode__Intval`
   --> src/switch_manual_str.rs:100:11
    |
100 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut switch_manual_str::SwitchManualStr__Opcode__Intval`
   --> src/switch_manual_str.rs:113:27
    |
113 |         self.value = self.stream.read_u1()?;
    |                           ^^^^^^

error[E0308]: mismatched types
   --> src/switch_manual_str.rs:112:27
    |
112 |           where Self: Sized {
    |  ___________________________^
113 | |         self.value = self.stream.read_u1()?;
114 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error: Could not compile `rust`.
warning: build failed, waiting for other jobs to finish...
error[E0609]: no field `stream` on type `switch_manual_str::SwitchManualStr__Opcode__Strval`
   --> src/switch_manual_str.rs:132:11
    |
132 |         s.stream = stream;
    |           ^^^^^^ unknown field
    |
    = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut switch_manual_str::SwitchManualStr__Opcode__Strval`
   --> src/switch_manual_str.rs:145:51
    |
145 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                                                   ^^^^^^

error[E0308]: mismatched types
   --> src/switch_manual_str.rs:145:22
    |
145 |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                      |
    |                      expected struct `std::string::String`, found enum `std::borrow::Cow`
    |                      help: try using a conversion method: `String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?).to_string()`
    |
    = note: expected type `std::string::String`
               found type `std::borrow::Cow<'_, str>`

error[E0308]: mismatched types
   --> src/switch_manual_str.rs:144:27
    |
144 |           where Self: Sized {
    |  ___________________________^
145 | |         self.value = String::from_utf8_lossy(self.stream.read_bytes_term(0, false, true, true)?);
146 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `switch_multi_bool_ops::SwitchMultiBoolOps`
  --> src/switch_multi_bool_ops.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `opcodes`

error[E0308]: mismatched types
  --> src/switch_multi_bool_ops.rs:37:24
   |
37 |         self.opcodes = [];
   |                        ^^
   |                        |
   |                        expected struct `std::vec::Vec`, found array of 0 elements
   |                        help: try using a conversion method: `[].to_vec()`
   |
   = note: expected type `std::vec::Vec<std::boxed::Box<switch_multi_bool_ops::SwitchMultiBoolOps__Opcode>>`
              found type `[_; 0]`

error[E0609]: no field `stream` on type `&mut switch_multi_bool_ops::SwitchMultiBoolOps`
  --> src/switch_multi_bool_ops.rs:38:21
   |
38 |         while !self.stream.isEof() {
   |                     ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_multi_bool_ops::SwitchMultiBoolOps`
  --> src/switch_multi_bool_ops.rs:39:77
   |
39 |             self.opcodes.push(Box::new(SwitchMultiBoolOps__Opcode::new(self.stream, self, _root)?));
   |                                                                             ^^^^^^

error[E0308]: mismatched types
  --> src/switch_multi_bool_ops.rs:39:85
   |
39 |             self.opcodes.push(Box::new(SwitchMultiBoolOps__Opcode::new(self.stream, self, _root)?));
   |                                                                                     ^^^^ expected enum `std::option::Option`, found struct `switch_multi_bool_ops::SwitchMultiBoolOps`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut switch_multi_bool_ops::SwitchMultiBoolOps`

error[E0308]: mismatched types
  --> src/switch_multi_bool_ops.rs:38:9
   |
35 |                                -> Result<()>
   |                                   ---------- expected `std::result::Result<(), std::io::Error>` because of return type
...
38 | /         while !self.stream.isEof() {
39 | |             self.opcodes.push(Box::new(SwitchMultiBoolOps__Opcode::new(self.stream, self, _root)?));
40 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `switch_multi_bool_ops::SwitchMultiBoolOps__Opcode`
  --> src/switch_multi_bool_ops.rs:60:11
   |
60 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `code`, `body`

error[E0609]: no field `stream` on type `&mut switch_multi_bool_ops::SwitchMultiBoolOps__Opcode`
  --> src/switch_multi_bool_ops.rs:73:26
   |
73 |         self.code = self.stream.read_u1()?;
   |                          ^^^^^^

error[E0609]: no field `stream` on type `&mut switch_multi_bool_ops::SwitchMultiBoolOps__Opcode`
  --> src/switch_multi_bool_ops.rs:76:34
   |
76 |                 self.body = self.stream.read_u1()?;
   |                                  ^^^^^^

error[E0308]: mismatched types
  --> src/switch_multi_bool_ops.rs:75:18
   |
75 |               1 => {
   |  __________________^
76 | |                 self.body = self.stream.read_u1()?;
77 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut switch_multi_bool_ops::SwitchMultiBoolOps__Opcode`
  --> src/switch_multi_bool_ops.rs:79:34
   |
79 |                 self.body = self.stream.read_u2le()?;
   |                                  ^^^^^^

error[E0308]: mismatched types
  --> src/switch_multi_bool_ops.rs:78:18
   |
78 |               2 => {
   |  __________________^
79 | |                 self.body = self.stream.read_u2le()?;
80 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut switch_multi_bool_ops::SwitchMultiBoolOps__Opcode`
  --> src/switch_multi_bool_ops.rs:82:34
   |
82 |                 self.body = self.stream.read_u4le()?;
   |                                  ^^^^^^

error[E0308]: mismatched types
  --> src/switch_multi_bool_ops.rs:81:18
   |
81 |               4 => {
   |  __________________^
82 | |                 self.body = self.stream.read_u4le()?;
83 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `&mut switch_multi_bool_ops::SwitchMultiBoolOps__Opcode`
  --> src/switch_multi_bool_ops.rs:85:34
   |
85 |                 self.body = self.stream.read_u8le()?;
   |                                  ^^^^^^

error[E0308]: mismatched types
  --> src/switch_multi_bool_ops.rs:84:18
   |
84 |               8 => {
   |  __________________^
85 | |                 self.body = self.stream.read_u8le()?;
86 | |             },
   | |_____________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `term_bytes::TermBytes`
  --> src/term_bytes.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `s1`, `s2`, `s3`

error[E0609]: no field `stream` on type `&mut term_bytes::TermBytes`
  --> src/term_bytes.rs:39:24
   |
39 |         self.s1 = self.stream.read_bytes_term(124, false, true, true)?;
   |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut term_bytes::TermBytes`
  --> src/term_bytes.rs:40:24
   |
40 |         self.s2 = self.stream.read_bytes_term(124, false, false, true)?;
   |                        ^^^^^^

error[E0609]: no field `stream` on type `&mut term_bytes::TermBytes`
  --> src/term_bytes.rs:41:24
   |
41 |         self.s3 = self.stream.read_bytes_term(64, true, true, true)?;
   |                        ^^^^^^

error[E0308]: mismatched types
  --> src/term_bytes.rs:38:27
   |
38 |           where Self: Sized {
   |  ___________________________^
39 | |         self.s1 = self.stream.read_bytes_term(124, false, true, true)?;
40 | |         self.s2 = self.stream.read_bytes_term(124, false, false, true)?;
41 | |         self.s3 = self.stream.read_bytes_term(64, true, true, true)?;
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `term_strz::TermStrz`
  --> src/term_strz.rs:26:11
   |
26 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `s1`, `s2`, `s3`

warning: unreachable expression
  --> src/term_strz.rs:39:9
   |
39 |         self.s1 = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unreachable expression
  --> src/term_strz.rs:40:9
   |
40 |         self.s2 = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unreachable expression
  --> src/term_strz.rs:41:9
   |
41 |         self.s3 = panic!("Unimplemented encoding for bytesToStr: {}", "UTF-8");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0277]: the trait bound `ts_packet_header::TsPacketHeader__AdaptationFieldControlEnum: std::default::Default` is not satisfied
  --> src/ts_packet_header.rs:23:5
   |
23 |     pub adaptationFieldControl: Box<TsPacketHeader__AdaptationFieldControlEnum>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::default::Default` is not implemented for `ts_packet_header::TsPacketHeader__AdaptationFieldControlEnum`
   |
   = note: required because of the requirements on the impl of `std::default::Default` for `std::boxed::Box<ts_packet_header::TsPacketHeader__AdaptationFieldControlEnum>`
   = note: required by `std::default::Default::default`

error[E0609]: no field `stream` on type `ts_packet_header::TsPacketHeader`
  --> src/ts_packet_header.rs:36:11
   |
36 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `syncByte`, `transportErrorIndicator`, `payloadUnitStartIndicator`, `transportPriority`, `pid` ... and 4 others

error[E0609]: no field `stream` on type `&mut ts_packet_header::TsPacketHeader`
  --> src/ts_packet_header.rs:49:30
   |
49 |         self.syncByte = self.stream.read_u1()?;
   |                              ^^^^^^

error[E0609]: no field `stream` on type `&mut ts_packet_header::TsPacketHeader`
  --> src/ts_packet_header.rs:50:45
   |
50 |         self.transportErrorIndicator = self.stream.read_bits_int(1)? != 0;
   |                                             ^^^^^^

error[E0609]: no field `stream` on type `&mut ts_packet_header::TsPacketHeader`
  --> src/ts_packet_header.rs:51:47
   |
51 |         self.payloadUnitStartIndicator = self.stream.read_bits_int(1)? != 0;
   |                                               ^^^^^^

error[E0609]: no field `stream` on type `&mut ts_packet_header::TsPacketHeader`
  --> src/ts_packet_header.rs:52:39
   |
52 |         self.transportPriority = self.stream.read_bits_int(1)? != 0;
   |                                       ^^^^^^

error[E0609]: no field `stream` on type `&mut ts_packet_header::TsPacketHeader`
  --> src/ts_packet_header.rs:53:25
   |
53 |         self.pid = self.stream.read_bits_int(13)?;
   |                         ^^^^^^

error[E0609]: no field `stream` on type `&mut ts_packet_header::TsPacketHeader`
  --> src/ts_packet_header.rs:54:48
   |
54 |         self.transportScramblingControl = self.stream.read_bits_int(2)?;
   |                                                ^^^^^^

error[E0609]: no field `stream` on type `&mut ts_packet_header::TsPacketHeader`
  --> src/ts_packet_header.rs:55:44
   |
55 |         self.adaptationFieldControl = self.stream.read_bits_int(2)?;
   |                                            ^^^^^^

error[E0609]: no field `stream` on type `&mut ts_packet_header::TsPacketHeader`
  --> src/ts_packet_header.rs:56:39
   |
56 |         self.continuityCounter = self.stream.read_bits_int(4)?;
   |                                       ^^^^^^

error[E0609]: no field `stream` on type `&mut ts_packet_header::TsPacketHeader`
  --> src/ts_packet_header.rs:57:14
   |
57 |         self.stream.alignToByte();
   |              ^^^^^^

error[E0609]: no field `stream` on type `&mut ts_packet_header::TsPacketHeader`
  --> src/ts_packet_header.rs:58:36
   |
58 |         self.tsPacketRemain = self.stream.read_bytes(184)?;
   |                                    ^^^^^^

error[E0308]: mismatched types
  --> src/ts_packet_header.rs:48:27
   |
48 |           where Self: Sized {
   |  ___________________________^
49 | |         self.syncByte = self.stream.read_u1()?;
50 | |         self.transportErrorIndicator = self.stream.read_bits_int(1)? != 0;
51 | |         self.payloadUnitStartIndicator = self.stream.read_bits_int(1)? != 0;
...  |
58 | |         self.tsPacketRemain = self.stream.read_bytes(184)?;
59 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `type_int_unary_op::TypeIntUnaryOp`
  --> src/type_int_unary_op.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `valueS2`, `valueS8`, `unaryS2`, `unaryS8`

error[E0609]: no field `stream` on type `&mut type_int_unary_op::TypeIntUnaryOp`
  --> src/type_int_unary_op.rs:40:29
   |
40 |         self.valueS2 = self.stream.read_s2le()?;
   |                             ^^^^^^

error[E0609]: no field `stream` on type `&mut type_int_unary_op::TypeIntUnaryOp`
  --> src/type_int_unary_op.rs:41:29
   |
41 |         self.valueS8 = self.stream.read_s8le()?;
   |                             ^^^^^^

error[E0308]: mismatched types
  --> src/type_int_unary_op.rs:39:27
   |
39 |           where Self: Sized {
   |  ___________________________^
40 | |         self.valueS2 = self.stream.read_s2le()?;
41 | |         self.valueS8 = self.stream.read_s8le()?;
42 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `value_s2` on type `&mut type_int_unary_op::TypeIntUnaryOp`
  --> src/type_int_unary_op.rs:51:31
   |
51 |         self.unaryS2 = -(self.value_s2);
   |                               ^^^^^^^^

error[E0308]: mismatched types
  --> src/type_int_unary_op.rs:52:16
   |
52 |         return self.unaryS2;
   |                ^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0609]: no field `value_s8` on type `&mut type_int_unary_op::TypeIntUnaryOp`
  --> src/type_int_unary_op.rs:59:31
   |
59 |         self.unaryS8 = -(self.value_s8);
   |                               ^^^^^^^^

error[E0308]: mismatched types
  --> src/type_int_unary_op.rs:60:16
   |
60 |         return self.unaryS8;
   |                ^^^^^^^^^^^^ expected i64, found enum `std::option::Option`
   |
   = note: expected type `i64`
              found type `std::option::Option<i64>`

error[E0609]: no field `stream` on type `type_ternary::TypeTernary`
  --> src/type_ternary.rs:32:11
   |
32 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `difWoHack`, `difWithHack`, `_raw_difWoHack`, `_raw_difWithHack`, `_raw__raw_difWithHack` ... and 3 others

error[E0609]: no field `is_hack` on type `&mut type_ternary::TypeTernary`
  --> src/type_ternary.rs:45:19
   |
45 |         if !(self.is_hack) {
   |                   ^^^^^^^

error[E0609]: no field `stream` on type `&mut type_ternary::TypeTernary`
  --> src/type_ternary.rs:46:40
   |
46 |             self._raw_difWoHack = self.stream.read_bytes(1)?;
   |                                        ^^^^^^

error[E0609]: no field `stream` on type `&mut type_ternary::TypeTernary`
  --> src/type_ternary.rs:48:68
   |
48 |             self.difWoHack = Box::new(TypeTernary__Dummy::new(self.stream, self, _root)?);
   |                                                                    ^^^^^^

error[E0308]: mismatched types
  --> src/type_ternary.rs:48:76
   |
48 |             self.difWoHack = Box::new(TypeTernary__Dummy::new(self.stream, self, _root)?);
   |                                                                            ^^^^ expected enum `std::option::Option`, found struct `type_ternary::TypeTernary`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut type_ternary::TypeTernary`

error[E0609]: no field `stream` on type `&mut type_ternary::TypeTernary`
  --> src/type_ternary.rs:50:43
   |
50 |         self._raw__raw_difWithHack = self.stream.read_bytes(1)?;
   |                                           ^^^^^^

error[E0599]: no function or associated item named `processXorOne` found for type `S` in the current scope
  --> src/type_ternary.rs:51:38
   |
51 |         self._raw_difWithHack = &mut S::processXorOne(self._raw__raw_difWithHack, 3);
   |                                      ^^^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_xor_one`?

error[E0609]: no field `stream` on type `&mut type_ternary::TypeTernary`
  --> src/type_ternary.rs:53:66
   |
53 |         self.difWithHack = Box::new(TypeTernary__Dummy::new(self.stream, self, _root)?);
   |                                                                  ^^^^^^

error[E0308]: mismatched types
  --> src/type_ternary.rs:53:74
   |
53 |         self.difWithHack = Box::new(TypeTernary__Dummy::new(self.stream, self, _root)?);
   |                                                                          ^^^^ expected enum `std::option::Option`, found struct `type_ternary::TypeTernary`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut type_ternary::TypeTernary`

error[E0308]: mismatched types
  --> src/type_ternary.rs:44:27
   |
44 |           where Self: Sized {
   |  ___________________________^
45 | |         if !(self.is_hack) {
46 | |             self._raw_difWoHack = self.stream.read_bytes(1)?;
47 | |             let mut io = Cursor::new(self._raw_difWoHack);
...  |
53 | |         self.difWithHack = Box::new(TypeTernary__Dummy::new(self.stream, self, _root)?);
54 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/type_ternary.rs:63:23
   |
63 |         self.isHack = true;
   |                       ^^^^
   |                       |
   |                       expected enum `std::option::Option`, found bool
   |                       help: try using a variant of the expected type: `Some(true)`
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/type_ternary.rs:64:16
   |
64 |         return self.isHack;
   |                ^^^^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0609]: no field `is_hack` on type `&mut type_ternary::TypeTernary`
  --> src/type_ternary.rs:71:30
   |
71 |         self.dif = if !(self.is_hack) { self.dif_wo_hack } else { self.dif_with_hack};
   |                              ^^^^^^^

error[E0609]: no field `dif_wo_hack` on type `&mut type_ternary::TypeTernary`
  --> src/type_ternary.rs:71:46
   |
71 |         self.dif = if !(self.is_hack) { self.dif_wo_hack } else { self.dif_with_hack};
   |                                              ^^^^^^^^^^^

error[E0609]: no field `dif_with_hack` on type `&mut type_ternary::TypeTernary`
  --> src/type_ternary.rs:71:72
   |
71 |         self.dif = if !(self.is_hack) { self.dif_wo_hack } else { self.dif_with_hack};
   |                                                                        ^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> src/type_ternary.rs:72:16
   |
72 |         return self.dif;
   |                ^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `value` on type `std::option::Option<std::boxed::Box<type_ternary::TypeTernary__Dummy>>`
  --> src/type_ternary.rs:79:34
   |
79 |         self.difValue = self.dif.value;
   |                                  ^^^^^

error[E0308]: mismatched types
  --> src/type_ternary.rs:80:16
   |
80 |         return self.difValue;
   |                ^^^^^^^^^^^^^ expected u8, found enum `std::option::Option`
   |
   = note: expected type `u8`
              found type `std::option::Option<u8>`

error[E0609]: no field `stream` on type `type_ternary::TypeTernary__Dummy`
  --> src/type_ternary.rs:96:11
   |
96 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `value`

error[E0609]: no field `stream` on type `&mut type_ternary::TypeTernary__Dummy`
   --> src/type_ternary.rs:109:27
    |
109 |         self.value = self.stream.read_u1()?;
    |                           ^^^^^^

error[E0308]: mismatched types
   --> src/type_ternary.rs:108:27
    |
108 |           where Self: Sized {
    |  ___________________________^
109 | |         self.value = self.stream.read_u1()?;
110 | |     }
    | |_____^ expected enum `std::result::Result`, found ()
    |
    = note: expected type `std::result::Result<(), std::io::Error>`
               found type `()`

error[E0609]: no field `stream` on type `type_ternary_opaque::TypeTernaryOpaque`
  --> src/type_ternary_opaque.rs:32:11
   |
32 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `difWoHack`, `difWithHack`, `_raw_difWoHack`, `_raw_difWithHack`, `_raw__raw_difWithHack` ... and 2 others

error[E0609]: no field `is_hack` on type `&mut type_ternary_opaque::TypeTernaryOpaque`
  --> src/type_ternary_opaque.rs:45:19
   |
45 |         if !(self.is_hack) {
   |                   ^^^^^^^

error[E0609]: no field `stream` on type `&mut type_ternary_opaque::TypeTernaryOpaque`
  --> src/type_ternary_opaque.rs:46:40
   |
46 |             self._raw_difWoHack = self.stream.read_bytes(12)?;
   |                                        ^^^^^^

error[E0609]: no field `stream` on type `&mut type_ternary_opaque::TypeTernaryOpaque`
  --> src/type_ternary_opaque.rs:48:58
   |
48 |             self.difWoHack = Box::new(TermStrz::new(self.stream, self, _root)?);
   |                                                          ^^^^^^

error[E0308]: mismatched types
  --> src/type_ternary_opaque.rs:48:66
   |
48 |             self.difWoHack = Box::new(TermStrz::new(self.stream, self, _root)?);
   |                                                                  ^^^^ expected enum `std::option::Option`, found struct `type_ternary_opaque::TypeTernaryOpaque`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut type_ternary_opaque::TypeTernaryOpaque`

error[E0609]: no field `is_hack` on type `&mut type_ternary_opaque::TypeTernaryOpaque`
  --> src/type_ternary_opaque.rs:50:17
   |
50 |         if self.is_hack {
   |                 ^^^^^^^

error[E0609]: no field `stream` on type `&mut type_ternary_opaque::TypeTernaryOpaque`
  --> src/type_ternary_opaque.rs:51:47
   |
51 |             self._raw__raw_difWithHack = self.stream.read_bytes(12)?;
   |                                               ^^^^^^

error[E0599]: no function or associated item named `processXorOne` found for type `S` in the current scope
  --> src/type_ternary_opaque.rs:52:42
   |
52 |             self._raw_difWithHack = &mut S::processXorOne(self._raw__raw_difWithHack, 3);
   |                                          ^^^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_xor_one`?

error[E0609]: no field `stream` on type `&mut type_ternary_opaque::TypeTernaryOpaque`
  --> src/type_ternary_opaque.rs:54:60
   |
54 |             self.difWithHack = Box::new(TermStrz::new(self.stream, self, _root)?);
   |                                                            ^^^^^^

error[E0308]: mismatched types
  --> src/type_ternary_opaque.rs:54:68
   |
54 |             self.difWithHack = Box::new(TermStrz::new(self.stream, self, _root)?);
   |                                                                    ^^^^ expected enum `std::option::Option`, found struct `type_ternary_opaque::TypeTernaryOpaque`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut type_ternary_opaque::TypeTernaryOpaque`

error[E0308]: mismatched types
  --> src/type_ternary_opaque.rs:50:25
   |
50 |           if self.is_hack {
   |  _________________________^
51 | |             self._raw__raw_difWithHack = self.stream.read_bytes(12)?;
52 | |             self._raw_difWithHack = &mut S::processXorOne(self._raw__raw_difWithHack, 3);
53 | |             let mut io = Cursor::new(self._raw_difWithHack);
54 | |             self.difWithHack = Box::new(TermStrz::new(self.stream, self, _root)?);
55 | |         }
   | |_________^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/type_ternary_opaque.rs:65:23
   |
65 |         self.isHack = false;
   |                       ^^^^^
   |                       |
   |                       expected enum `std::option::Option`, found bool
   |                       help: try using a variant of the expected type: `Some(false)`
   |
   = note: expected type `std::option::Option<bool>`
              found type `bool`

error[E0308]: mismatched types
  --> src/type_ternary_opaque.rs:66:16
   |
66 |         return self.isHack;
   |                ^^^^^^^^^^^ expected bool, found enum `std::option::Option`
   |
   = note: expected type `bool`
              found type `std::option::Option<bool>`

error[E0609]: no field `is_hack` on type `&mut type_ternary_opaque::TypeTernaryOpaque`
  --> src/type_ternary_opaque.rs:73:30
   |
73 |         self.dif = if !(self.is_hack) { self.dif_wo_hack } else { self.dif_with_hack};
   |                              ^^^^^^^

error[E0609]: no field `dif_wo_hack` on type `&mut type_ternary_opaque::TypeTernaryOpaque`
  --> src/type_ternary_opaque.rs:73:46
   |
73 |         self.dif = if !(self.is_hack) { self.dif_wo_hack } else { self.dif_with_hack};
   |                                              ^^^^^^^^^^^

error[E0609]: no field `dif_with_hack` on type `&mut type_ternary_opaque::TypeTernaryOpaque`
  --> src/type_ternary_opaque.rs:73:72
   |
73 |         self.dif = if !(self.is_hack) { self.dif_wo_hack } else { self.dif_with_hack};
   |                                                                        ^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> src/type_ternary_opaque.rs:74:16
   |
74 |         return self.dif;
   |                ^^^^^^^^ expected struct `std::boxed::Box`, found enum `std::option::Option`
   |
   = note: expected type `std::boxed::Box<_>`
              found type `std::option::Option<std::boxed::Box<_>>`

error[E0609]: no field `stream` on type `user_type::UserType`
  --> src/user_type.rs:24:11
   |
24 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `one`

error[E0609]: no field `stream` on type `&mut user_type::UserType`
  --> src/user_type.rs:37:56
   |
37 |         self.one = Box::new(UserType__Header::new(self.stream, self, _root)?);
   |                                                        ^^^^^^

error[E0308]: mismatched types
  --> src/user_type.rs:37:64
   |
37 |         self.one = Box::new(UserType__Header::new(self.stream, self, _root)?);
   |                                                                ^^^^ expected enum `std::option::Option`, found struct `user_type::UserType`
   |
   = note: expected type `&std::option::Option<std::boxed::Box<kaitai_struct::KaitaiStruct + 'static>>`
              found type `&mut user_type::UserType`

error[E0308]: mismatched types
  --> src/user_type.rs:36:27
   |
36 |           where Self: Sized {
   |  ___________________________^
37 | |         self.one = Box::new(UserType__Header::new(self.stream, self, _root)?);
38 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `user_type::UserType__Header`
  --> src/user_type.rs:57:11
   |
57 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `width`, `height`

error[E0609]: no field `stream` on type `&mut user_type::UserType__Header`
  --> src/user_type.rs:70:27
   |
70 |         self.width = self.stream.read_u4le()?;
   |                           ^^^^^^

error[E0609]: no field `stream` on type `&mut user_type::UserType__Header`
  --> src/user_type.rs:71:28
   |
71 |         self.height = self.stream.read_u4le()?;
   |                            ^^^^^^

error[E0308]: mismatched types
  --> src/user_type.rs:69:27
   |
69 |           where Self: Sized {
   |  ___________________________^
70 | |         self.width = self.stream.read_u4le()?;
71 | |         self.height = self.stream.read_u4le()?;
72 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0609]: no field `stream` on type `yaml_ints::YamlInts`
  --> src/yaml_ints.rs:27:11
   |
27 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `testU4Dec`, `testU4Hex`, `testU8Dec`, `testU8Hex`

error[E0308]: mismatched types
  --> src/yaml_ints.rs:39:27
   |
39 |           where Self: Sized {
   |  ___________________________^
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error[E0308]: mismatched types
  --> src/yaml_ints.rs:49:26
   |
49 |         self.testU4Dec = 4294967295;
   |                          ^^^^^^^^^^
   |                          |
   |                          expected enum `std::option::Option`, found integral variable
   |                          help: try using a variant of the expected type: `Some(4294967295)`
   |
   = note: expected type `std::option::Option<i32>`
              found type `{integer}`

error[E0308]: mismatched types
  --> src/yaml_ints.rs:50:16
   |
50 |         return self.testU4Dec;
   |                ^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0308]: mismatched types
  --> src/yaml_ints.rs:57:26
   |
57 |         self.testU4Hex = 4294967295;
   |                          ^^^^^^^^^^
   |                          |
   |                          expected enum `std::option::Option`, found integral variable
   |                          help: try using a variant of the expected type: `Some(4294967295)`
   |
   = note: expected type `std::option::Option<i32>`
              found type `{integer}`

error[E0308]: mismatched types
  --> src/yaml_ints.rs:58:16
   |
58 |         return self.testU4Hex;
   |                ^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0308]: mismatched types
  --> src/yaml_ints.rs:65:26
   |
65 |         self.testU8Dec = 18446744073709551615;
   |                          ^^^^^^^^^^^^^^^^^^^^
   |                          |
   |                          expected enum `std::option::Option`, found integral variable
   |                          help: try using a variant of the expected type: `Some(18446744073709551615)`
   |
   = note: expected type `std::option::Option<i32>`
              found type `{integer}`

error[E0308]: mismatched types
  --> src/yaml_ints.rs:66:16
   |
66 |         return self.testU8Dec;
   |                ^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0308]: mismatched types
  --> src/yaml_ints.rs:73:26
   |
73 |         self.testU8Hex = 18446744073709551615;
   |                          ^^^^^^^^^^^^^^^^^^^^
   |                          |
   |                          expected enum `std::option::Option`, found integral variable
   |                          help: try using a variant of the expected type: `Some(18446744073709551615)`
   |
   = note: expected type `std::option::Option<i32>`
              found type `{integer}`

error[E0308]: mismatched types
  --> src/yaml_ints.rs:74:16
   |
74 |         return self.testU8Hex;
   |                ^^^^^^^^^^^^^^ expected i32, found enum `std::option::Option`
   |
   = note: expected type `i32`
              found type `std::option::Option<i32>`

error[E0609]: no field `stream` on type `zlib_with_header_78::ZlibWithHeader78`
  --> src/zlib_with_header_78.rs:25:11
   |
25 |         s.stream = stream;
   |           ^^^^^^ unknown field
   |
   = note: available fields are: `data`, `_raw_data`

error[E0609]: no field `stream` on type `&mut zlib_with_header_78::ZlibWithHeader78`
  --> src/zlib_with_header_78.rs:38:31
   |
38 |         self._raw_data = self.stream.read_bytes_full()?;
   |                               ^^^^^^

error[E0599]: no function or associated item named `processZlib` found for type `S` in the current scope
  --> src/zlib_with_header_78.rs:39:26
   |
39 |         self.data = &mut S::processZlib(self._raw_data);
   |                          ^^^^^^^^^^^^^^ function or associated item not found in `S`
   |
   = help: did you mean `process_zlib`?

error[E0308]: mismatched types
  --> src/zlib_with_header_78.rs:37:27
   |
37 |           where Self: Sized {
   |  ___________________________^
38 | |         self._raw_data = self.stream.read_bytes_full()?;
39 | |         self.data = &mut S::processZlib(self._raw_data);
40 | |     }
   | |_____^ expected enum `std::result::Result`, found ()
   |
   = note: expected type `std::result::Result<(), std::io::Error>`
              found type `()`

error: aborting due to 2197 previous errors

Some errors occurred: E0277, E0308, E0317, E0369, E0425, E0432, E0433, E0599, E0609.
For more information about an error, try `rustc --explain E0277`.
error: Could not compile `rust`.

To learn more, run the command again with --verbose.
