// Autogenerated from KST: please remove this line if doing any edits by hand!

use kaitai::{BytesReader, KStruct, KStructUnit};
use kaitai_test::str_literals2::*;
use std::fs;

#[test]
fn test_str_literals2() {
    let data = fs::read("../../src/fixed_struct.bin").expect("Unable to read data.");
    let reader = BytesReader::new(&data[..]);
    let mut r = StrLiterals2::default();
    r.read(&reader, None, KStructUnit::parent_stack()).expect("Unable to parse data.");
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(dollar1)), Str($foo))
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(dollar2)), Str(${foo}))
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(hash)), Str(#{foo}))
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(at_sign)), Str(@foo))
}
