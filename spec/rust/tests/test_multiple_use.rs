// Autogenerated from KST: please remove this line if doing any edits by hand!

use kaitai::{BytesReader, KStruct, KStructUnit};
use kaitai_test::multiple_use::*;
use std::fs;

#[test]
fn test_multiple_use() {
    let data = fs::read("../../src/position_abs.bin").expect("Unable to read data.");
    let reader = BytesReader::new(&data[..]);
    let mut r = MultipleUse::default();
    r.read(&reader, None, KStructUnit::parent_stack()).expect("Unable to parse data.");
    // assert_eq!(Attribute(Attribute(Attribute(Name(identifier(q1w2e3)),identifier(t1)),identifier(first_use)),identifier(value)), IntNum(32))
    // assert_eq!(Attribute(Attribute(Attribute(Name(identifier(q1w2e3)),identifier(t2)),identifier(second_use)),identifier(value)), IntNum(32))
}
