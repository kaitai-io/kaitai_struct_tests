// Autogenerated from KST: please remove this line if doing any edits by hand!

use kaitai::{BytesReader, KStruct, KStructUnit};
use kaitai_test::recursive_one::*;
use std::fs;

#[test]
fn test_recursive_one() {
    let data = fs::read("../../src/fixed_struct.bin").expect("Unable to read data.");
    let reader = BytesReader::new(&data[..]);
    let mut r = RecursiveOne::default();
    r.read(&reader, None, KStructUnit::parent_stack()).expect("Unable to parse data.");
    assert_eq!(r.one, 80);
    // assert_eq!(Attribute(CastToType(Attribute(Name(identifier(q1w2e3)),identifier(next)),typeId(false,ArrayBuffer(recursive_one),false)),identifier(one)), IntNum(65))
    // assert_eq!(Attribute(CastToType(Attribute(CastToType(Attribute(Name(identifier(q1w2e3)),identifier(next)),typeId(false,ArrayBuffer(recursive_one),false)),identifier(next)),typeId(false,ArrayBuffer(recursive_one),false)),identifier(one)), IntNum(67))
    // assert_eq!(Attribute(CastToType(Attribute(CastToType(Attribute(CastToType(Attribute(Name(identifier(q1w2e3)),identifier(next)),typeId(false,ArrayBuffer(recursive_one),false)),identifier(next)),typeId(false,ArrayBuffer(recursive_one),false)),identifier(next)),typeId(false,ArrayBuffer(recursive_one, fini),false)),identifier(finisher)), IntNum(11595))
}
