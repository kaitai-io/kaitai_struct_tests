// Autogenerated from KST: please remove this line if doing any edits by hand!

use kaitai::{BytesReader, KStruct, KStructUnit};
use kaitai_test::instance_std_array::InstanceStdArray;
use std::fs;

#[test]
fn test_instance_std_array() {
    let data = fs::read("../../src/instance_std_array.bin").expect("Unable to read data.");
    let reader = BytesReader::new(&data[..]);
    let r = InstanceStdArray::default().read(&reader, None, KStructUnit::parent_stack()).unwrap();
    // assert_eq!(r.ofs, 16);
    // assert_eq!(r.qty_entries, 3);
    // assert_eq!(r.entry_size, 4);
    // assert_eq!(r.entries.len(), 3);
    // assert_eq!(r.entries[0], vec!([0x11, 0x11, 0x11, 0x11]));
    // assert_eq!(r.entries[1], vec!([0x22, 0x22, 0x22, 0x22]));
    // assert_eq!(r.entries[2], vec!([0x33, 0x33, 0x33, 0x33]));
}
