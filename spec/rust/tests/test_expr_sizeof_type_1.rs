// Autogenerated from KST: please remove this line if doing any edits by hand!

use kaitai::{BytesReader, KStruct, KStructUnit};
use kaitai_test::expr_sizeof_type_1::*;
use std::fs;

#[test]
fn test_expr_sizeof_type_1() {
    let data = fs::read("../../src/fixed_struct.bin").expect("Unable to read data.");
    let reader = BytesReader::new(&data[..]);
    let mut r = ExprSizeofType1::default();
    r.read(&reader, None, KStructUnit::parent_stack()).expect("Unable to parse data.");
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(sizeof_block)), BinOp(BinOp(BinOp(IntNum(1),Add,IntNum(4)),Add,IntNum(2)),Add,IntNum(4)))
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(sizeof_subblock)), IntNum(4))
}
