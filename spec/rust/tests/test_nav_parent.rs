// Autogenerated from KST: please remove this line if doing any edits by hand!

use kaitai::{BytesReader, KStruct, KStructUnit};
use kaitai_test::nav_parent::*;
use std::fs;

#[test]
fn test_nav_parent() {
    let data = fs::read("../../src/nav.bin").expect("Unable to read data.");
    let reader = BytesReader::new(&data[..]);
    let mut r = NavParent::default();
    r.read(&reader, None, KStructUnit::parent_stack()).expect("Unable to parse data.");
    // assert_eq!(Attribute(Attribute(Name(identifier(q1w2e3)),identifier(header)),identifier(qty_entries)), IntNum(2))
    // assert_eq!(Attribute(Attribute(Name(identifier(q1w2e3)),identifier(header)),identifier(filename_len)), IntNum(8))
    // assert_eq!(Attribute(Attribute(Attribute(Name(identifier(q1w2e3)),identifier(index)),identifier(entries)),identifier(size)), IntNum(2))
    // assert_eq!(Attribute(Subscript(Attribute(Attribute(Name(identifier(q1w2e3)),identifier(index)),identifier(entries)),IntNum(0)),identifier(filename)), Str(FIRST___))
    // assert_eq!(Attribute(Subscript(Attribute(Attribute(Name(identifier(q1w2e3)),identifier(index)),identifier(entries)),IntNum(1)),identifier(filename)), Str(SECOND__))
}
