// Autogenerated from KST: please remove this line if doing any edits by hand!

use kaitai::{BytesReader, KStruct, KStructUnit};
use kaitai_test::index_to_param_eos::*;
use std::fs;

#[test]
fn test_index_to_param_eos() {
    let data = fs::read("../../src/index_sizes.bin").expect("Unable to read data.");
    let reader = BytesReader::new(&data[..]);
    let mut r = IndexToParamEos::default();
    r.read(&reader, None, KStructUnit::parent_stack()).expect("Unable to parse data.");
    assert_eq!(r.qty, 3);
    assert_eq!(r.sizes[0], 1);
    assert_eq!(r.sizes[1], 8);
    assert_eq!(r.sizes[2], 4);
    // assert_eq!(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(blocks)),IntNum(0)),identifier(buf)), Str(A))
    // assert_eq!(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(blocks)),IntNum(1)),identifier(buf)), Str(BBBBBBBB))
    // assert_eq!(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(blocks)),IntNum(2)),identifier(buf)), Str(CCCC))
}
