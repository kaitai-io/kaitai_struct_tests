// Autogenerated from KST: please remove this line if doing any edits by hand!

use kaitai::{BytesReader, KStruct, KStructUnit};
use kaitai_test::expr_enum::*;
use std::fs;

#[test]
fn test_expr_enum() {
    let data = fs::read("../../src/term_strz.bin").expect("Unable to read data.");
    let reader = BytesReader::new(&data[..]);
    let mut r = ExprEnum::default();
    r.read(&reader, None, KStructUnit::parent_stack()).expect("Unable to parse data.");
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(const_dog)), EnumByLabel(identifier(animal),identifier(dog),typeId(false,ArrayBuffer(expr_enum),false)))
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(derived_boom)), EnumByLabel(identifier(animal),identifier(boom),typeId(false,ArrayBuffer(expr_enum),false)))
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(derived_dog)), EnumByLabel(identifier(animal),identifier(dog),typeId(false,ArrayBuffer(expr_enum),false)))
}
