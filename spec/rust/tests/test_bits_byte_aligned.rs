// Autogenerated from KST: please remove this line if doing any edits by hand!

use kaitai::{BytesReader, KStruct, KStructUnit};
use kaitai_test::bits_byte_aligned::*;
use std::fs;

#[test]
fn test_bits_byte_aligned() {
    let data = fs::read("../../src/fixed_struct.bin").expect("Unable to read data.");
    let reader = BytesReader::new(&data[..]);
    let mut r = BitsByteAligned::default();
    r.read(&reader, None, KStructUnit::parent_stack()).expect("Unable to parse data.");
    assert_eq!(r.one, 20);
    assert_eq!(r.byte_1, 65);
    assert_eq!(r.two, 2);
    assert_eq!(r.three, false);
    assert_eq!(r.byte_2, 75);
    assert_eq!(r.four, 2892);
    assert_eq!(r.byte_3, &[0xff]);
    assert_eq!(r.full_byte, 255);
    assert_eq!(r.byte_4, 80);
}
