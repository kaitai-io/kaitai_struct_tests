// Autogenerated from KST: please remove this line if doing any edits by hand!

use kaitai::{BytesReader, KStruct, KStructUnit};
use kaitai_test::repeat_until_sized::*;
use std::fs;

#[test]
fn test_repeat_until_sized() {
    let data = fs::read("../../src/repeat_until_process.bin").expect("Unable to read data.");
    let reader = BytesReader::new(&data[..]);
    let mut r = RepeatUntilSized::default();
    r.read(&reader, None, KStructUnit::parent_stack()).expect("Unable to parse data.");
    // assert_eq!(Attribute(Attribute(Name(identifier(q1w2e3)),identifier(records)),identifier(size)), IntNum(3))
    // assert_eq!(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(records)),IntNum(0)),identifier(marker)), IntNum(232))
    // assert_eq!(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(records)),IntNum(0)),identifier(body)), IntNum(2863311546))
    // assert_eq!(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(records)),IntNum(1)),identifier(marker)), IntNum(250))
    // assert_eq!(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(records)),IntNum(1)),identifier(body)), IntNum(2863315102))
    // assert_eq!(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(records)),IntNum(2)),identifier(marker)), IntNum(170))
    // assert_eq!(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(records)),IntNum(2)),identifier(body)), IntNum(1431655765))
}
