// Autogenerated from KST: please remove this line if doing any edits by hand!

use kaitai::{BytesReader, KStruct, KStructUnit};
use kaitai_test::expr_sizeof_value_0::ExprSizeofValue0;
use std::fs;

#[test]
fn test_expr_sizeof_value_0() {
    let data = fs::read("src/fixed_struct.bin").expect("Unable to read data.");
    let reader = BytesReader::new(&data[..]);
    let r = ExprSizeofValue0::default().read(&reader, None, KStructUnit::parent_stack()).unwrap();
    // assert_eq!(r.self_sizeof, (((1 + 4) + 2) + 2));
    // assert_eq!(r.sizeof_block, ((1 + 4) + 2));
    // assert_eq!(r.sizeof_block_a, 1);
    // assert_eq!(r.sizeof_block_b, 4);
    // assert_eq!(r.sizeof_block_c, 2);
}
