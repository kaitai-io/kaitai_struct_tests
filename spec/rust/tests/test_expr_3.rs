// Autogenerated from KST: please remove this line if doing any edits by hand!

use kaitai::{BytesReader, KStruct, KStructUnit};
use kaitai_test::expr_3::Expr3;
use std::fs;

#[test]
fn test_expr_3() {
    let data = fs::read("src/fixed_struct.bin").expect("Unable to read data.");
    let reader = BytesReader::new(&data[..]);
    let r = Expr3::default().read(&reader, None, KStructUnit::parent_stack()).unwrap();
    // assert_eq!(r.one, 80);
    // assert_eq!(r.two, "ACK");
    // assert_eq!(r.three, "@ACK");
    // assert_eq!(r.four, "_ACK_");
    // assert_eq!(r.is_str_eq, true);
    // assert_eq!(r.is_str_ne, false);
    // assert_eq!(r.is_str_lt, true);
    // assert_eq!(r.is_str_gt, false);
    // assert_eq!(r.is_str_le, true);
    // assert_eq!(r.is_str_ge, false);
    // assert_eq!(r.is_str_lt2, true);
    // assert_eq!(r.test_not, true);
}
