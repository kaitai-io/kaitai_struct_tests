// Autogenerated from KST: please remove this line if doing any edits by hand!

use kaitai::{BytesReader, KStruct, KStructUnit};
use kaitai_test::switch_manual_str_else::SwitchManualStrElse;
use std::fs;

#[test]
fn test_switch_manual_str_else() {
    let data = fs::read("../../src/switch_opcodes2.bin").expect("Unable to read data.");
    let reader = BytesReader::new(&data[..]);
    let r = SwitchManualStrElse::default().read(&reader, None, KStructUnit::parent_stack()).unwrap();
    // assert_eq!(r.opcodes.len(), 4);
    // assert_eq!(r.opcodes[0].code, "S");
    // assert_eq!(r.opcodes[0].body.value, "foo");
    // assert_eq!(r.opcodes[1].code, "X");
    // assert_eq!(r.opcodes[1].body.filler, 66);
    // assert_eq!(r.opcodes[2].code, "Y");
    // assert_eq!(r.opcodes[2].body.filler, 51966);
    // assert_eq!(r.opcodes[3].code, "I");
    // assert_eq!(r.opcodes[3].body.value, 7);
}
