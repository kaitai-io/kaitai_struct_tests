// Autogenerated from KST: please remove this line if doing any edits by hand!

use kaitai::{BytesReader, KStruct, KStructUnit};
use kaitai_test::ts_packet_header::TsPacketHeader;
use std::fs;

#[test]
fn test_ts_packet_header() {
    let data = fs::read("../../src/ts_packet.bin").expect("Unable to read data.");
    let reader = BytesReader::new(&data[..]);
    let r = TsPacketHeader::default().read(&reader, None, KStructUnit::parent_stack()).unwrap();
    // assert_eq!(r.sync_byte, 71);
    // assert_eq!(r.transport_error_indicator, false);
    // assert_eq!(r.payload_unit_start_indicator, false);
    // assert_eq!(r.transport_priority, true);
    // assert_eq!(r.pid, 33);
    // assert_eq!(r.transport_scrambling_control, 0);
    // assert_eq!(r.adaptation_field_control, adaptation_field_control_enum::PAYLOAD_ONLY);
}
