// Autogenerated from KST: please remove this line if doing any edits by hand!

use kaitai::{BytesReader, KStruct, KStructUnit};
use kaitai_test::type_int_unary_op::TypeIntUnaryOp;
use std::fs;

#[test]
fn test_type_int_unary_op() {
    let data = fs::read("../../src/fixed_struct.bin").expect("Unable to read data.");
    let reader = BytesReader::new(&data[..]);
    let r = TypeIntUnaryOp::default().read(&reader, None, KStructUnit::parent_stack()).unwrap();
    // assert_eq!(r.value_s2, 16720);
    // assert_eq!(r.value_s8, 4706543082108963651);
    // assert_eq!(r.unary_s2, -16720);
    // assert_eq!(r.unary_s8, -4706543082108963651);
}
