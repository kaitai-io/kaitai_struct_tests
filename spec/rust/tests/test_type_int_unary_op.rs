// Autogenerated from KST: please remove this line if doing any edits by hand!

use kaitai::{BytesReader, KStruct, KStructUnit};
use kaitai_test::type_int_unary_op::*;
use std::fs;

#[test]
fn test_type_int_unary_op() {
    let data = fs::read("../../src/fixed_struct.bin").expect("Unable to read data.");
    let reader = BytesReader::new(&data[..]);
    let mut r = TypeIntUnaryOp::default();
    r.read(&reader, None, KStructUnit::parent_stack()).expect("Unable to parse data.");
    assert_eq!(r.value_s2, 16720);
    assert_eq!(r.value_s8, 4706543082108963651);
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(unary_s2)), UnaryOp(Minus,IntNum(16720)))
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(unary_s8)), UnaryOp(Minus,IntNum(4706543082108963651)))
}
