// Autogenerated from KST: please remove this line if doing any edits by hand!

use kaitai::{BytesReader, KStruct, KStructUnit};
use kaitai_test::expr_array::*;
use std::fs;

#[test]
fn test_expr_array() {
    let data = fs::read("../../src/expr_array.bin").expect("Unable to read data.");
    let reader = BytesReader::new(&data[..]);
    let mut r = ExprArray::default();
    r.read(&reader, None, KStructUnit::parent_stack()).expect("Unable to parse data.");
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(aint_size)), IntNum(4))
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(aint_first)), IntNum(7657765))
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(aint_last)), IntNum(16272640))
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(aint_min)), IntNum(49185))
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(aint_max)), IntNum(1123362332))
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(afloat_size)), IntNum(3))
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(afloat_first)), UnaryOp(Minus,FloatNum(2.6839530254859364E-121)))
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(afloat_last)), UnaryOp(Minus,FloatNum(1.1103359815095273E-175)))
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(afloat_min)), UnaryOp(Minus,FloatNum(8.754689149998834E+288)))
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(afloat_max)), UnaryOp(Minus,FloatNum(1.1103359815095273E-175)))
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(astr_size)), IntNum(3))
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(astr_first)), Str(foo))
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(astr_last)), Str(baz))
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(astr_min)), Str(bar))
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(astr_max)), Str(foo))
}
