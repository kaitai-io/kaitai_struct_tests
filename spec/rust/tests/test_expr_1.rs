// Autogenerated from KST: please remove this line if doing any edits by hand!

use kaitai::{BytesReader, KStruct, KStructUnit};
use kaitai_test::expr_1::*;
use std::fs;

#[test]
fn test_expr_1() {
    let data = fs::read("../../src/str_encodings.bin").expect("Unable to read data.");
    let reader = BytesReader::new(&data[..]);
    let mut r = Expr1::default();
    r.read(&reader, None, KStructUnit::parent_stack()).expect("Unable to parse data.");
    assert_eq!(r.len_of_1, 10);
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(len_of_1_mod)), IntNum(8))
    assert_eq!(r.str1, "Some ASC");
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(str1_len)), IntNum(8))
}
