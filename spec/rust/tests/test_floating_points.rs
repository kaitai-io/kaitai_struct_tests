// Autogenerated from KST: please remove this line if doing any edits by hand!

use kaitai::{BytesReader, KStruct, KStructUnit};
use kaitai_test::floating_points::*;
use std::fs;

#[test]
fn test_floating_points() {
    let data = fs::read("../../src/floating_points.bin").expect("Unable to read data.");
    let reader = BytesReader::new(&data[..]);
    let mut r = FloatingPoints::default();
    r.read(&reader, None, KStructUnit::parent_stack()).expect("Unable to parse data.");
    assert_eq!(r.single_value, 0.5);
    assert_eq!(r.single_value_be, 0.5);
    assert_eq!(r.double_value, 0.25);
    assert_eq!(r.double_value_be, 0.25);
    assert_eq!(r.approximate_value, 1.2345);
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(single_value_plus_int)), FloatNum(1.5))
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(single_value_plus_float)), FloatNum(1.0))
    // assert_eq!(Attribute(Name(identifier(q1w2e3)),identifier(double_value_plus_float)), FloatNum(0.3))
}
