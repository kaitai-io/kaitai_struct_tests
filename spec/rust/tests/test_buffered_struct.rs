// Autogenerated from KST: please remove this line if doing any edits by hand!

use kaitai::{BytesReader, KStruct, KStructUnit};
use kaitai_test::buffered_struct::*;
use std::fs;

#[test]
fn test_buffered_struct() {
    let data = fs::read("../../src/buffered_struct.bin").expect("Unable to read data.");
    let reader = BytesReader::new(&data[..]);
    let mut r = BufferedStruct::default();
    r.read(&reader, None, KStructUnit::parent_stack()).expect("Unable to parse data.");
    assert_eq!(r.len1, 16);
    // assert_eq!(Attribute(Attribute(Name(identifier(q1w2e3)),identifier(block1)),identifier(number1)), IntNum(66))
    // assert_eq!(Attribute(Attribute(Name(identifier(q1w2e3)),identifier(block1)),identifier(number2)), IntNum(67))
    assert_eq!(r.len2, 8);
    // assert_eq!(Attribute(Attribute(Name(identifier(q1w2e3)),identifier(block2)),identifier(number1)), IntNum(68))
    // assert_eq!(Attribute(Attribute(Name(identifier(q1w2e3)),identifier(block2)),identifier(number2)), IntNum(69))
    assert_eq!(r.finisher, 238);
}
