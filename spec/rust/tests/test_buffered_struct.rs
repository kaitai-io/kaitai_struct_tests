// Autogenerated from KST: please remove this line if doing any edits by hand!

use kaitai::{BytesReader, KStruct, KStructUnit};
use kaitai_test::buffered_struct::BufferedStruct;
use std::fs;

#[test]
fn test_buffered_struct() {
    let data = fs::read("../../src/buffered_struct.bin").expect("Unable to read data.");
    let reader = BytesReader::new(&data[..]);
    let r = BufferedStruct::default().read(&reader, None, KStructUnit::parent_stack()).unwrap();
    // assert_eq!(r.len1, 16);
    // assert_eq!(r.block1.number1, 66);
    // assert_eq!(r.block1.number2, 67);
    // assert_eq!(r.len2, 8);
    // assert_eq!(r.block2.number1, 68);
    // assert_eq!(r.block2.number2, 69);
    // assert_eq!(r.finisher, 238);
}
