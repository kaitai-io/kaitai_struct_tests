// Autogenerated from KST: please remove this line if doing any edits by hand!

use kaitai::{BytesReader, KStruct, KStructUnit};
use kaitai_test::expr_bytes_cmp::ExprBytesCmp;
use std::fs;

#[test]
fn test_expr_bytes_cmp() {
    let data = fs::read("src/fixed_struct.bin").expect("Unable to read data.");
    let reader = BytesReader::new(&data[..]);
    let r = ExprBytesCmp::default().read(&reader, None, KStructUnit::parent_stack()).unwrap();
    // assert_eq!(r.one, vec!([0x50]));
    // assert_eq!(r.two, vec!([0x41, 0x43, 0x4b]));
    // assert_eq!(r.is_eq, true);
    // assert_eq!(r.is_ne, false);
    // assert_eq!(r.is_lt, true);
    // assert_eq!(r.is_gt, false);
    // assert_eq!(r.is_le, true);
    // assert_eq!(r.is_ge, false);
    // assert_eq!(r.is_lt2, false);
    // assert_eq!(r.is_gt2, true);
}
