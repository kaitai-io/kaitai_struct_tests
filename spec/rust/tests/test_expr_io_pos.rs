// Autogenerated from KST: please remove this line if doing any edits by hand!

use kaitai::{BytesReader, KStruct, KStructUnit};
use kaitai_test::expr_io_pos::ExprIoPos;
use std::fs;

#[test]
fn test_expr_io_pos() {
    let data = fs::read("../../src/expr_io_pos.bin").expect("Unable to read data.");
    let reader = BytesReader::new(&data[..]);
    let r = ExprIoPos::default().read(&reader, None, KStructUnit::parent_stack()).unwrap();
    // assert_eq!(r.substream1.my_str, "CURIOSITY");
    // assert_eq!(r.substream1.body, vec!([0x11, 0x22, 0x33, 0x44]));
    // assert_eq!(r.substream1.number, 66);
    // assert_eq!(r.substream2.my_str, "KILLED");
    // assert_eq!(r.substream2.body, vec!([0x61, 0x20, 0x63, 0x61, 0x74]));
    // assert_eq!(r.substream2.number, 103);
}
