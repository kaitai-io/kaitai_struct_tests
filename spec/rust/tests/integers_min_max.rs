// Autogenerated from KST: please remove this line if doing any edits by hand!

extern crate kaitai_struct;
extern crate rust;

use kaitai_struct::KaitaiStruct;
use rust::IntegersMinMax;

#[test]
fn test_integers_min_max() {
    if let Ok(r) = IntegersMinMax::from_file("src/integers_min_max.bin") {

        assert_eq!(r.unsigned_min.u1, 0);
        assert_eq!(r.unsigned_min.u2le, 0);
        assert_eq!(r.unsigned_min.u4le, 0);
        assert_eq!(r.unsigned_min.u8le, 0);
        assert_eq!(r.unsigned_min.u2be, 0);
        assert_eq!(r.unsigned_min.u4be, 0);
        assert_eq!(r.unsigned_min.u8be, 0);
        assert_eq!(r.unsigned_max.u1, 255);
        assert_eq!(r.unsigned_max.u2le, 65535);
        assert_eq!(r.unsigned_max.u4le, 4294967295);
        assert_eq!(r.unsigned_max.u8le, 18446744073709551615);
        assert_eq!(r.unsigned_max.u2be, 65535);
        assert_eq!(r.unsigned_max.u4be, 4294967295);
        assert_eq!(r.unsigned_max.u8be, 18446744073709551615);
        assert_eq!(r.signed_min.s1, -128);
        assert_eq!(r.signed_min.s2le, -32768);
        assert_eq!(r.signed_min.s4le, -2147483648);
        assert_eq!(r.signed_min.s8le, -9223372036854775808);
        assert_eq!(r.signed_min.s2be, -32768);
        assert_eq!(r.signed_min.s4be, -2147483648);
        assert_eq!(r.signed_min.s8be, -9223372036854775808);
        assert_eq!(r.signed_max.s1, 127);
        assert_eq!(r.signed_max.s2le, 32767);
        assert_eq!(r.signed_max.s4le, 2147483647);
        assert_eq!(r.signed_max.s8le, 9223372036854775807);
        assert_eq!(r.signed_max.s2be, 32767);
        assert_eq!(r.signed_max.s4be, 2147483647);
        assert_eq!(r.signed_max.s8be, 9223372036854775807);
    }
}
