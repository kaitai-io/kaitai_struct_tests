// Autogenerated from KST: please remove this line if doing any edits by hand!

use kaitai::{BytesReader, KStruct, KStructUnit};
use kaitai_test::if_values::*;
use std::fs;

#[test]
fn test_if_values() {
    let data = fs::read("../../src/fixed_struct.bin").expect("Unable to read data.");
    let reader = BytesReader::new(&data[..]);
    let mut r = IfValues::default();
    r.read(&reader, None, KStructUnit::parent_stack()).expect("Unable to parse data.");
    // assert_eq!(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(codes)),IntNum(0)),identifier(opcode)), IntNum(80))
    // assert_eq!(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(codes)),IntNum(0)),identifier(half_opcode)), IntNum(40))
    // assert_eq!(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(codes)),IntNum(1)),identifier(opcode)), IntNum(65))
    // nullAsset(r.codes[1].half_opcode);
    // assert_eq!(Attribute(Subscript(Attribute(Name(identifier(q1w2e3)),identifier(codes)),IntNum(2)),identifier(opcode)), IntNum(67))
    // nullAsset(r.codes[2].half_opcode);
}
