#!/usr/bin/env ruby

require 'fileutils'
require_relative 'builder/shellconfig'

# Common helper method: converts `lower_under_score` to `UpperCamelCase`
def underscore_to_ucamelcase(s)
  s.split(/_/).map { |x| x.capitalize }.join
end

def glob_spec_files(lang)
  case lang
  when 'cpp_stl_98', 'cpp_stl_11'
    Dir.glob("spec/#{lang}/test_*.cpp")
  when 'csharp'
    Dir.glob('spec/csharp/kaitai_struct_csharp_tests/tests/Spec*.cs')
  when 'go'
    Dir.glob('spec/go/spec/*_test.go')
  when 'go-write'
    Dir.glob('spec/go/specwrite/*_test.go')
  when 'java'
    Dir.glob('spec/java/src/**/spec/Test*.java')
  when 'java-write'
    Dir.glob('spec/java/src/**/specwrite/Test*.java')
  when 'javascript'
    Dir.glob('spec/javascript/test_*.js')
  when 'lua'
    Dir.glob('spec/lua/test_*.lua')
  when 'nim'
    Dir.glob('spec/nim/t*.nim')
  when 'perl'
    Dir.glob('spec/perl/Test*.t')
  when 'php'
    Dir.glob('spec/php/*Test.php')
  when 'python'
    Dir.glob("spec/python/spec/test_*.py")
  when 'python-write'
    Dir.glob("spec/python/specwrite/test_*.py")
  when 'construct'
    Dir.glob('spec/construct/**/test_*.py')
  when 'ruby'
    Dir.glob('spec/ruby/**/*_spec.rb')
  else
    raise "Unable to handle language #{@lang.inspect}"
  end
end

def spec_file_to_test_name(lang, fn)
  case lang
  when 'cpp_stl_98', 'cpp_stl_11'
    raise "Unable to extract test name from #{fn.inspect}" unless fn =~ /^test_(.*?)\.cpp$/
    underscore_to_ucamelcase($1)
  when 'csharp'
    raise "Unable to extract test name from #{fn.inspect}" unless fn =~ /^Spec(.*?)\.cs$/
    $1
  when 'go', 'go-write' 
    raise "Unable to extract test name from #{fn.inspect}" unless fn =~ /^(.*?)_test\.go$/
    underscore_to_ucamelcase($1)
  when 'java', 'java-write'
    raise "Unable to extract test name from #{fn.inspect}" unless fn =~ /^Test(.*?)\.java$/
    $1
  when 'javascript'
    raise "Unable to extract test name from #{fn.inspect}" unless fn =~ /^test_(.*?)\.js$/
    underscore_to_ucamelcase($1)
  when 'lua'
    raise "Unable to extract test name from #{fn.inspect}" unless fn =~ /^test_(.*?)\.lua$/
    underscore_to_ucamelcase($1)
  when 'nim'
    raise "Unable to extract test name from #{fn.inspect}" unless fn =~ /^t(.*?)\.nim$/
    underscore_to_ucamelcase($1)
  when 'perl'
    raise "Unable to extract test name from #{fn.inspect}" unless fn =~ /^Test(.*?)\.t$/
    $1
  when 'php'
    raise "Unable to extract test name from #{fn.inspect}" unless fn =~ /^(.*?)Test\.php$/
    $1
  when 'python', 'python-write', 'construct'
    raise "Unable to extract test name from #{fn.inspect}" unless fn =~ /^test_(.*?)\.py$/
    underscore_to_ucamelcase($1)
  when 'ruby'
    raise "Unable to extract test name from #{fn.inspect}" unless fn =~ /^(.*?)_spec\.rb$/
    underscore_to_ucamelcase($1)
  else
    raise "Unable to handle language #{lang.inspect}"
  end
end

@config = ShellConfig.new

if ARGV.count != 1
  puts "Usage: #{$PROGRAM_NAME} $LANGUAGE"
  exit 1
end
@lang = ARGV[0]

files = glob_spec_files(@lang).reject { |fn|
  not (File.binread(fn) =~ /Autogenerated from KST: please remove this line/)
}
testcases = files.map { |fn| spec_file_to_test_name(@lang, File.basename(fn)) }

FileUtils::mkdir_p("#{@config['TEST_OUT_DIR']}/#{@lang}")
File.open("#{@config['TEST_OUT_DIR']}/#{@lang}/kst_adoption.log", 'w') { |f|
  testcases.sort.each { |tc| f.puts tc }
}
